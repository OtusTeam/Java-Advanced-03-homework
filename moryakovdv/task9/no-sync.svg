<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2262" onload="init(evt)" viewBox="0 0 1200 2262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2245"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2245"> </text>
<g id="frames">
<g>
<title>all (4,115 samples, 100.00%)</title><rect x="10.0" y="2211.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="2222.0">all</text>
</g>
<g>
<title>LinearScan::interval_cmp(Interval**, Interval**) (1 samples, 0.02%)</title><rect x="10.0" y="2195.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="2206.0"></text>
</g>
<g>
<title>PerfEvents::destroyForThread(int) (2 samples, 0.05%)</title><rect x="10.3" y="2195.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="2206.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (4 samples, 0.10%)</title><rect x="10.9" y="2195.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.9" y="2206.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.05%)</title><rect x="10.9" y="2179.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.9" y="2190.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.02%)</title><rect x="10.9" y="2163.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.9" y="2174.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="11.1" y="2163.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.1" y="2174.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="11.4" y="2179.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.4" y="2190.0"></text>
</g>
<g>
<title>VMError::is_error_reported() (1 samples, 0.02%)</title><rect x="11.4" y="2163.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.4" y="2174.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.02%)</title><rect x="11.7" y="2163.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.7" y="2174.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="11.7" y="2147.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.7" y="2158.0"></text>
</g>
<g>
<title>Runtime1::exception_handler_for_pc(JavaThread*) (1 samples, 0.02%)</title><rect x="12.0" y="2195.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.0" y="2206.0"></text>
</g>
<g>
<title>exception_handler_for_pc_helper(JavaThread*, oopDesc*, unsigned char*, nmethod*&amp;) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="12.0" y="2179.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="15.0" y="2190.0"></text>
</g>
<g>
<title>SafepointMechanism::update_poll_values(JavaThread*) (1 samples, 0.02%)</title><rect x="12.0" y="2163.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.0" y="2174.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.02%)</title><rect x="12.3" y="2195.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.3" y="2206.0"></text>
</g>
<g>
<title>SharedRuntime::monitor_enter_helper(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="12.3" y="2179.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.3" y="2190.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="12.3" y="2163.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.3" y="2174.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="12.3" y="2147.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.3" y="2158.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(JavaThread*) (1 samples, 0.02%)</title><rect x="12.3" y="2131.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.3" y="2142.0"></text>
</g>
<g>
<title>SafeFetch32_impl (1 samples, 0.02%)</title><rect x="12.3" y="2115.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="15.3" y="2126.0"></text>
</g>
<g>
<title>[GC_active] (3 samples, 0.07%)</title><rect x="12.6" y="2195.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="15.6" y="2206.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="12.6" y="2179.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="15.6" y="2190.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="12.6" y="2163.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="15.6" y="2174.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.07%)</title><rect x="12.6" y="2147.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.6" y="2158.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (3 samples, 0.07%)</title><rect x="12.6" y="2131.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.6" y="2142.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.07%)</title><rect x="12.6" y="2115.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.6" y="2126.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.07%)</title><rect x="12.6" y="2099.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.6" y="2110.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) (3 samples, 0.07%)</title><rect x="12.6" y="2083.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.6" y="2094.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*) (3 samples, 0.07%)</title><rect x="12.6" y="2067.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.6" y="2078.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.07%)</title><rect x="12.6" y="2051.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.6" y="2062.0"></text>
</g>
<g>
<title>JVMState::same_calls_as(JVMState const*) const (1 samples, 0.02%)</title><rect x="12.6" y="2035.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.05%)</title><rect x="12.9" y="2035.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.9" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.02%)</title><rect x="12.9" y="2019.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.9" y="2030.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.02%)</title><rect x="13.2" y="2019.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.2" y="2030.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="13.2" y="2003.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.2" y="2014.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="13.2" y="1987.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.2" y="1998.0"></text>
</g>
<g>
<title>[deoptimization] (2 samples, 0.05%)</title><rect x="13.4" y="2195.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.4" y="2206.0"></text>
</g>
<g>
<title>Deoptimization::uncommon_trap(JavaThread*, int, int) (2 samples, 0.05%)</title><rect x="13.4" y="2179.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.4" y="2190.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*, int) (2 samples, 0.05%)</title><rect x="13.4" y="2163.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.4" y="2174.0"></text>
</g>
<g>
<title>compiledVFrame::sender() const (1 samples, 0.02%)</title><rect x="13.4" y="2147.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.4" y="2158.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(RegisterMap const*) (1 samples, 0.02%)</title><rect x="13.4" y="2131.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.4" y="2142.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="13.4" y="2115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="16.4" y="2126.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="13.4" y="2099.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="16.4" y="2110.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="13.4" y="2083.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="16.4" y="2094.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="13.4" y="2067.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.4" y="2078.0"></text>
</g>
<g>
<title>vframeArray::allocate(JavaThread*, int, GrowableArray&lt;compiledVFrame*&gt;*, RegisterMap*, frame, frame, frame, bool) (1 samples, 0.02%)</title><rect x="13.7" y="2147.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.7" y="2158.0"></text>
</g>
<g>
<title>vframeArray::fill_in(JavaThread*, int, GrowableArray&lt;compiledVFrame*&gt;*, RegisterMap const*, bool) (1 samples, 0.02%)</title><rect x="13.7" y="2131.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.7" y="2142.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.02%)</title><rect x="14.0" y="2195.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="17.0" y="2206.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.12%)</title><rect x="14.3" y="2195.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="17.3" y="2206.0"></text>
</g>
<g>
<title>Interpreter (3 samples, 0.07%)</title><rect x="14.3" y="2179.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="17.3" y="2190.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="15.2" y="2179.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="18.2" y="2190.0"></text>
</g>
<g>
<title>exception_handler_for_pc_helper(JavaThread*, oopDesc*, unsigned char*, nmethod*&amp;) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="15.4" y="2179.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="18.4" y="2190.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.46%)</title><rect x="15.7" y="2195.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="18.7" y="2206.0"></text>
</g>
<g>
<title>CFGElement::is_loop() (1 samples, 0.02%)</title><rect x="15.7" y="2179.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.7" y="2190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="15.7" y="2163.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="18.7" y="2174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="15.7" y="2147.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="18.7" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="15.7" y="2131.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="18.7" y="2142.0"></text>
</g>
<g>
<title>__vsnprintf_internal (1 samples, 0.02%)</title><rect x="15.7" y="2115.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="18.7" y="2126.0"></text>
</g>
<g>
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="15.7" y="2099.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="18.7" y="2110.0"></text>
</g>
<g>
<title>PerfEvents::destroyForThread(int) (4 samples, 0.10%)</title><rect x="16.0" y="2179.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.0" y="2190.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.07%)</title><rect x="16.3" y="2163.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.3" y="2174.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.07%)</title><rect x="16.3" y="2147.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="19.3" y="2158.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.07%)</title><rect x="16.3" y="2131.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.3" y="2142.0"></text>
</g>
<g>
<title>do_user_addr_fault (3 samples, 0.07%)</title><rect x="16.3" y="2115.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="19.3" y="2126.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="16.9" y="2099.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.9" y="2110.0"></text>
</g>
<g>
<title>pmd_devmap_trans_unstable (1 samples, 0.02%)</title><rect x="16.9" y="2083.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="19.9" y="2094.0"></text>
</g>
<g>
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="17.2" y="2179.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="20.2" y="2190.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="17.5" y="2179.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="20.5" y="2190.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.02%)</title><rect x="17.7" y="2179.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="20.7" y="2190.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="17.7" y="2163.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="20.7" y="2174.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="17.7" y="2147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="20.7" y="2158.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="17.7" y="2131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="20.7" y="2142.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="17.7" y="2115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="20.7" y="2126.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="17.7" y="2099.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="20.7" y="2110.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="17.7" y="2083.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="20.7" y="2094.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="17.7" y="2067.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="20.7" y="2078.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.10%)</title><rect x="18.0" y="2179.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.0" y="2190.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="18.0" y="2163.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="21.0" y="2174.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="18.0" y="2147.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="21.0" y="2158.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.10%)</title><rect x="18.0" y="2131.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.0" y="2142.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.10%)</title><rect x="18.0" y="2115.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="21.0" y="2126.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="18.0" y="2099.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.0" y="2110.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.07%)</title><rect x="18.3" y="2099.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="21.3" y="2110.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="18.6" y="2083.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="21.6" y="2094.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.02%)</title><rect x="18.6" y="2067.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="21.6" y="2078.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="18.6" y="2051.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="21.6" y="2062.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="18.6" y="2035.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="21.6" y="2046.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="18.9" y="2067.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="21.9" y="2078.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="18.9" y="2051.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.9" y="2062.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="18.9" y="2035.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="21.9" y="2046.0"></text>
</g>
<g>
<title>__vsnprintf_internal (3 samples, 0.07%)</title><rect x="19.2" y="2179.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="22.2" y="2190.0"></text>
</g>
<g>
<title>__vfprintf_internal (3 samples, 0.07%)</title><rect x="19.2" y="2163.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="22.2" y="2174.0"></text>
</g>
<g>
<title>ciBaseObject::is_symbol() const (1 samples, 0.02%)</title><rect x="20.0" y="2179.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.0" y="2190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="20.0" y="2163.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="23.0" y="2174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="20.0" y="2147.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="23.0" y="2158.0"></text>
</g>
<g>
<title>msort_with_tmp.part.0 (1 samples, 0.02%)</title><rect x="20.0" y="2131.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.0" y="2142.0"></text>
</g>
<g>
<title>sort_dep_arg_4(ciBaseObject**, ciBaseObject**) (1 samples, 0.02%)</title><rect x="20.0" y="2115.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="23.0" y="2126.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.05%)</title><rect x="20.3" y="2179.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="23.3" y="2190.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="20.3" y="2163.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="23.3" y="2174.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="20.3" y="2147.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.3" y="2158.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="20.3" y="2131.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="23.3" y="2142.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="20.3" y="2115.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="23.3" y="2126.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="20.3" y="2099.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.3" y="2110.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="20.3" y="2083.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.3" y="2094.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="20.3" y="2067.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="23.3" y="2078.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="20.3" y="2051.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="23.3" y="2062.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="20.6" y="2083.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.6" y="2094.0"></text>
</g>
<g>
<title>read (1 samples, 0.02%)</title><rect x="20.9" y="2179.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="23.9" y="2190.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="20.9" y="2163.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="23.9" y="2174.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="20.9" y="2147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.9" y="2158.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="20.9" y="2131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.9" y="2142.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.02%)</title><rect x="20.9" y="2115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="23.9" y="2126.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.02%)</title><rect x="20.9" y="2099.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="23.9" y="2110.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.02%)</title><rect x="20.9" y="2083.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="23.9" y="2094.0"></text>
</g>
<g>
<title>kernfs_fop_read (1 samples, 0.02%)</title><rect x="20.9" y="2067.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="23.9" y="2078.0"></text>
</g>
<g>
<title>seq_read (1 samples, 0.02%)</title><rect x="20.9" y="2051.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.9" y="2062.0"></text>
</g>
<g>
<title>kernfs_seq_show (1 samples, 0.02%)</title><rect x="20.9" y="2035.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="23.9" y="2046.0"></text>
</g>
<g>
<title>cgroup_seqfile_show (1 samples, 0.02%)</title><rect x="20.9" y="2019.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="23.9" y="2030.0"></text>
</g>
<g>
<title>memcg_stat_show (1 samples, 0.02%)</title><rect x="20.9" y="2003.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="23.9" y="2014.0"></text>
</g>
<g>
<title>seq_printf (1 samples, 0.02%)</title><rect x="20.9" y="1987.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.9" y="1998.0"></text>
</g>
<g>
<title>seq_vprintf (1 samples, 0.02%)</title><rect x="20.9" y="1971.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.9" y="1982.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.02%)</title><rect x="20.9" y="1955.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.9" y="1966.0"></text>
</g>
<g>
<title>number (1 samples, 0.02%)</title><rect x="20.9" y="1939.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="23.9" y="1950.0"></text>
</g>
<g>
<title>[unknown_Java] (129 samples, 3.13%)</title><rect x="21.2" y="2195.0" width="37.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="24.2" y="2206.0">[un..</text>
</g>
<g>
<title>Interpreter (118 samples, 2.87%)</title><rect x="21.2" y="2179.0" width="33.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="24.2" y="2190.0">In..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.02%)</title><rect x="55.0" y="2179.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="58.0" y="2190.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, JavaThread*, BasicLock*) (1 samples, 0.02%)</title><rect x="55.0" y="2163.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="58.0" y="2174.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.12%)</title><rect x="55.3" y="2179.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="58.3" y="2190.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="55.3" y="2163.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.3" y="2174.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="55.3" y="2147.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="58.3" y="2158.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.12%)</title><rect x="55.3" y="2131.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="58.3" y="2142.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.10%)</title><rect x="55.6" y="2115.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.6" y="2126.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.10%)</title><rect x="55.6" y="2099.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="58.6" y="2110.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.07%)</title><rect x="55.9" y="2083.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.9" y="2094.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.07%)</title><rect x="55.9" y="2067.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="58.9" y="2078.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.07%)</title><rect x="55.9" y="2051.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="58.9" y="2062.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (5 samples, 0.12%)</title><rect x="56.7" y="2179.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="59.7" y="2190.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="58.2" y="2195.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="61.2" y="2206.0"></text>
</g>
<g>
<title>__mmap (2 samples, 0.05%)</title><rect x="58.5" y="2195.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="61.5" y="2206.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="58.5" y="2179.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.5" y="2190.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="58.5" y="2163.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="61.5" y="2174.0"></text>
</g>
<g>
<title>__x64_sys_mmap (2 samples, 0.05%)</title><rect x="58.5" y="2147.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.5" y="2158.0"></text>
</g>
<g>
<title>ksys_mmap_pgoff (2 samples, 0.05%)</title><rect x="58.5" y="2131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="61.5" y="2142.0"></text>
</g>
<g>
<title>vm_mmap_pgoff (2 samples, 0.05%)</title><rect x="58.5" y="2115.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="61.5" y="2126.0"></text>
</g>
<g>
<title>do_mmap (1 samples, 0.02%)</title><rect x="58.5" y="2099.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="61.5" y="2110.0"></text>
</g>
<g>
<title>mmap_region (1 samples, 0.02%)</title><rect x="58.5" y="2083.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.5" y="2094.0"></text>
</g>
<g>
<title>down_write_killable (1 samples, 0.02%)</title><rect x="58.7" y="2099.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="61.7" y="2110.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="58.7" y="2083.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="61.7" y="2094.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.05%)</title><rect x="59.0" y="2195.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="62.0" y="2206.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="59.3" y="2179.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="62.3" y="2190.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="59.3" y="2163.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="62.3" y="2174.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="59.3" y="2147.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="62.3" y="2158.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.02%)</title><rect x="59.3" y="2131.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="62.3" y="2142.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,732 samples, 66.39%)</title><rect x="59.6" y="2195.0" width="783.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.6" y="2206.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.10%)</title><rect x="59.6" y="2179.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.6" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.10%)</title><rect x="59.6" y="2163.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.6" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.05%)</title><rect x="59.6" y="2147.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.6" y="2158.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariPool$PoolEntryCreator.call (1 samples, 0.02%)</title><rect x="59.9" y="2131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.9" y="2142.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariPool$PoolEntryCreator.call (1 samples, 0.02%)</title><rect x="59.9" y="2115.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.9" y="2126.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariPool$PoolEntryCreator.shouldContinueCreating (1 samples, 0.02%)</title><rect x="59.9" y="2099.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.9" y="2110.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariPool.getTotalConnections (1 samples, 0.02%)</title><rect x="59.9" y="2083.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.9" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.05%)</title><rect x="60.2" y="2147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.2" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.poll (2 samples, 0.05%)</title><rect x="60.2" y="2131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.2" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (1 samples, 0.02%)</title><rect x="60.5" y="2115.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.5" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (1 samples, 0.02%)</title><rect x="60.5" y="2099.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.5" y="2110.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/Acceptor.run (58 samples, 1.41%)</title><rect x="60.8" y="2179.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.8" y="2190.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint.serverSocketAccept (23 samples, 0.56%)</title><rect x="61.0" y="2163.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.0" y="2174.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint.serverSocketAccept (23 samples, 0.56%)</title><rect x="61.0" y="2147.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.0" y="2158.0"></text>
</g>
<g>
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="61.0" y="2131.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="64.0" y="2142.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.02%)</title><rect x="61.3" y="2131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.3" y="2142.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.02%)</title><rect x="61.3" y="2115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.3" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (21 samples, 0.51%)</title><rect x="61.6" y="2131.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.6" y="2142.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (2 samples, 0.05%)</title><rect x="61.9" y="2115.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="64.9" y="2126.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="61.9" y="2099.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="64.9" y="2110.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, JavaThread*) (1 samples, 0.02%)</title><rect x="62.2" y="2099.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="65.2" y="2110.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="62.2" y="2083.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="65.2" y="2094.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="62.2" y="2067.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="65.2" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.begin (2 samples, 0.05%)</title><rect x="62.5" y="2115.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.5" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="62.5" y="2099.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.5" y="2110.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="62.5" y="2083.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="65.5" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.ensureOpen (1 samples, 0.02%)</title><rect x="62.8" y="2099.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.8" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.02%)</title><rect x="62.8" y="2083.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.8" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.finishAccept (8 samples, 0.19%)</title><rect x="63.0" y="2115.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.0" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (8 samples, 0.19%)</title><rect x="63.0" y="2099.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.0" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (6 samples, 0.15%)</title><rect x="63.6" y="2083.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.6" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (3 samples, 0.07%)</title><rect x="63.9" y="2067.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.9" y="2078.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (3 samples, 0.07%)</title><rect x="63.9" y="2051.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="66.9" y="2062.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (3 samples, 0.07%)</title><rect x="63.9" y="2035.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="66.9" y="2046.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="63.9" y="2019.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="66.9" y="2030.0"></text>
</g>
<g>
<title>jni_NewObject (2 samples, 0.05%)</title><rect x="64.2" y="2019.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="67.2" y="2030.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.02%)</title><rect x="64.2" y="2003.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="67.2" y="2014.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="64.2" y="1987.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="67.2" y="1998.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="64.5" y="2003.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="67.5" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localPort (2 samples, 0.05%)</title><rect x="64.8" y="2067.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.8" y="2078.0"></text>
</g>
<g>
<title>__GI___getsockname (2 samples, 0.05%)</title><rect x="64.8" y="2051.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="67.8" y="2062.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="65.1" y="2035.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="68.1" y="2046.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="65.1" y="2019.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="68.1" y="2030.0"></text>
</g>
<g>
<title>__x64_sys_getsockname (1 samples, 0.02%)</title><rect x="65.1" y="2003.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.1" y="2014.0"></text>
</g>
<g>
<title>__sys_getsockname (1 samples, 0.02%)</title><rect x="65.1" y="1987.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="68.1" y="1998.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="65.1" y="1971.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="68.1" y="1982.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="65.1" y="1955.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="68.1" y="1966.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="65.1" y="1939.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="68.1" y="1950.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.implAccept (8 samples, 0.19%)</title><rect x="65.3" y="2115.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.3" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.accept (8 samples, 0.19%)</title><rect x="65.3" y="2099.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.3" y="2110.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_accept (3 samples, 0.07%)</title><rect x="65.3" y="2083.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="68.3" y="2094.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (1 samples, 0.02%)</title><rect x="65.3" y="2067.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="68.3" y="2078.0"></text>
</g>
<g>
<title>jni_NewObject (1 samples, 0.02%)</title><rect x="65.3" y="2051.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="68.3" y="2062.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, JavaThread*) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="65.3" y="2035.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="68.3" y="2046.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, JavaThread*) (1 samples, 0.02%)</title><rect x="65.3" y="2019.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="68.3" y="2030.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="65.3" y="2003.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="68.3" y="2014.0"></text>
</g>
<g>
<title>jni_NewObject (1 samples, 0.02%)</title><rect x="65.6" y="2067.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="68.6" y="2078.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.02%)</title><rect x="65.9" y="2067.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="68.9" y="2078.0"></text>
</g>
<g>
<title>accept (5 samples, 0.12%)</title><rect x="66.2" y="2083.0" width="1.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="69.2" y="2094.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="66.5" y="2067.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.5" y="2078.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="66.5" y="2051.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="69.5" y="2062.0"></text>
</g>
<g>
<title>__x64_sys_accept (4 samples, 0.10%)</title><rect x="66.5" y="2035.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.5" y="2046.0"></text>
</g>
<g>
<title>__sys_accept4 (3 samples, 0.07%)</title><rect x="66.5" y="2019.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.5" y="2030.0"></text>
</g>
<g>
<title>inet_accept (1 samples, 0.02%)</title><rect x="66.5" y="2003.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.5" y="2014.0"></text>
</g>
<g>
<title>inet_csk_accept (1 samples, 0.02%)</title><rect x="66.5" y="1987.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="69.5" y="1998.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="66.5" y="1971.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="69.5" y="1982.0"></text>
</g>
<g>
<title>sock_alloc (1 samples, 0.02%)</title><rect x="66.8" y="2003.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.8" y="2014.0"></text>
</g>
<g>
<title>new_inode_pseudo (1 samples, 0.02%)</title><rect x="66.8" y="1987.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.8" y="1998.0"></text>
</g>
<g>
<title>alloc_inode (1 samples, 0.02%)</title><rect x="66.8" y="1971.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.8" y="1982.0"></text>
</g>
<g>
<title>inode_init_always (1 samples, 0.02%)</title><rect x="66.8" y="1955.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="69.8" y="1966.0"></text>
</g>
<g>
<title>sock_alloc_file (1 samples, 0.02%)</title><rect x="67.1" y="2003.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="70.1" y="2014.0"></text>
</g>
<g>
<title>alloc_file_pseudo (1 samples, 0.02%)</title><rect x="67.1" y="1987.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.1" y="1998.0"></text>
</g>
<g>
<title>alloc_file (1 samples, 0.02%)</title><rect x="67.1" y="1971.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="70.1" y="1982.0"></text>
</g>
<g>
<title>alloc_empty_file (1 samples, 0.02%)</title><rect x="67.1" y="1955.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="70.1" y="1966.0"></text>
</g>
<g>
<title>__alloc_file (1 samples, 0.02%)</title><rect x="67.1" y="1939.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.1" y="1950.0"></text>
</g>
<g>
<title>security_file_alloc (1 samples, 0.02%)</title><rect x="67.1" y="1923.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="70.1" y="1934.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="67.1" y="1907.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="70.1" y="1918.0"></text>
</g>
<g>
<title>fd_install (1 samples, 0.02%)</title><rect x="67.4" y="2019.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.4" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint.setSocketOptions (34 samples, 0.83%)</title><rect x="67.6" y="2163.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.6" y="2174.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="67.9" y="2147.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="70.9" y="2158.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="67.9" y="2131.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="70.9" y="2142.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="67.9" y="2115.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="70.9" y="2126.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="67.9" y="2099.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="70.9" y="2110.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 0.02%)</title><rect x="67.9" y="2083.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="70.9" y="2094.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint.setSocketOptions (32 samples, 0.78%)</title><rect x="68.2" y="2147.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.2" y="2158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.configureBlocking (1 samples, 0.02%)</title><rect x="69.4" y="2131.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.4" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implConfigureBlocking (1 samples, 0.02%)</title><rect x="69.4" y="2115.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.4" y="2126.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="69.4" y="2099.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="72.4" y="2110.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="69.4" y="2083.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="72.4" y="2094.0"></text>
</g>
<g>
<title>frame::interpreter_frame_tos_at(int) const (1 samples, 0.02%)</title><rect x="69.4" y="2067.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="72.4" y="2078.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.&lt;init&gt; (5 samples, 0.12%)</title><rect x="69.6" y="2131.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.6" y="2142.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.&lt;init&gt; (5 samples, 0.12%)</title><rect x="69.6" y="2115.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.6" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndIncrement (1 samples, 0.02%)</title><rect x="70.2" y="2099.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.2" y="2110.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/WriteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="70.5" y="2099.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.5" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingDeque.&lt;init&gt; (2 samples, 0.05%)</title><rect x="70.5" y="2083.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.5" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingDeque.&lt;init&gt; (1 samples, 0.02%)</title><rect x="70.8" y="2067.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.8" y="2078.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="70.8" y="2051.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.8" y="2062.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.register (9 samples, 0.22%)</title><rect x="71.1" y="2131.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.1" y="2142.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.addEvent (8 samples, 0.19%)</title><rect x="71.4" y="2115.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.4" y="2126.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="71.4" y="2099.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.4" y="2110.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/collections/SynchronizedQueue.offer (1 samples, 0.02%)</title><rect x="71.7" y="2099.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.7" y="2110.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="71.7" y="2083.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="74.7" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.15%)</title><rect x="71.9" y="2099.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.9" y="2110.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="71.9" y="2083.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="74.9" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EventFD.set (5 samples, 0.12%)</title><rect x="72.2" y="2083.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.2" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EventFD.set0 (5 samples, 0.12%)</title><rect x="72.2" y="2067.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.2" y="2078.0"></text>
</g>
<g>
<title>__write (5 samples, 0.12%)</title><rect x="72.2" y="2051.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="75.2" y="2062.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="72.2" y="2035.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="75.2" y="2046.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="72.2" y="2019.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.2" y="2030.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.10%)</title><rect x="72.5" y="2003.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="75.5" y="2014.0"></text>
</g>
<g>
<title>ksys_write (4 samples, 0.10%)</title><rect x="72.5" y="1987.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="75.5" y="1998.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.10%)</title><rect x="72.5" y="1971.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.5" y="1982.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.10%)</title><rect x="72.5" y="1955.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="75.5" y="1966.0"></text>
</g>
<g>
<title>eventfd_write (4 samples, 0.10%)</title><rect x="72.5" y="1939.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="75.5" y="1950.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketBufferHandler.&lt;init&gt; (2 samples, 0.05%)</title><rect x="73.7" y="2131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.7" y="2142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="73.9" y="2115.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.9" y="2126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="73.9" y="2099.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.9" y="2110.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="73.9" y="2083.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="76.9" y="2094.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="73.9" y="2067.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="76.9" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="73.9" y="2051.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="76.9" y="2062.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="73.9" y="2035.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="76.9" y="2046.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketProperties.setProperties (8 samples, 0.19%)</title><rect x="74.2" y="2131.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.2" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setSoLinger (3 samples, 0.07%)</title><rect x="74.8" y="2115.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.8" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setIntOption (3 samples, 0.07%)</title><rect x="74.8" y="2099.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.8" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (3 samples, 0.07%)</title><rect x="74.8" y="2083.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.8" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (3 samples, 0.07%)</title><rect x="74.8" y="2067.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.8" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (3 samples, 0.07%)</title><rect x="74.8" y="2051.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.8" y="2062.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="75.1" y="2035.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="78.1" y="2046.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="75.1" y="2019.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="78.1" y="2030.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="75.1" y="2003.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="78.1" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (1 samples, 0.02%)</title><rect x="75.4" y="2035.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.4" y="2046.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.02%)</title><rect x="75.4" y="2019.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="78.4" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="75.4" y="2003.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="78.4" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="75.4" y="1987.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="78.4" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.02%)</title><rect x="75.4" y="1971.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.4" y="1982.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.02%)</title><rect x="75.4" y="1955.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="78.4" y="1966.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="75.4" y="1939.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="78.4" y="1950.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="75.4" y="1923.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="78.4" y="1934.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="75.4" y="1907.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="78.4" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setTcpNoDelay (3 samples, 0.07%)</title><rect x="75.7" y="2115.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.7" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setBooleanOption (3 samples, 0.07%)</title><rect x="75.7" y="2099.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.7" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (2 samples, 0.05%)</title><rect x="76.0" y="2083.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.0" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (2 samples, 0.05%)</title><rect x="76.0" y="2067.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.0" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (2 samples, 0.05%)</title><rect x="76.0" y="2051.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.0" y="2062.0"></text>
</g>
<g>
<title>sun/net/ext/ExtendedSocketOptions.isOptionSupported (1 samples, 0.02%)</title><rect x="76.2" y="2035.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.2" y="2046.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.02%)</title><rect x="76.2" y="2019.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.2" y="2030.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.02%)</title><rect x="76.2" y="2003.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.2" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.02%)</title><rect x="76.2" y="1987.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.2" y="1998.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="76.2" y="1971.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.2" y="1982.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (3 samples, 0.07%)</title><rect x="76.5" y="2131.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.5" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.create (3 samples, 0.07%)</title><rect x="76.5" y="2115.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.5" y="2126.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.07%)</title><rect x="76.5" y="2099.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.5" y="2110.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (2 samples, 0.05%)</title><rect x="76.5" y="2083.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.5" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$$Lambda$1566.0x00007f9a5c529b00.run (2 samples, 0.05%)</title><rect x="76.5" y="2067.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.5" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.lambda$create$0 (1 samples, 0.02%)</title><rect x="76.8" y="2051.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.8" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.&lt;init&gt; (1 samples, 0.02%)</title><rect x="76.8" y="2035.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.8" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/DummySocketImpl.create (1 samples, 0.02%)</title><rect x="76.8" y="2019.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.02%)</title><rect x="77.1" y="2083.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.1" y="2094.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.02%)</title><rect x="77.1" y="2067.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="80.1" y="2078.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="77.1" y="2051.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="80.1" y="2062.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.run (50 samples, 1.22%)</title><rect x="77.4" y="2179.0" width="14.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.4" y="2190.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.remove (1 samples, 0.02%)</title><rect x="78.8" y="2163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.8" y="2174.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.events (4 samples, 0.10%)</title><rect x="79.1" y="2163.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.1" y="2174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (2 samples, 0.05%)</title><rect x="79.4" y="2147.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.4" y="2158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.isBlocking (1 samples, 0.02%)</title><rect x="79.4" y="2131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.4" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.02%)</title><rect x="79.7" y="2131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.7" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.implRegister (1 samples, 0.02%)</title><rect x="79.7" y="2115.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.7" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (1 samples, 0.02%)</title><rect x="79.7" y="2099.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.7" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.isOpen (1 samples, 0.02%)</title><rect x="79.7" y="2083.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.7" y="2094.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="79.7" y="2067.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="82.7" y="2078.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="79.7" y="2051.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="82.7" y="2062.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="79.7" y="2035.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="82.7" y="2046.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="79.7" y="2019.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="82.7" y="2030.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;CallPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="79.7" y="2003.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="82.7" y="2014.0"></text>
</g>
<g>
<title>CallPredicate::apply(methodHandle const&amp;, CompLevel, int, int) (1 samples, 0.02%)</title><rect x="79.7" y="1987.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="82.7" y="1998.0"></text>
</g>
<g>
<title>VirtualSpace::reserved_size() const (1 samples, 0.02%)</title><rect x="79.7" y="1971.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="82.7" y="1982.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/collections/SynchronizedQueue.poll (1 samples, 0.02%)</title><rect x="80.0" y="2147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.0" y="2158.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.02%)</title><rect x="80.0" y="2131.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="83.0" y="2142.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.processKey (6 samples, 0.15%)</title><rect x="80.3" y="2163.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.3" y="2174.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/AbstractEndpoint.processSocket (4 samples, 0.10%)</title><rect x="80.3" y="2147.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.3" y="2158.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint.createSocketProcessor (1 samples, 0.02%)</title><rect x="80.3" y="2131.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.3" y="2142.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$SocketProcessor.&lt;init&gt; (1 samples, 0.02%)</title><rect x="80.3" y="2115.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.3" y="2126.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketProcessorBase.&lt;init&gt; (1 samples, 0.02%)</title><rect x="80.3" y="2099.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.3" y="2110.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketProcessorBase.reset (1 samples, 0.02%)</title><rect x="80.3" y="2083.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.3" y="2094.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="80.5" y="2131.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.5" y="2142.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor.executeInternal (3 samples, 0.07%)</title><rect x="80.5" y="2115.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.5" y="2126.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/TaskQueue.offer (1 samples, 0.02%)</title><rect x="80.8" y="2099.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.8" y="2110.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/TaskQueue.offer (1 samples, 0.02%)</title><rect x="80.8" y="2083.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.8" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="80.8" y="2067.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.8" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.02%)</title><rect x="80.8" y="2051.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.8" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="80.8" y="2035.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.8" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="80.8" y="2019.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.8" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.getAndUnsetStatus (1 samples, 0.02%)</title><rect x="80.8" y="2003.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.8" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor.addWorker (1 samples, 0.02%)</title><rect x="81.1" y="2099.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.1" y="2110.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 0.02%)</title><rect x="81.1" y="2083.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.1" y="2094.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (1 samples, 0.02%)</title><rect x="81.1" y="2067.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.1" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="81.1" y="2051.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="84.1" y="2062.0"></text>
</g>
<g>
<title>clone (1 samples, 0.02%)</title><rect x="81.1" y="2035.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="84.1" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="81.1" y="2019.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="84.1" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="81.1" y="2003.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="84.1" y="2014.0"></text>
</g>
<g>
<title>__x64_sys_clone (1 samples, 0.02%)</title><rect x="81.1" y="1987.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="84.1" y="1998.0"></text>
</g>
<g>
<title>_do_fork (1 samples, 0.02%)</title><rect x="81.1" y="1971.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="84.1" y="1982.0"></text>
</g>
<g>
<title>copy_process (1 samples, 0.02%)</title><rect x="81.1" y="1955.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.1" y="1966.0"></text>
</g>
<g>
<title>find_next_bit (1 samples, 0.02%)</title><rect x="81.1" y="1939.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="84.1" y="1950.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.unreg (2 samples, 0.05%)</title><rect x="81.4" y="2147.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.4" y="2158.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.reg (1 samples, 0.02%)</title><rect x="81.7" y="2131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.7" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.02%)</title><rect x="81.7" y="2115.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.7" y="2126.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_I (1 samples, 0.02%)</title><rect x="81.7" y="2099.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.7" y="2110.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.getAndSet (1 samples, 0.02%)</title><rect x="81.7" y="2083.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.7" y="2094.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.timeout (1 samples, 0.02%)</title><rect x="82.0" y="2163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.0" y="2174.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (30 samples, 0.73%)</title><rect x="82.3" y="2163.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.3" y="2174.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (30 samples, 0.73%)</title><rect x="82.3" y="2147.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.3" y="2158.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (29 samples, 0.70%)</title><rect x="82.5" y="2131.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.5" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (5 samples, 0.12%)</title><rect x="83.1" y="2115.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.1" y="2126.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="83.1" y="2099.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="86.1" y="2110.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.10%)</title><rect x="83.4" y="2099.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="86.4" y="2110.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="83.4" y="2083.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="86.4" y="2094.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="83.4" y="2067.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="86.4" y="2078.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.07%)</title><rect x="83.7" y="2051.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="86.7" y="2062.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.07%)</title><rect x="83.7" y="2035.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="86.7" y="2046.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.07%)</title><rect x="83.7" y="2019.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.7" y="2030.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.07%)</title><rect x="83.7" y="2003.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.7" y="2014.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.07%)</title><rect x="83.7" y="1987.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="86.7" y="1998.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.05%)</title><rect x="83.7" y="1971.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="86.7" y="1982.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="83.7" y="1955.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="86.7" y="1966.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="84.3" y="1971.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="87.3" y="1982.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (6 samples, 0.15%)</title><rect x="84.6" y="2115.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.6" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.getDescriptor (1 samples, 0.02%)</title><rect x="84.8" y="2099.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.8" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (1 samples, 0.02%)</title><rect x="84.8" y="2083.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.8" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.getEvents (1 samples, 0.02%)</title><rect x="85.1" y="2099.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.1" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1 samples, 0.02%)</title><rect x="85.4" y="2099.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.4" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/EventFD.reset (1 samples, 0.02%)</title><rect x="85.4" y="2083.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.4" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.02%)</title><rect x="85.4" y="2067.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.4" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.05%)</title><rect x="85.7" y="2099.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.7" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (2 samples, 0.05%)</title><rect x="85.7" y="2083.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.7" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (1 samples, 0.02%)</title><rect x="86.0" y="2067.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.0" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.02%)</title><rect x="86.0" y="2051.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.0" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.10%)</title><rect x="86.3" y="2115.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.3" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (3 samples, 0.07%)</title><rect x="86.6" y="2099.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.6" y="2110.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (3 samples, 0.07%)</title><rect x="86.6" y="2083.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="89.6" y="2094.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="86.6" y="2067.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="89.6" y="2078.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="86.6" y="2051.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="89.6" y="2062.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (2 samples, 0.05%)</title><rect x="86.9" y="2035.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.9" y="2046.0"></text>
</g>
<g>
<title>ep_insert (1 samples, 0.02%)</title><rect x="86.9" y="2019.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.9" y="2030.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="86.9" y="2003.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.9" y="2014.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="86.9" y="1987.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.9" y="1998.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="87.1" y="2019.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="90.1" y="2030.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.05%)</title><rect x="87.4" y="2115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.4" y="2126.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.02%)</title><rect x="87.7" y="2099.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.7" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (10 samples, 0.24%)</title><rect x="88.0" y="2115.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.0" y="2126.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.02%)</title><rect x="88.6" y="2099.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.6" y="2110.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.02%)</title><rect x="88.6" y="2083.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.6" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (7 samples, 0.17%)</title><rect x="88.9" y="2099.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.9" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.tryFinishClose (7 samples, 0.17%)</title><rect x="88.9" y="2083.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.9" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.tryClose (7 samples, 0.17%)</title><rect x="88.9" y="2067.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.9" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (7 samples, 0.17%)</title><rect x="88.9" y="2051.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.9" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (7 samples, 0.17%)</title><rect x="88.9" y="2035.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.9" y="2046.0"></text>
</g>
<g>
<title>__close (7 samples, 0.17%)</title><rect x="88.9" y="2019.0" width="2.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="91.9" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.17%)</title><rect x="88.9" y="2003.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.9" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.17%)</title><rect x="88.9" y="1987.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="91.9" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_close (2 samples, 0.05%)</title><rect x="88.9" y="1971.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="91.9" y="1982.0"></text>
</g>
<g>
<title>__close_fd (2 samples, 0.05%)</title><rect x="88.9" y="1955.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="91.9" y="1966.0"></text>
</g>
<g>
<title>filp_close (2 samples, 0.05%)</title><rect x="88.9" y="1939.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.9" y="1950.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.12%)</title><rect x="89.4" y="1971.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="92.4" y="1982.0"></text>
</g>
<g>
<title>task_work_run (4 samples, 0.10%)</title><rect x="89.7" y="1955.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.7" y="1966.0"></text>
</g>
<g>
<title>____fput (4 samples, 0.10%)</title><rect x="89.7" y="1939.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="92.7" y="1950.0"></text>
</g>
<g>
<title>__fput (4 samples, 0.10%)</title><rect x="89.7" y="1923.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="92.7" y="1934.0"></text>
</g>
<g>
<title>sock_close (4 samples, 0.10%)</title><rect x="89.7" y="1907.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="92.7" y="1918.0"></text>
</g>
<g>
<title>__sock_release (4 samples, 0.10%)</title><rect x="89.7" y="1891.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="92.7" y="1902.0"></text>
</g>
<g>
<title>down_write (1 samples, 0.02%)</title><rect x="89.7" y="1875.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.7" y="1886.0"></text>
</g>
<g>
<title>inet6_release (3 samples, 0.07%)</title><rect x="90.0" y="1875.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.0" y="1886.0"></text>
</g>
<g>
<title>inet_release (3 samples, 0.07%)</title><rect x="90.0" y="1859.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="93.0" y="1870.0"></text>
</g>
<g>
<title>tcp_close (3 samples, 0.07%)</title><rect x="90.0" y="1843.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.0" y="1854.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.05%)</title><rect x="90.0" y="1827.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="93.0" y="1838.0"></text>
</g>
<g>
<title>__sk_free (2 samples, 0.05%)</title><rect x="90.0" y="1811.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="93.0" y="1822.0"></text>
</g>
<g>
<title>sk_destruct (2 samples, 0.05%)</title><rect x="90.0" y="1795.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="93.0" y="1806.0"></text>
</g>
<g>
<title>__sk_destruct (2 samples, 0.05%)</title><rect x="90.0" y="1779.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="93.0" y="1790.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="90.0" y="1763.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="93.0" y="1774.0"></text>
</g>
<g>
<title>security_sk_free (1 samples, 0.02%)</title><rect x="90.3" y="1763.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="93.3" y="1774.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="90.3" y="1747.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="93.3" y="1758.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="90.6" y="1827.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="93.6" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (2 samples, 0.05%)</title><rect x="90.9" y="2163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.9" y="2174.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 0.05%)</title><rect x="90.9" y="2147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.9" y="2158.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (2 samples, 0.05%)</title><rect x="90.9" y="2131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.9" y="2142.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.02%)</title><rect x="90.9" y="2115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.9" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.02%)</title><rect x="91.2" y="2115.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.2" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (1 samples, 0.02%)</title><rect x="91.2" y="2099.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.2" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.tryFinishClose (1 samples, 0.02%)</title><rect x="91.2" y="2083.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.2" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.tryClose (1 samples, 0.02%)</title><rect x="91.2" y="2067.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.2" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (1 samples, 0.02%)</title><rect x="91.2" y="2051.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.2" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (1 samples, 0.02%)</title><rect x="91.2" y="2035.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.2" y="2046.0"></text>
</g>
<g>
<title>__close (1 samples, 0.02%)</title><rect x="91.2" y="2019.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="94.2" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="91.2" y="2003.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="94.2" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="91.2" y="1987.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="94.2" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_close (1 samples, 0.02%)</title><rect x="91.2" y="1971.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="94.2" y="1982.0"></text>
</g>
<g>
<title>__close_fd (1 samples, 0.02%)</title><rect x="91.2" y="1955.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="94.2" y="1966.0"></text>
</g>
<g>
<title>filp_close (1 samples, 0.02%)</title><rect x="91.2" y="1939.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="94.2" y="1950.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectedKeys (1 samples, 0.02%)</title><rect x="91.4" y="2163.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.4" y="2174.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/TaskThread$WrappingRunnable.run (2,620 samples, 63.67%)</title><rect x="91.7" y="2179.0" width="751.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.7" y="2190.0">org/apache/tomcat/util/threads/TaskThread$WrappingRunnable.run</text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor$Worker.run (2,620 samples, 63.67%)</title><rect x="91.7" y="2163.0" width="751.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.7" y="2174.0">org/apache/tomcat/util/threads/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor.runWorker (2,620 samples, 63.67%)</title><rect x="91.7" y="2147.0" width="751.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.7" y="2158.0">org/apache/tomcat/util/threads/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketProcessorBase.run (2,587 samples, 62.87%)</title><rect x="92.9" y="2131.0" width="741.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.9" y="2142.0">org/apache/tomcat/util/net/SocketProcessorBase.run</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="92.9" y="2115.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.9" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="93.2" y="2115.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.2" y="2126.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$SocketProcessor.doRun (2,585 samples, 62.82%)</title><rect x="93.4" y="2115.0" width="741.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.4" y="2126.0">org/apache/tomcat/util/net/NioEndpoint$SocketProcessor.doRun</text>
</g>
<g>
<title>org/apache/coyote/AbstractProtocol$ConnectionHandler.process (2,549 samples, 61.94%)</title><rect x="94.0" y="2099.0" width="731.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.0" y="2110.0">org/apache/coyote/AbstractProtocol$ConnectionHandler.process</text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessorLight.process (2,533 samples, 61.56%)</title><rect x="94.3" y="2083.0" width="726.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.3" y="2094.0">org/apache/coyote/AbstractProcessorLight.process</text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.isAsync (2 samples, 0.05%)</title><rect x="94.3" y="2067.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.3" y="2078.0"></text>
</g>
<g>
<title>org/apache/coyote/AsyncStateMachine.isAsync (1 samples, 0.02%)</title><rect x="94.6" y="2051.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.6" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/AsyncStateMachine$AsyncState.isAsync (1 samples, 0.02%)</title><rect x="94.6" y="2035.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.6" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessorLight.getIteratorAndClearDispatches (2 samples, 0.05%)</title><rect x="94.9" y="2067.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.9" y="2078.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="94.9" y="2051.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.9" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArraySet.iterator (1 samples, 0.02%)</title><rect x="95.2" y="2051.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.2" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.service (2,529 samples, 61.46%)</title><rect x="95.5" y="2067.0" width="725.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.5" y="2078.0">org/apache/coyote/http11/Http11Processor.service</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="96.6" y="2051.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.6" y="2062.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteAdapter.service (2,444 samples, 59.39%)</title><rect x="96.9" y="2051.0" width="700.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.9" y="2062.0">org/apache/catalina/connector/CoyoteAdapter.service</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="97.7" y="2035.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.7" y="2046.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Connector.createRequest (1 samples, 0.02%)</title><rect x="98.0" y="2035.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.0" y="2046.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.0" y="2019.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.0" y="2030.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.0" y="2003.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.0" y="2014.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.0" y="1987.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.0" y="1971.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.0" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.0" y="1955.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.0" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.0" y="1939.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.0" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="98.0" y="1923.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.02%)</title><rect x="98.0" y="1907.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.0" y="1918.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.02%)</title><rect x="98.0" y="1891.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.0" y="1902.0"></text>
</g>
<g>
<title>JVM_FindLoadedClass (1 samples, 0.02%)</title><rect x="98.0" y="1875.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="101.0" y="1886.0"></text>
</g>
<g>
<title>java_lang_String::as_utf8_string(oopDesc*) (1 samples, 0.02%)</title><rect x="98.0" y="1859.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="101.0" y="1870.0"></text>
</g>
<g>
<title>int UNICODE::utf8_length&lt;signed char&gt;(signed char const*, int) (1 samples, 0.02%)</title><rect x="98.0" y="1843.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="101.0" y="1854.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Connector.createResponse (1 samples, 0.02%)</title><rect x="98.3" y="2035.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.3" y="2046.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.&lt;clinit&gt; (1 samples, 0.02%)</title><rect x="98.3" y="2019.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.3" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/MediaTypeCache.&lt;init&gt; (1 samples, 0.02%)</title><rect x="98.3" y="2003.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.3" y="2014.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.3" y="1987.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.3" y="1998.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.3" y="1971.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.3" y="1982.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.3" y="1955.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.3" y="1966.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="98.3" y="1939.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.3" y="1950.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="98.3" y="1923.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.3" y="1934.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="98.3" y="1907.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.3" y="1918.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="98.3" y="1891.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.3" y="1902.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="98.3" y="1875.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.3" y="1886.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="98.3" y="1859.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.3" y="1870.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="98.3" y="1843.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.3" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.02%)</title><rect x="98.3" y="1827.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.3" y="1838.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.read (1 samples, 0.02%)</title><rect x="98.3" y="1811.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.3" y="1822.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/ZipInflaterInputStream.read (1 samples, 0.02%)</title><rect x="98.3" y="1795.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.3" y="1806.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.02%)</title><rect x="98.3" y="1779.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.3" y="1790.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteAdapter.postParseRequest (25 samples, 0.61%)</title><rect x="98.6" y="2035.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.6" y="2046.0"></text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.05%)</title><rect x="98.9" y="2019.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.9" y="2030.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Connector.getScheme (1 samples, 0.02%)</title><rect x="99.5" y="2019.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.5" y="2030.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteAdapter.convertURI (4 samples, 0.10%)</title><rect x="99.8" y="2019.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.8" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/B2CConverter.convert (3 samples, 0.07%)</title><rect x="100.0" y="2003.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.0" y="2014.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.array (1 samples, 0.02%)</title><rect x="100.6" y="1987.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.6" y="1998.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteAdapter.normalize (1 samples, 0.02%)</title><rect x="100.9" y="2019.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.9" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/AbstractChunk.indexOf (1 samples, 0.02%)</title><rect x="100.9" y="2003.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.9" y="2014.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteAdapter.parsePathParameters (2 samples, 0.05%)</title><rect x="101.2" y="2019.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.2" y="2030.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="101.2" y="2003.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.2" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.toBytes (1 samples, 0.02%)</title><rect x="101.5" y="2003.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.5" y="2014.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteAdapter.parseSessionCookiesId (3 samples, 0.07%)</title><rect x="101.8" y="2019.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.8" y="2030.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getServerCookies (2 samples, 0.05%)</title><rect x="102.0" y="2003.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.0" y="2014.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.parseCookies (2 samples, 0.05%)</title><rect x="102.0" y="1987.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.0" y="1998.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.isError (1 samples, 0.02%)</title><rect x="102.6" y="2019.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.6" y="2030.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.isError (1 samples, 0.02%)</title><rect x="102.6" y="2003.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.6" y="2014.0"></text>
</g>
<g>
<title>org/apache/catalina/mapper/Mapper.map (8 samples, 0.19%)</title><rect x="102.9" y="2019.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.9" y="2030.0"></text>
</g>
<g>
<title>org/apache/catalina/mapper/Mapper.internalMap (7 samples, 0.17%)</title><rect x="102.9" y="2003.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.9" y="2014.0"></text>
</g>
<g>
<title>org/apache/catalina/mapper/Mapper.internalMapWrapper (4 samples, 0.10%)</title><rect x="103.5" y="1987.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.5" y="1998.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/CharChunk.toString (2 samples, 0.05%)</title><rect x="104.1" y="1971.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.1" y="1982.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/StringCache.toString (1 samples, 0.02%)</title><rect x="104.3" y="1955.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.3" y="1966.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/CharChunk.startsWithIgnoreCase (1 samples, 0.02%)</title><rect x="104.6" y="1987.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.6" y="1998.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.toChars (1 samples, 0.02%)</title><rect x="104.9" y="2003.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.9" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.duplicate (2 samples, 0.05%)</title><rect x="105.2" y="2019.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.2" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.allocate (1 samples, 0.02%)</title><rect x="105.5" y="2003.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.5" y="2014.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="105.5" y="1987.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.5" y="1998.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.finishRequest (1 samples, 0.02%)</title><rect x="105.8" y="2035.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.8" y="2046.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="105.8" y="2019.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="108.8" y="2030.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="105.8" y="2003.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="108.8" y="2014.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="105.8" y="1987.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="108.8" y="1998.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="105.8" y="1971.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="108.8" y="1982.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.recycle (6 samples, 0.15%)</title><rect x="106.1" y="2035.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.1" y="2046.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/InputBuffer.recycle (1 samples, 0.02%)</title><rect x="107.5" y="2019.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.5" y="2030.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/InputBuffer.clear (1 samples, 0.02%)</title><rect x="107.5" y="2003.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.5" y="2014.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.02%)</title><rect x="107.5" y="1987.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.5" y="1998.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.finishResponse (30 samples, 0.73%)</title><rect x="107.8" y="2035.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.8" y="2046.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.close (29 samples, 0.70%)</title><rect x="108.1" y="2019.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.1" y="2030.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="108.1" y="2003.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.1" y="2014.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.action (28 samples, 0.68%)</title><rect x="108.4" y="2003.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.4" y="2014.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.action (28 samples, 0.68%)</title><rect x="108.4" y="1987.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.4" y="1998.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.finishResponse (26 samples, 0.63%)</title><rect x="108.9" y="1971.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.9" y="1982.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.end (26 samples, 0.63%)</title><rect x="108.9" y="1955.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.9" y="1966.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/filters/ChunkedOutputFilter.end (26 samples, 0.63%)</title><rect x="108.9" y="1939.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.9" y="1950.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer$SocketOutputBuffer.doWrite (1 samples, 0.02%)</title><rect x="109.5" y="1923.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.5" y="1934.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="109.5" y="1907.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.5" y="1918.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer$SocketOutputBuffer.end (23 samples, 0.56%)</title><rect x="109.8" y="1923.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.8" y="1934.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flush (22 samples, 0.53%)</title><rect x="110.1" y="1907.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.1" y="1918.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flushBlocking (22 samples, 0.53%)</title><rect x="110.1" y="1891.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.1" y="1902.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.doWrite (21 samples, 0.51%)</title><rect x="110.1" y="1875.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.1" y="1886.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.doWrite (21 samples, 0.51%)</title><rect x="110.1" y="1859.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.1" y="1870.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.write (21 samples, 0.51%)</title><rect x="110.1" y="1843.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.1" y="1854.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (20 samples, 0.49%)</title><rect x="110.4" y="1827.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.4" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (20 samples, 0.49%)</title><rect x="110.4" y="1811.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.4" y="1822.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (20 samples, 0.49%)</title><rect x="110.4" y="1795.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.4" y="1806.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.02%)</title><rect x="110.4" y="1779.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.4" y="1790.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.putBuffer (1 samples, 0.02%)</title><rect x="110.4" y="1763.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemory (1 samples, 0.02%)</title><rect x="110.4" y="1747.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemoryInternal (1 samples, 0.02%)</title><rect x="110.4" y="1731.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.02%)</title><rect x="110.4" y="1715.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.4" y="1726.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="110.4" y="1699.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="113.4" y="1710.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (14 samples, 0.34%)</title><rect x="110.7" y="1779.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.7" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (13 samples, 0.32%)</title><rect x="110.9" y="1763.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.9" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (13 samples, 0.32%)</title><rect x="110.9" y="1747.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.9" y="1758.0"></text>
</g>
<g>
<title>__write (13 samples, 0.32%)</title><rect x="110.9" y="1731.0" width="3.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="113.9" y="1742.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.32%)</title><rect x="110.9" y="1715.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="113.9" y="1726.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.32%)</title><rect x="110.9" y="1699.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.9" y="1710.0"></text>
</g>
<g>
<title>__x64_sys_write (13 samples, 0.32%)</title><rect x="110.9" y="1683.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="113.9" y="1694.0"></text>
</g>
<g>
<title>ksys_write (13 samples, 0.32%)</title><rect x="110.9" y="1667.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="113.9" y="1678.0"></text>
</g>
<g>
<title>vfs_write (13 samples, 0.32%)</title><rect x="110.9" y="1651.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="113.9" y="1662.0"></text>
</g>
<g>
<title>__vfs_write (13 samples, 0.32%)</title><rect x="110.9" y="1635.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="113.9" y="1646.0"></text>
</g>
<g>
<title>new_sync_write (13 samples, 0.32%)</title><rect x="110.9" y="1619.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="113.9" y="1630.0"></text>
</g>
<g>
<title>sock_write_iter (13 samples, 0.32%)</title><rect x="110.9" y="1603.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="113.9" y="1614.0"></text>
</g>
<g>
<title>__sock_sendmsg (13 samples, 0.32%)</title><rect x="110.9" y="1587.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.9" y="1598.0"></text>
</g>
<g>
<title>inet6_sendmsg (13 samples, 0.32%)</title><rect x="110.9" y="1571.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="113.9" y="1582.0"></text>
</g>
<g>
<title>tcp_sendmsg (13 samples, 0.32%)</title><rect x="110.9" y="1555.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="113.9" y="1566.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="110.9" y="1539.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="113.9" y="1550.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.07%)</title><rect x="110.9" y="1523.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="113.9" y="1534.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="110.9" y="1507.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="113.9" y="1518.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.02%)</title><rect x="110.9" y="1491.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="113.9" y="1502.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="110.9" y="1475.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="113.9" y="1486.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="110.9" y="1459.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.9" y="1470.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.05%)</title><rect x="111.2" y="1507.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="114.2" y="1518.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.05%)</title><rect x="111.2" y="1491.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="114.2" y="1502.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="111.2" y="1475.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="114.2" y="1486.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="111.2" y="1459.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="114.2" y="1470.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="111.5" y="1475.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="114.5" y="1486.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (10 samples, 0.24%)</title><rect x="111.8" y="1539.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="114.8" y="1550.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="111.8" y="1523.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.8" y="1534.0"></text>
</g>
<g>
<title>tcp_push (9 samples, 0.22%)</title><rect x="112.1" y="1523.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.1" y="1534.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (9 samples, 0.22%)</title><rect x="112.1" y="1507.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="115.1" y="1518.0"></text>
</g>
<g>
<title>tcp_write_xmit (9 samples, 0.22%)</title><rect x="112.1" y="1491.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="115.1" y="1502.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.17%)</title><rect x="112.4" y="1475.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="115.4" y="1486.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 0.15%)</title><rect x="112.4" y="1459.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="115.4" y="1470.0"></text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 0.15%)</title><rect x="112.4" y="1443.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="115.4" y="1454.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.15%)</title><rect x="112.4" y="1427.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="115.4" y="1438.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.15%)</title><rect x="112.4" y="1411.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="115.4" y="1422.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.15%)</title><rect x="112.4" y="1395.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="115.4" y="1406.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="112.4" y="1379.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="115.4" y="1390.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 0.12%)</title><rect x="112.7" y="1379.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="115.7" y="1390.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.12%)</title><rect x="112.7" y="1363.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="115.7" y="1374.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.12%)</title><rect x="112.7" y="1347.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="115.7" y="1358.0"></text>
</g>
<g>
<title>do_softirq.part.0 (5 samples, 0.12%)</title><rect x="112.7" y="1331.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="115.7" y="1342.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.12%)</title><rect x="112.7" y="1315.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="115.7" y="1326.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.12%)</title><rect x="112.7" y="1299.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="115.7" y="1310.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.12%)</title><rect x="112.7" y="1283.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="115.7" y="1294.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.12%)</title><rect x="112.7" y="1267.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.7" y="1278.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.12%)</title><rect x="112.7" y="1251.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="115.7" y="1262.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 0.12%)</title><rect x="112.7" y="1235.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.7" y="1246.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.12%)</title><rect x="112.7" y="1219.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="115.7" y="1230.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.12%)</title><rect x="112.7" y="1203.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="115.7" y="1214.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.10%)</title><rect x="112.9" y="1187.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="115.9" y="1198.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.07%)</title><rect x="112.9" y="1171.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="115.9" y="1182.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.07%)</title><rect x="112.9" y="1155.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.9" y="1166.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.07%)</title><rect x="112.9" y="1139.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="115.9" y="1150.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.07%)</title><rect x="112.9" y="1123.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="115.9" y="1134.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.07%)</title><rect x="112.9" y="1107.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="115.9" y="1118.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="112.9" y="1091.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="115.9" y="1102.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="112.9" y="1075.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="115.9" y="1086.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.02%)</title><rect x="112.9" y="1059.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="115.9" y="1070.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="112.9" y="1043.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="115.9" y="1054.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="112.9" y="1027.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="115.9" y="1038.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="112.9" y="1011.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="115.9" y="1022.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.02%)</title><rect x="112.9" y="995.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="115.9" y="1006.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="112.9" y="979.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="115.9" y="990.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="112.9" y="963.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="115.9" y="974.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.02%)</title><rect x="112.9" y="947.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="115.9" y="958.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="112.9" y="931.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="115.9" y="942.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="112.9" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="115.9" y="926.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="112.9" y="899.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="115.9" y="910.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="112.9" y="883.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.9" y="894.0"></text>
</g>
<g>
<title>__sock_wfree (1 samples, 0.02%)</title><rect x="112.9" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="115.9" y="878.0"></text>
</g>
<g>
<title>kfree_skb_partial (1 samples, 0.02%)</title><rect x="113.2" y="1091.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.2" y="1102.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="113.2" y="1075.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="116.2" y="1086.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.02%)</title><rect x="113.5" y="1091.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="116.5" y="1102.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="113.5" y="1075.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="116.5" y="1086.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="113.5" y="1059.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="116.5" y="1070.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="113.5" y="1043.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="116.5" y="1054.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="113.5" y="1027.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.5" y="1038.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="113.8" y="1171.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="116.8" y="1182.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_in?[nf_nat] (1 samples, 0.02%)</title><rect x="113.8" y="1155.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="116.8" y="1166.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.02%)</title><rect x="113.8" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.8" y="1150.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.02%)</title><rect x="113.8" y="1123.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.8" y="1134.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="114.1" y="1459.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="117.1" y="1470.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="114.1" y="1443.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.1" y="1454.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="114.1" y="1427.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="117.1" y="1438.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="114.4" y="1475.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="117.4" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.07%)</title><rect x="114.7" y="1779.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.7" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.05%)</title><rect x="115.0" y="1763.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.0" y="1774.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.02%)</title><rect x="115.2" y="1747.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.2" y="1758.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.02%)</title><rect x="115.2" y="1731.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.2" y="1742.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.05%)</title><rect x="115.5" y="1779.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.5" y="1790.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="115.5" y="1763.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.5" y="1774.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.05%)</title><rect x="115.5" y="1747.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.5" y="1758.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/WriteBuffer.isEmpty (1 samples, 0.02%)</title><rect x="116.1" y="1875.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.1" y="1886.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.02%)</title><rect x="116.1" y="1859.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingDeque.size (1 samples, 0.02%)</title><rect x="116.1" y="1843.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="116.1" y="1827.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="116.1" y="1811.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.1" y="1822.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardEngineValve.invoke (2,373 samples, 57.67%)</title><rect x="116.4" y="2035.0" width="680.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.4" y="2046.0">org/apache/catalina/core/StandardEngineValve.invoke</text>
</g>
<g>
<title>org/apache/catalina/valves/ErrorReportValve.invoke (2,373 samples, 57.67%)</title><rect x="116.4" y="2019.0" width="680.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.4" y="2030.0">org/apache/catalina/valves/ErrorReportValve.invoke</text>
</g>
<g>
<title>org/apache/catalina/core/StandardHostValve.invoke (2,373 samples, 57.67%)</title><rect x="116.4" y="2003.0" width="680.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.4" y="2014.0">org/apache/catalina/core/StandardHostValve.invoke</text>
</g>
<g>
<title>org/apache/catalina/authenticator/AuthenticatorBase.invoke (2,361 samples, 57.38%)</title><rect x="117.0" y="1987.0" width="677.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.0" y="1998.0">org/apache/catalina/authenticator/AuthenticatorBase.invoke</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="117.8" y="1971.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.8" y="1982.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ContainerBase.getRealm (1 samples, 0.02%)</title><rect x="118.1" y="1971.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="121.1" y="1982.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ContainerBase.getRealm (1 samples, 0.02%)</title><rect x="118.1" y="1955.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.02%)</title><rect x="118.1" y="1939.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.02%)</title><rect x="118.1" y="1923.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.1" y="1934.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardContextValve.invoke (2,355 samples, 57.23%)</title><rect x="118.4" y="1971.0" width="675.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.4" y="1982.0">org/apache/catalina/core/StandardContextValve.invoke</text>
</g>
<g>
<title>org/apache/catalina/core/ContainerBase.getPipeline (1 samples, 0.02%)</title><rect x="118.7" y="1955.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.7" y="1966.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardPipeline.isAsyncSupported (1 samples, 0.02%)</title><rect x="119.0" y="1955.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.0" y="1966.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardWrapperValve.invoke (2,352 samples, 57.16%)</title><rect x="119.3" y="1955.0" width="674.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.3" y="1966.0">org/apache/catalina/core/StandardWrapperValve.invoke</text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (4 samples, 0.10%)</title><rect x="120.1" y="1939.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64.getProbe (3 samples, 0.07%)</title><rect x="120.4" y="1923.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.4" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_L_I (3 samples, 0.07%)</title><rect x="120.4" y="1907.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.4" y="1918.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getRequest (1 samples, 0.02%)</title><rect x="121.3" y="1939.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.3" y="1950.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.isAsyncDispatching (1 samples, 0.02%)</title><rect x="121.5" y="1939.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.5" y="1950.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.setAttribute (1 samples, 0.02%)</title><rect x="121.8" y="1939.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.8" y="1950.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.getResponse (2 samples, 0.05%)</title><rect x="122.1" y="1939.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="122.1" y="1923.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.1" y="1934.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="122.1" y="1907.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.1" y="1918.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="122.1" y="1891.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.1" y="1902.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="122.1" y="1875.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.1" y="1886.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="122.1" y="1859.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.1" y="1870.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="122.1" y="1843.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.1" y="1854.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="122.1" y="1827.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.1" y="1838.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="122.1" y="1811.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.1" y="1822.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="122.1" y="1795.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.1" y="1806.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="122.1" y="1779.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.1" y="1790.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="122.1" y="1763.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.1" y="1774.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="122.1" y="1747.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.1" y="1758.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="122.1" y="1731.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.1" y="1742.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="122.1" y="1715.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="125.1" y="1726.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="122.1" y="1699.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="125.1" y="1710.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="122.1" y="1683.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="125.1" y="1694.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="122.1" y="1667.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="125.1" y="1678.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="122.1" y="1651.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="125.1" y="1662.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="122.1" y="1635.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="125.1" y="1646.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="122.1" y="1619.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="125.1" y="1630.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="122.1" y="1603.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="125.1" y="1614.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="122.1" y="1587.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="125.1" y="1598.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.&lt;init&gt; (1 samples, 0.02%)</title><rect x="122.4" y="1923.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.4" y="1934.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="122.4" y="1907.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="125.4" y="1918.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="122.4" y="1891.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="125.4" y="1902.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="122.4" y="1875.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="125.4" y="1886.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="122.4" y="1859.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="125.4" y="1870.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;LoopPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="122.4" y="1843.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="125.4" y="1854.0"></text>
</g>
<g>
<title>LoopPredicate::apply(methodHandle const&amp;, CompLevel, int, int) [clone .isra.0] (1 samples, 0.02%)</title><rect x="122.4" y="1827.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="125.4" y="1838.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (2,335 samples, 56.74%)</title><rect x="122.7" y="1939.0" width="669.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.7" y="1950.0">org/apache/catalina/core/ApplicationFilterChain.doFilter</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (2,335 samples, 56.74%)</title><rect x="122.7" y="1923.0" width="669.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.7" y="1934.0">org/apache/catalina/core/ApplicationFilterChain.internalDoFilter</text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.isAsyncSupported (1 samples, 0.02%)</title><rect x="123.3" y="1907.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.3" y="1918.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="123.3" y="1891.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="126.3" y="1902.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="123.3" y="1875.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="126.3" y="1886.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="123.3" y="1859.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="126.3" y="1870.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="123.3" y="1843.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="126.3" y="1854.0"></text>
</g>
<g>
<title>LinkResolver::check_method_accessability(Klass*, Klass*, Klass*, methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="123.3" y="1827.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="126.3" y="1838.0"></text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.doFilter (2,332 samples, 56.67%)</title><rect x="123.6" y="1907.0" width="668.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.6" y="1918.0">org/springframework/web/filter/OncePerRequestFilter.doFilter</text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.setAttribute (1 samples, 0.02%)</title><rect x="123.6" y="1891.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.6" y="1902.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.setAttribute (1 samples, 0.02%)</title><rect x="123.6" y="1875.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.6" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.02%)</title><rect x="123.6" y="1859.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.6" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.02%)</title><rect x="123.6" y="1843.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.6" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.02%)</title><rect x="123.6" y="1827.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.6" y="1838.0"></text>
</g>
<g>
<title>org/springframework/web/filter/CharacterEncodingFilter.doFilterInternal (2,330 samples, 56.62%)</title><rect x="123.8" y="1891.0" width="668.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.8" y="1902.0">org/springframework/web/filter/CharacterEncodingFilter.doFilterInternal</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (2,329 samples, 56.60%)</title><rect x="123.8" y="1875.0" width="667.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.8" y="1886.0">org/apache/catalina/core/ApplicationFilterChain.doFilter</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (2,329 samples, 56.60%)</title><rect x="123.8" y="1859.0" width="667.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.8" y="1870.0">org/apache/catalina/core/ApplicationFilterChain.internalDoFilter</text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.doFilter (2,329 samples, 56.60%)</title><rect x="123.8" y="1843.0" width="667.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.8" y="1854.0">org/springframework/web/filter/OncePerRequestFilter.doFilter</text>
</g>
<g>
<title>org/springframework/web/filter/FormContentFilter.doFilterInternal (2,327 samples, 56.55%)</title><rect x="124.1" y="1827.0" width="667.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.1" y="1838.0">org/springframework/web/filter/FormContentFilter.doFilterInternal</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (2,320 samples, 56.38%)</title><rect x="124.4" y="1811.0" width="665.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.4" y="1822.0">org/apache/catalina/core/ApplicationFilterChain.doFilter</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (2,319 samples, 56.35%)</title><rect x="124.7" y="1795.0" width="665.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.7" y="1806.0">org/apache/catalina/core/ApplicationFilterChain.internalDoFilter</text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.doFilter (2,319 samples, 56.35%)</title><rect x="124.7" y="1779.0" width="665.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.7" y="1790.0">org/springframework/web/filter/OncePerRequestFilter.doFilter</text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.removeAttribute (1 samples, 0.02%)</title><rect x="124.7" y="1763.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.7" y="1774.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.removeAttribute (1 samples, 0.02%)</title><rect x="124.7" y="1747.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.7" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (1 samples, 0.02%)</title><rect x="124.7" y="1731.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.7" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="124.7" y="1715.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.7" y="1726.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="124.7" y="1699.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.7" y="1710.0"></text>
</g>
<g>
<title>org/springframework/web/filter/RequestContextFilter.doFilterInternal (2,318 samples, 56.33%)</title><rect x="125.0" y="1763.0" width="664.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.0" y="1774.0">org/springframework/web/filter/RequestContextFilter.doFilterInternal</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (2,310 samples, 56.14%)</title><rect x="125.0" y="1747.0" width="662.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.0" y="1758.0">org/apache/catalina/core/ApplicationFilterChain.doFilter</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (2,310 samples, 56.14%)</title><rect x="125.0" y="1731.0" width="662.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.0" y="1742.0">org/apache/catalina/core/ApplicationFilterChain.internalDoFilter</text>
</g>
<g>
<title>jakarta/servlet/http/HttpServlet.service (2,310 samples, 56.14%)</title><rect x="125.0" y="1715.0" width="662.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.0" y="1726.0">jakarta/servlet/http/HttpServlet.service</text>
</g>
<g>
<title>org/springframework/web/servlet/FrameworkServlet.service (2,309 samples, 56.11%)</title><rect x="125.3" y="1699.0" width="662.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.3" y="1710.0">org/springframework/web/servlet/FrameworkServlet.service</text>
</g>
<g>
<title>jakarta/servlet/http/HttpServlet.service (2,308 samples, 56.09%)</title><rect x="125.6" y="1683.0" width="661.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.6" y="1694.0">jakarta/servlet/http/HttpServlet.service</text>
</g>
<g>
<title>org/springframework/web/servlet/FrameworkServlet.doGet (2,307 samples, 56.06%)</title><rect x="125.8" y="1667.0" width="661.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.8" y="1678.0">org/springframework/web/servlet/FrameworkServlet.doGet</text>
</g>
<g>
<title>org/springframework/web/servlet/FrameworkServlet.processRequest (2,307 samples, 56.06%)</title><rect x="125.8" y="1651.0" width="661.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.8" y="1662.0">org/springframework/web/servlet/FrameworkServlet.processRequest</text>
</g>
<g>
<title>org/springframework/web/context/request/AbstractRequestAttributes.requestCompleted (3 samples, 0.07%)</title><rect x="126.1" y="1635.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.1" y="1646.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="126.1" y="1619.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="129.1" y="1630.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="126.1" y="1603.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="129.1" y="1614.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="126.1" y="1587.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="129.1" y="1598.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="126.1" y="1571.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="129.1" y="1582.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="126.1" y="1555.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="129.1" y="1566.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="126.1" y="1539.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="129.1" y="1550.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="126.1" y="1523.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="129.1" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/AbstractRequestAttributes.executeRequestDestructionCallbacks (1 samples, 0.02%)</title><rect x="126.4" y="1619.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.4" y="1630.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.clear (1 samples, 0.02%)</title><rect x="126.4" y="1603.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.4" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletRequestAttributes.updateAccessedSessionAttributes (1 samples, 0.02%)</title><rect x="126.7" y="1619.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.7" y="1630.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/WebAsyncManager.registerCallableInterceptor (1 samples, 0.02%)</title><rect x="127.0" y="1635.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.0" y="1646.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="127.0" y="1619.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.0" y="1630.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="127.0" y="1603.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.0" y="1614.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.02%)</title><rect x="127.0" y="1587.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.0" y="1598.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.linkNodeLast (1 samples, 0.02%)</title><rect x="127.0" y="1571.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.0" y="1582.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/WebAsyncUtils.getAsyncManager (1 samples, 0.02%)</title><rect x="127.3" y="1635.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.3" y="1646.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getAttribute (1 samples, 0.02%)</title><rect x="127.3" y="1619.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.3" y="1630.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/DispatcherServlet.buildLocaleContext (1 samples, 0.02%)</title><rect x="127.6" y="1635.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.6" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="127.6" y="1619.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.6" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="127.6" y="1603.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.6" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/DispatcherServlet$$Lambda$1569.0x00007f9a5c9a6658.&lt;init&gt; (1 samples, 0.02%)</title><rect x="127.6" y="1587.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.6" y="1598.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="127.6" y="1571.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="130.6" y="1582.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="127.6" y="1555.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="130.6" y="1566.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="127.6" y="1539.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="130.6" y="1550.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="127.6" y="1523.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="130.6" y="1534.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;CallPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="127.6" y="1507.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="130.6" y="1518.0"></text>
</g>
<g>
<title>CallPredicate::apply(methodHandle const&amp;, CompLevel, int, int) (1 samples, 0.02%)</title><rect x="127.6" y="1491.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="130.6" y="1502.0"></text>
</g>
<g>
<title>VirtualSpace::reserved_size() const (1 samples, 0.02%)</title><rect x="127.6" y="1475.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="130.6" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/DispatcherServlet.doService (2,274 samples, 55.26%)</title><rect x="127.9" y="1635.0" width="652.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.9" y="1646.0">org/springframework/web/servlet/DispatcherServlet.doService</text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.setAttribute (1 samples, 0.02%)</title><rect x="129.0" y="1619.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.0" y="1630.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.setAttribute (1 samples, 0.02%)</title><rect x="129.0" y="1603.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.0" y="1614.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="129.0" y="1587.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.0" y="1598.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="129.0" y="1571.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.0" y="1582.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/DispatcherServlet.doDispatch (2,249 samples, 54.65%)</title><rect x="129.3" y="1619.0" width="644.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.3" y="1630.0">org/springframework/web/servlet/DispatcherServlet.doDispatch</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="130.2" y="1603.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.2" y="1614.0"></text>
</g>
<g>
<title>org/springframework/http/HttpMethod.matches (1 samples, 0.02%)</title><rect x="130.4" y="1603.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.4" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="130.4" y="1587.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.4" y="1598.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.checkNotModified (3 samples, 0.07%)</title><rect x="130.7" y="1603.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.7" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.checkNotModified (3 samples, 0.07%)</title><rect x="130.7" y="1587.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.7" y="1598.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.validateIfMatch (1 samples, 0.02%)</title><rect x="131.0" y="1571.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.0" y="1582.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="131.0" y="1555.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.0" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.validateIfNoneMatch (1 samples, 0.02%)</title><rect x="131.3" y="1571.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.3" y="1582.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getHeaders (1 samples, 0.02%)</title><rect x="131.3" y="1555.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.3" y="1566.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getHeaders (1 samples, 0.02%)</title><rect x="131.3" y="1539.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.3" y="1550.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/MimeHeaders.values (1 samples, 0.02%)</title><rect x="131.3" y="1523.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.3" y="1534.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/ValuesEnumerator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="131.3" y="1507.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.3" y="1518.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/ValuesEnumerator.findNext (1 samples, 0.02%)</title><rect x="131.3" y="1491.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.3" y="1502.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="131.3" y="1475.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.3" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/WebAsyncUtils.getAsyncManager (1 samples, 0.02%)</title><rect x="131.6" y="1603.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.6" y="1614.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getAttribute (1 samples, 0.02%)</title><rect x="131.6" y="1587.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.6" y="1598.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getAttribute (1 samples, 0.02%)</title><rect x="131.6" y="1571.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.6" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="131.6" y="1555.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.6" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/DispatcherServlet.checkMultipart (1 samples, 0.02%)</title><rect x="131.9" y="1603.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.9" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/multipart/support/StandardServletMultipartResolver.isMultipart (1 samples, 0.02%)</title><rect x="131.9" y="1587.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.9" y="1598.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/DispatcherServlet.getHandler (56 samples, 1.36%)</title><rect x="132.2" y="1603.0" width="16.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.2" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/AbstractHandlerMapping.getHandler (55 samples, 1.34%)</title><rect x="132.4" y="1587.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.4" y="1598.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/function/support/RouterFunctionMapping.getHandlerInternal (1 samples, 0.02%)</title><rect x="132.7" y="1571.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.7" y="1582.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/AbstractHandlerMapping.getHandlerExecutionChain (2 samples, 0.05%)</title><rect x="133.0" y="1571.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.0" y="1582.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/HandlerExecutionChain.&lt;init&gt; (1 samples, 0.02%)</title><rect x="133.3" y="1555.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.3" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/HandlerExecutionChain.&lt;init&gt; (1 samples, 0.02%)</title><rect x="133.3" y="1539.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.3" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/HandlerExecutionChain.&lt;init&gt; (1 samples, 0.02%)</title><rect x="133.3" y="1523.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.3" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.hasCorsConfigurationSource (4 samples, 0.10%)</title><rect x="133.6" y="1571.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.6" y="1582.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/AbstractHandlerMethodMapping$MappingRegistry.getCorsConfiguration (3 samples, 0.07%)</title><rect x="133.9" y="1555.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.9" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="134.2" y="1539.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.2" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/method/HandlerMethod.hashCode (2 samples, 0.05%)</title><rect x="134.2" y="1523.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.2" y="1534.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedMethod.hashCode (1 samples, 0.02%)</title><rect x="134.5" y="1507.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.5" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.getHandlerInternal (47 samples, 1.14%)</title><rect x="134.7" y="1571.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.7" y="1582.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.getHandlerInternal (47 samples, 1.14%)</title><rect x="134.7" y="1555.0" width="13.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.7" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.getHandlerInternal (46 samples, 1.12%)</title><rect x="135.0" y="1539.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.0" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/method/HandlerMethod.createWithResolvedBean (1 samples, 0.02%)</title><rect x="135.3" y="1523.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.3" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/method/HandlerMethod.&lt;init&gt; (1 samples, 0.02%)</title><rect x="135.3" y="1507.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.3" y="1518.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="135.3" y="1491.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.3" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/AbstractHandlerMapping.initLookupPath (1 samples, 0.02%)</title><rect x="135.6" y="1523.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.6" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/AbstractHandlerMethodMapping$MappingRegistry.acquireReadLock (1 samples, 0.02%)</title><rect x="135.9" y="1523.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.9" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.lookupHandlerMethod (42 samples, 1.02%)</title><rect x="136.2" y="1523.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.2" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="136.5" y="1507.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.5" y="1518.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.setAttribute (2 samples, 0.05%)</title><rect x="136.7" y="1507.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.7" y="1518.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.setAttribute (2 samples, 0.05%)</title><rect x="136.7" y="1491.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.7" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="136.7" y="1475.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.7" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="136.7" y="1459.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.7" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.02%)</title><rect x="137.0" y="1475.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.0" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.02%)</title><rect x="137.0" y="1459.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.0" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.addMatchingMappings (31 samples, 0.75%)</title><rect x="137.3" y="1507.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.3" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.getMatchingMapping (31 samples, 0.75%)</title><rect x="137.3" y="1491.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.3" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.getMatchingMapping (31 samples, 0.75%)</title><rect x="137.3" y="1475.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.3" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfo.getMatchingCondition (30 samples, 0.73%)</title><rect x="137.6" y="1459.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.6" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/PathPatternsRequestCondition.getMatchingCondition (10 samples, 0.24%)</title><rect x="138.2" y="1443.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.2" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/PathPatternsRequestCondition.&lt;init&gt; (1 samples, 0.02%)</title><rect x="138.2" y="1427.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.2" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/PathPatternsRequestCondition.getMatchingPatterns (8 samples, 0.19%)</title><rect x="138.5" y="1427.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.5" y="1438.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (6 samples, 0.15%)</title><rect x="138.5" y="1411.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.5" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.15%)</title><rect x="138.5" y="1395.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.5" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.15%)</title><rect x="138.5" y="1379.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.5" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.addEntryToEmptyMap (5 samples, 0.12%)</title><rect x="138.8" y="1363.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.8" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (5 samples, 0.12%)</title><rect x="138.8" y="1347.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.8" y="1358.0"></text>
</g>
<g>
<title>org/springframework/web/util/pattern/PathPattern.compareTo (4 samples, 0.10%)</title><rect x="139.0" y="1331.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.0" y="1342.0"></text>
</g>
<g>
<title>org/springframework/web/util/pattern/PathPattern.compareTo (4 samples, 0.10%)</title><rect x="139.0" y="1315.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.0" y="1326.0"></text>
</g>
<g>
<title>java/util/Comparators$NullComparator.compare (4 samples, 0.10%)</title><rect x="139.0" y="1299.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.0" y="1310.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$620.0x00007f9a5c25ac60.compare (3 samples, 0.07%)</title><rect x="139.3" y="1283.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.3" y="1294.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.07%)</title><rect x="139.3" y="1267.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.3" y="1278.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$430.0x00007f9a5c246f78.compare (2 samples, 0.05%)</title><rect x="139.3" y="1251.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.3" y="1262.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingInt$7b0bb60$1 (2 samples, 0.05%)</title><rect x="139.3" y="1235.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.3" y="1246.0"></text>
</g>
<g>
<title>org/springframework/web/util/pattern/PathPattern$$Lambda$1459.0x00007f9a5c94ca08.applyAsInt (2 samples, 0.05%)</title><rect x="139.3" y="1219.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.3" y="1230.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$620.0x00007f9a5c25ac60.compare (1 samples, 0.02%)</title><rect x="139.9" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.9" y="1262.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.02%)</title><rect x="139.9" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.9" y="1246.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$620.0x00007f9a5c25ac60.compare (1 samples, 0.02%)</title><rect x="139.9" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.9" y="1230.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.02%)</title><rect x="139.9" y="1203.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.9" y="1214.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$430.0x00007f9a5c246f78.compare (1 samples, 0.02%)</title><rect x="139.9" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.9" y="1198.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingInt$7b0bb60$1 (1 samples, 0.02%)</title><rect x="139.9" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.9" y="1182.0"></text>
</g>
<g>
<title>org/springframework/web/util/pattern/PathPattern$$Lambda$1457.0x00007f9a5c94c5c8.applyAsInt (1 samples, 0.02%)</title><rect x="139.9" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.9" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.02%)</title><rect x="140.2" y="1411.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.2" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="140.2" y="1395.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.2" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.02%)</title><rect x="140.2" y="1379.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.2" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.02%)</title><rect x="140.2" y="1363.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.2" y="1374.0"></text>
</g>
<g>
<title>org/springframework/web/util/pattern/PathPattern.matches (1 samples, 0.02%)</title><rect x="140.5" y="1411.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.5" y="1422.0"></text>
</g>
<g>
<title>org/springframework/web/util/pattern/SeparatorPathElement.matches (1 samples, 0.02%)</title><rect x="140.5" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.5" y="1406.0"></text>
</g>
<g>
<title>org/springframework/web/util/pattern/PathPattern$MatchingContext.isSeparator (1 samples, 0.02%)</title><rect x="140.5" y="1379.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.5" y="1390.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (1 samples, 0.02%)</title><rect x="140.5" y="1363.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.5" y="1374.0"></text>
</g>
<g>
<title>org/springframework/web/util/ServletRequestPathUtils.getParsedRequestPath (1 samples, 0.02%)</title><rect x="140.8" y="1427.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.8" y="1438.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="140.8" y="1411.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.8" y="1422.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.getMatchingCondition (6 samples, 0.15%)</title><rect x="141.0" y="1443.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.0" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.&lt;init&gt; (1 samples, 0.02%)</title><rect x="141.0" y="1427.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.0" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.getAcceptedMediaTypes (3 samples, 0.07%)</title><rect x="141.3" y="1427.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.3" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/accept/ContentNegotiationManager.resolveMediaTypes (2 samples, 0.05%)</title><rect x="141.6" y="1411.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.6" y="1422.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.05%)</title><rect x="141.6" y="1395.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="144.6" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="141.6" y="1379.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="144.6" y="1390.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="141.6" y="1363.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="144.6" y="1374.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="141.6" y="1347.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="144.6" y="1358.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="141.6" y="1331.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="144.6" y="1342.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="141.6" y="1315.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="144.6" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Klass*, Handle, Handle, bool) (1 samples, 0.02%)</title><rect x="141.6" y="1299.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="144.6" y="1310.0"></text>
</g>
<g>
<title>Dictionary::find_class(unsigned int, Symbol*) (1 samples, 0.02%)</title><rect x="141.6" y="1283.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="144.6" y="1294.0"></text>
</g>
<g>
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.02%)</title><rect x="141.9" y="1379.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="144.9" y="1390.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.getMatchingExpressions (2 samples, 0.05%)</title><rect x="142.2" y="1427.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.2" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/ProducesRequestCondition$ProduceMediaTypeExpression.match (1 samples, 0.02%)</title><rect x="142.5" y="1411.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.5" y="1422.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/ProducesRequestCondition$ProduceMediaTypeExpression.matchMediaType (1 samples, 0.02%)</title><rect x="142.5" y="1395.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.5" y="1406.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/RequestMethodsRequestCondition.getMatchingCondition (3 samples, 0.07%)</title><rect x="142.8" y="1443.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.8" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/RequestMethodsRequestCondition.getMethods (1 samples, 0.02%)</title><rect x="143.3" y="1427.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.3" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfo.&lt;init&gt; (9 samples, 0.22%)</title><rect x="143.6" y="1443.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.6" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfo.calculateHashCode (8 samples, 0.19%)</title><rect x="143.9" y="1427.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.9" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/AbstractRequestCondition.hashCode (7 samples, 0.17%)</title><rect x="144.2" y="1411.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.2" y="1422.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.05%)</title><rect x="144.2" y="1395.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="147.2" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="144.5" y="1379.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="147.5" y="1390.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="144.5" y="1363.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="147.5" y="1374.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="144.5" y="1347.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="147.5" y="1358.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="144.5" y="1331.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="147.5" y="1342.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(Klass*, Symbol*, Symbol*, Klass::PrivateLookupMode) (1 samples, 0.02%)</title><rect x="144.5" y="1315.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="147.5" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="144.5" y="1299.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="147.5" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="144.5" y="1283.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="147.5" y="1294.0"></text>
</g>
<g>
<title>java/util/AbstractSet.hashCode (3 samples, 0.07%)</title><rect x="144.8" y="1395.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.8" y="1406.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="144.8" y="1379.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="147.8" y="1390.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="145.1" y="1379.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.1" y="1390.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedHashIterator.hasNext (1 samples, 0.02%)</title><rect x="145.3" y="1379.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.3" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayList.hashCode (1 samples, 0.02%)</title><rect x="145.6" y="1395.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.6" y="1406.0"></text>
</g>
<g>
<title>java/util/ArrayList.hashCodeRange (1 samples, 0.02%)</title><rect x="145.6" y="1379.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.6" y="1390.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="145.6" y="1363.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.6" y="1374.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/HeadersRequestCondition.getContent (1 samples, 0.02%)</title><rect x="145.9" y="1395.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="148.9" y="1406.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.handleMatch (7 samples, 0.17%)</title><rect x="146.2" y="1507.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.2" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.handleMatch (7 samples, 0.17%)</title><rect x="146.2" y="1491.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.2" y="1502.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.setAttribute (1 samples, 0.02%)</title><rect x="146.2" y="1475.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.2" y="1486.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.setAttribute (1 samples, 0.02%)</title><rect x="146.2" y="1459.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.2" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="146.2" y="1443.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.2" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="146.2" y="1427.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.2" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.getProducibleMediaTypes (1 samples, 0.02%)</title><rect x="146.5" y="1475.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.5" y="1486.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="146.5" y="1459.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.5" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="146.5" y="1443.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.5" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="146.5" y="1427.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.5" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.02%)</title><rect x="146.5" y="1411.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.5" y="1422.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.extractMatchDetails (5 samples, 0.12%)</title><rect x="146.8" y="1475.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="147.1" y="1459.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="147.1" y="1443.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="147.1" y="1427.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.1" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping$$Lambda$1587.0x00007f9a5c9af430.&lt;init&gt; (1 samples, 0.02%)</title><rect x="147.1" y="1411.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.02%)</title><rect x="147.4" y="1459.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.4" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.02%)</title><rect x="147.4" y="1443.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.02%)</title><rect x="147.4" y="1427.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.4" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.02%)</title><rect x="147.4" y="1411.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.02%)</title><rect x="147.4" y="1395.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x00007f9a5c0a4400.invokeStatic (1 samples, 0.02%)</title><rect x="147.4" y="1379.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.02%)</title><rect x="147.4" y="1363.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.02%)</title><rect x="147.4" y="1347.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.02%)</title><rect x="147.4" y="1331.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (1 samples, 0.02%)</title><rect x="147.4" y="1315.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (1 samples, 0.02%)</title><rect x="147.4" y="1299.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodVisitor.visitFieldInsn (1 samples, 0.02%)</title><rect x="147.4" y="1283.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (1 samples, 0.02%)</title><rect x="147.4" y="1267.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (1 samples, 0.02%)</title><rect x="147.4" y="1251.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (1 samples, 0.02%)</title><rect x="147.4" y="1235.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="147.4" y="1219.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.4" y="1230.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/condition/PathPatternsRequestCondition.getFirstPattern (1 samples, 0.02%)</title><rect x="147.6" y="1459.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.6" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeSet.first (1 samples, 0.02%)</title><rect x="147.6" y="1443.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.6" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="147.6" y="1427.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="150.6" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="147.6" y="1411.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="150.6" y="1422.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="147.6" y="1395.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="150.6" y="1406.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="147.6" y="1379.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="150.6" y="1390.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 0.02%)</title><rect x="147.6" y="1363.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="150.6" y="1374.0"></text>
</g>
<g>
<title>org/springframework/web/util/pattern/PathPattern.matchAndExtract (1 samples, 0.02%)</title><rect x="147.9" y="1459.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.9" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/DispatcherServlet.getHandlerAdapter (1 samples, 0.02%)</title><rect x="148.2" y="1603.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.2" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/DispatcherServlet.processDispatchResult (72 samples, 1.75%)</title><rect x="148.5" y="1603.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.5" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/WebAsyncUtils.getAsyncManager (1 samples, 0.02%)</title><rect x="149.1" y="1587.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.1" y="1598.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/HandlerExecutionChain.triggerAfterCompletion (69 samples, 1.68%)</title><rect x="149.4" y="1587.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.4" y="1598.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.afterCompletion (67 samples, 1.63%)</title><rect x="149.9" y="1571.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.9" y="1582.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.afterCompletion (65 samples, 1.58%)</title><rect x="150.2" y="1555.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.2" y="1566.0"></text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.05%)</title><rect x="150.2" y="1539.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.2" y="1550.0"></text>
</g>
<g>
<title>org/apache/commons/logging/LogAdapter$Slf4jLocationAwareLog.debug (2 samples, 0.05%)</title><rect x="150.8" y="1539.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.8" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.log (1 samples, 0.02%)</title><rect x="150.8" y="1523.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.8" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.02%)</title><rect x="150.8" y="1507.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.02%)</title><rect x="151.1" y="1523.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.1" y="1534.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/EntityManagerFactoryUtils.closeEntityManager (55 samples, 1.34%)</title><rect x="151.4" y="1539.0" width="15.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.4" y="1550.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.close (48 samples, 1.17%)</title><rect x="151.9" y="1523.0" width="13.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.9" y="1534.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (48 samples, 1.17%)</title><rect x="151.9" y="1507.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.9" y="1518.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (47 samples, 1.14%)</title><rect x="151.9" y="1491.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.9" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (47 samples, 1.14%)</title><rect x="151.9" y="1475.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.9" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor29.invoke (46 samples, 1.12%)</title><rect x="151.9" y="1459.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.9" y="1470.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.close (46 samples, 1.12%)</title><rect x="151.9" y="1443.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.9" y="1454.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.closeWithoutOpenChecks (46 samples, 1.12%)</title><rect x="151.9" y="1427.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.9" y="1438.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.close (42 samples, 1.02%)</title><rect x="152.5" y="1411.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.5" y="1422.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="152.5" y="1395.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="155.5" y="1406.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcCoordinatorImpl.close (32 samples, 0.78%)</title><rect x="152.8" y="1395.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.8" y="1406.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.close (32 samples, 0.78%)</title><rect x="152.8" y="1379.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.8" y="1390.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.releaseConnection (29 samples, 0.70%)</title><rect x="153.4" y="1363.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.4" y="1374.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/spi/SqlExceptionHelper.logAndClearWarnings (4 samples, 0.10%)</title><rect x="153.4" y="1347.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.4" y="1358.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/spi/SqlExceptionHelper.handleAndClearWarnings (3 samples, 0.07%)</title><rect x="153.7" y="1331.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.7" y="1342.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyConnection.clearWarnings (1 samples, 0.02%)</title><rect x="154.0" y="1315.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.0" y="1326.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="154.0" y="1299.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.0" y="1310.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyConnection.getWarnings (1 samples, 0.02%)</title><rect x="154.2" y="1315.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.2" y="1326.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.getWarnings (1 samples, 0.02%)</title><rect x="154.2" y="1299.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.2" y="1310.0"></text>
</g>
<g>
<title>org/hibernate/internal/NonContextualJdbcConnectionAccess.releaseConnection (24 samples, 0.58%)</title><rect x="154.5" y="1347.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.5" y="1358.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/SessionEventListenerManagerImpl.jdbcConnectionReleaseEnd (1 samples, 0.02%)</title><rect x="155.4" y="1331.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.4" y="1342.0"></text>
</g>
<g>
<title>sysmalloc (1 samples, 0.02%)</title><rect x="155.4" y="1315.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="158.4" y="1326.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="155.4" y="1299.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="158.4" y="1310.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="155.4" y="1283.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="158.4" y="1294.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="155.4" y="1267.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="158.4" y="1278.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="155.4" y="1251.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="158.4" y="1262.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/connections/internal/DatasourceConnectionProviderImpl.closeConnection (20 samples, 0.49%)</title><rect x="155.7" y="1331.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.7" y="1342.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyConnection.close (20 samples, 0.49%)</title><rect x="155.7" y="1315.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.7" y="1326.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/PoolEntry.recycle (19 samples, 0.46%)</title><rect x="156.0" y="1299.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.0" y="1310.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariPool.recycle (17 samples, 0.41%)</title><rect x="156.5" y="1283.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.5" y="1294.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/util/ConcurrentBag.requite (17 samples, 0.41%)</title><rect x="156.5" y="1267.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/Thread.yield (13 samples, 0.32%)</title><rect x="156.8" y="1251.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.8" y="1262.0"></text>
</g>
<g>
<title>__GI_sched_yield (12 samples, 0.29%)</title><rect x="157.1" y="1235.0" width="3.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="160.1" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.24%)</title><rect x="157.7" y="1219.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="160.7" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.24%)</title><rect x="157.7" y="1203.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="160.7" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.07%)</title><rect x="159.7" y="1187.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="162.7" y="1198.0"></text>
</g>
<g>
<title>do_sched_yield (3 samples, 0.07%)</title><rect x="159.7" y="1171.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="162.7" y="1182.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="160.3" y="1155.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="163.3" y="1166.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="160.3" y="1139.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="163.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (3 samples, 0.07%)</title><rect x="160.5" y="1251.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferQueue.transfer (3 samples, 0.07%)</title><rect x="160.5" y="1235.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="161.1" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="161.1" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.1" y="1214.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="161.1" y="1187.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="164.1" y="1198.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="161.1" y="1171.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="164.1" y="1182.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.releaseResources (1 samples, 0.02%)</title><rect x="161.4" y="1347.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.4" y="1358.0"></text>
</g>
<g>
<title>org/jboss/logging/DelegatingBasicLogger.trace (1 samples, 0.02%)</title><rect x="161.4" y="1331.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.4" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="161.4" y="1315.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="164.4" y="1326.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="161.4" y="1299.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="164.4" y="1310.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="161.4" y="1283.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="164.4" y="1294.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="161.4" y="1267.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="164.4" y="1278.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 0.02%)</title><rect x="161.4" y="1251.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="164.4" y="1262.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.releaseResources (1 samples, 0.02%)</title><rect x="161.7" y="1363.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.7" y="1374.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.setClosed (8 samples, 0.19%)</title><rect x="162.0" y="1395.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.0" y="1406.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.cleanupOnClose (8 samples, 0.19%)</title><rect x="162.0" y="1379.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.0" y="1390.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.clear (7 samples, 0.17%)</title><rect x="162.3" y="1363.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.3" y="1374.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext.clear (2 samples, 0.05%)</title><rect x="163.4" y="1347.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.4" y="1358.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext.clearAllReferencesFromManagedEntities (2 samples, 0.05%)</title><rect x="163.4" y="1331.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.4" y="1342.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="163.4" y="1315.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.4" y="1326.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext.clearManagedEntity (1 samples, 0.02%)</title><rect x="163.7" y="1315.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.7" y="1326.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext$ManagedEntityImpl.$$_hibernate_setNextManagedEntity (1 samples, 0.02%)</title><rect x="163.7" y="1299.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.7" y="1310.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/BatchFetchQueue.clear (1 samples, 0.02%)</title><rect x="164.0" y="1347.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.0" y="1358.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.removeSharedSessionTransactionObserver (1 samples, 0.02%)</title><rect x="164.3" y="1395.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.3" y="1406.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl.removeObserver (1 samples, 0.02%)</title><rect x="164.3" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.3" y="1390.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.isTransactionInProgressAndNotMarkedForRollback (2 samples, 0.05%)</title><rect x="164.6" y="1411.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.6" y="1422.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="164.8" y="1395.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.8" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="165.1" y="1459.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="165.1" y="1443.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.1" y="1454.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.close (1 samples, 0.02%)</title><rect x="165.1" y="1427.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.1" y="1438.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.closeWithoutOpenChecks (1 samples, 0.02%)</title><rect x="165.1" y="1411.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.1" y="1422.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.close (1 samples, 0.02%)</title><rect x="165.1" y="1395.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.1" y="1406.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.setClosed (1 samples, 0.02%)</title><rect x="165.1" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.1" y="1390.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.cleanupOnClose (1 samples, 0.02%)</title><rect x="165.1" y="1363.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.1" y="1374.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.clear (1 samples, 0.02%)</title><rect x="165.1" y="1347.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.1" y="1358.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.getSession (1 samples, 0.02%)</title><rect x="165.1" y="1331.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="168.1" y="1342.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.getResource (1 samples, 0.02%)</title><rect x="165.4" y="1491.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.4" y="1502.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.doGetResource (1 samples, 0.02%)</title><rect x="165.4" y="1475.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.4" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="165.4" y="1459.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="168.4" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="165.4" y="1443.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="168.4" y="1454.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="165.4" y="1427.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="168.4" y="1438.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="165.4" y="1411.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="168.4" y="1422.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;LoopPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="165.4" y="1395.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="168.4" y="1406.0"></text>
</g>
<g>
<title>Method::is_constant_getter() const (1 samples, 0.02%)</title><rect x="165.4" y="1379.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="168.4" y="1390.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.isOpen (5 samples, 0.12%)</title><rect x="165.7" y="1523.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.7" y="1534.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (3 samples, 0.07%)</title><rect x="166.3" y="1507.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="166.3" y="1491.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.3" y="1502.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="166.3" y="1475.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.3" y="1486.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="166.6" y="1491.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="166.6" y="1475.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor31.invoke (2 samples, 0.05%)</title><rect x="166.6" y="1459.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.6" y="1470.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.decrementParticipateCount (2 samples, 0.05%)</title><rect x="167.1" y="1539.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.1" y="1550.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.getParticipateAttributeName (2 samples, 0.05%)</title><rect x="167.1" y="1523.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.1" y="1534.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy108.toString (1 samples, 0.02%)</title><rect x="167.1" y="1507.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.1" y="1518.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/EntityManagerFactoryAccessor.obtainEntityManagerFactory (1 samples, 0.02%)</title><rect x="167.4" y="1507.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.4" y="1518.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/EntityManagerFactoryAccessor.getEntityManagerFactory (1 samples, 0.02%)</title><rect x="167.4" y="1491.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.4" y="1502.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource (4 samples, 0.10%)</title><rect x="167.7" y="1539.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.7" y="1550.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.doUnbindResource (3 samples, 0.07%)</title><rect x="167.7" y="1523.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.7" y="1534.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 0.05%)</title><rect x="167.7" y="1507.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (2 samples, 0.05%)</title><rect x="167.7" y="1491.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.expungeStaleEntry (1 samples, 0.02%)</title><rect x="167.7" y="1475.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear (1 samples, 0.02%)</title><rect x="168.0" y="1475.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.0" y="1486.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear0 (1 samples, 0.02%)</title><rect x="168.0" y="1459.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.0" y="1470.0"></text>
</g>
<g>
<title>Java_java_lang_ref_Reference_clear0 (1 samples, 0.02%)</title><rect x="168.0" y="1443.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="171.0" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.remove (1 samples, 0.02%)</title><rect x="168.3" y="1507.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.3" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="168.3" y="1491.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.3" y="1502.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy108.hashCode (1 samples, 0.02%)</title><rect x="168.3" y="1475.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.3" y="1486.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationUtils.unwrapResourceIfNecessary (1 samples, 0.02%)</title><rect x="168.6" y="1523.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.6" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/DispatcherServletWebRequest.&lt;init&gt; (1 samples, 0.02%)</title><rect x="168.9" y="1555.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.9" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.&lt;init&gt; (1 samples, 0.02%)</title><rect x="168.9" y="1539.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.9" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletRequestAttributes.&lt;init&gt; (1 samples, 0.02%)</title><rect x="168.9" y="1523.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.9" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletRequestAttributes.&lt;init&gt; (1 samples, 0.02%)</title><rect x="168.9" y="1507.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.9" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/AbstractRequestAttributes.&lt;init&gt; (1 samples, 0.02%)</title><rect x="168.9" y="1491.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.9" y="1502.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="168.9" y="1475.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="171.9" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.02%)</title><rect x="168.9" y="1459.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="171.9" y="1470.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="168.9" y="1443.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="171.9" y="1454.0"></text>
</g>
<g>
<title>JfrObjectAllocationSample::send_event(Klass const*, unsigned long, bool, Thread*) (1 samples, 0.02%)</title><rect x="168.9" y="1427.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="171.9" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/HandlerExecutionChain.applyPostHandle (1 samples, 0.02%)</title><rect x="169.1" y="1603.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.1" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.postHandle (1 samples, 0.02%)</title><rect x="169.1" y="1587.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.1" y="1598.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/DispatcherServletWebRequest.&lt;init&gt; (1 samples, 0.02%)</title><rect x="169.1" y="1571.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.1" y="1582.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.&lt;init&gt; (1 samples, 0.02%)</title><rect x="169.1" y="1555.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.1" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletRequestAttributes.&lt;init&gt; (1 samples, 0.02%)</title><rect x="169.1" y="1539.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.1" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletRequestAttributes.&lt;init&gt; (1 samples, 0.02%)</title><rect x="169.1" y="1523.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.1" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="169.1" y="1507.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.1" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/HandlerExecutionChain.applyPreHandle (40 samples, 0.97%)</title><rect x="169.4" y="1603.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.4" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/ConversionServiceExposingInterceptor.preHandle (3 samples, 0.07%)</title><rect x="170.3" y="1587.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.3" y="1598.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.setAttribute (3 samples, 0.07%)</title><rect x="170.3" y="1571.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.3" y="1582.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.setAttribute (3 samples, 0.07%)</title><rect x="170.3" y="1555.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.3" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="170.3" y="1539.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.3" y="1550.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="170.3" y="1523.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.3" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (2 samples, 0.05%)</title><rect x="170.6" y="1539.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.6" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.05%)</title><rect x="170.6" y="1523.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.02%)</title><rect x="170.6" y="1507.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.6" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.02%)</title><rect x="170.9" y="1507.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.9" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.preHandle (34 samples, 0.83%)</title><rect x="171.2" y="1587.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.2" y="1598.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.preHandle (34 samples, 0.83%)</title><rect x="171.2" y="1571.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.2" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="171.2" y="1555.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.2" y="1566.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="171.2" y="1539.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.2" y="1550.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="171.2" y="1523.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.2" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="171.2" y="1507.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.2" y="1518.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="171.2" y="1491.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.2" y="1502.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="171.2" y="1475.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.2" y="1486.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="171.2" y="1459.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.2" y="1470.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="171.2" y="1443.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.2" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="171.2" y="1427.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="174.2" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="171.2" y="1411.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="171.2" y="1395.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.2" y="1406.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="171.2" y="1379.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.2" y="1390.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="171.2" y="1363.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.2" y="1374.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="171.2" y="1347.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.2" y="1358.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="171.2" y="1331.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.2" y="1342.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="171.2" y="1315.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.2" y="1326.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="171.2" y="1299.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.2" y="1310.0"></text>
</g>
<g>
<title>java/net/URL.isValidProtocol (1 samples, 0.02%)</title><rect x="171.2" y="1283.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="171.2" y="1267.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="171.2" y="1251.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.2" y="1262.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/EntityManagerFactoryAccessor.createEntityManager (23 samples, 0.56%)</title><rect x="171.4" y="1555.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.4" y="1566.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy108.createEntityManager (23 samples, 0.56%)</title><rect x="171.4" y="1539.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.4" y="1550.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke (23 samples, 0.56%)</title><rect x="171.4" y="1523.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.4" y="1534.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.invokeProxyMethod (23 samples, 0.56%)</title><rect x="171.4" y="1507.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.4" y="1518.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.36%)</title><rect x="171.4" y="1491.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.4" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.36%)</title><rect x="171.4" y="1475.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.4" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (15 samples, 0.36%)</title><rect x="171.4" y="1459.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.4" y="1470.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl.createEntityManager (15 samples, 0.36%)</title><rect x="171.4" y="1443.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.4" y="1454.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl.createEntityManager (15 samples, 0.36%)</title><rect x="171.4" y="1427.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.4" y="1438.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl.buildEntityManager (15 samples, 0.36%)</title><rect x="171.4" y="1411.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="174.4" y="1422.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl$SessionBuilderImpl.openSession (11 samples, 0.27%)</title><rect x="171.4" y="1395.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.4" y="1406.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl$SessionBuilderImpl.openSession (11 samples, 0.27%)</title><rect x="171.4" y="1379.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="174.4" y="1390.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.&lt;init&gt; (10 samples, 0.24%)</title><rect x="171.4" y="1363.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.4" y="1374.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.&lt;init&gt; (8 samples, 0.19%)</title><rect x="171.4" y="1347.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.4" y="1358.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.createJdbcCoordinator (1 samples, 0.02%)</title><rect x="172.3" y="1331.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.3" y="1342.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.createJdbcSessionContext (1 samples, 0.02%)</title><rect x="172.6" y="1331.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.6" y="1342.0"></text>
</g>
<g>
<title>org/hibernate/internal/JdbcSessionContextImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="172.6" y="1315.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.6" y="1326.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.createSessionEventsManager (1 samples, 0.02%)</title><rect x="172.9" y="1331.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.9" y="1342.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorBuilderImpl.buildTransactionCoordinator (2 samples, 0.05%)</title><rect x="173.2" y="1331.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.2" y="1342.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl.&lt;init&gt; (2 samples, 0.05%)</title><rect x="173.2" y="1315.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.2" y="1326.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.setUpMultitenancy (1 samples, 0.02%)</title><rect x="173.7" y="1347.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.7" y="1358.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl.getDefinedFilterNames (1 samples, 0.02%)</title><rect x="173.7" y="1331.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.7" y="1342.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableSet (1 samples, 0.02%)</title><rect x="173.7" y="1315.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.7" y="1326.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl.getStatistics (1 samples, 0.02%)</title><rect x="174.0" y="1347.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.0" y="1358.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.tracef (1 samples, 0.02%)</title><rect x="174.3" y="1363.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.3" y="1374.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.isEnabled (1 samples, 0.02%)</title><rect x="174.3" y="1347.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.3" y="1358.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl.withOptions (4 samples, 0.10%)</title><rect x="174.6" y="1395.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.6" y="1406.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl$SessionBuilderImpl.&lt;init&gt; (3 samples, 0.07%)</title><rect x="174.9" y="1379.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.9" y="1390.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl.getCurrentTenantIdentifierResolver (1 samples, 0.02%)</title><rect x="175.5" y="1363.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.5" y="1374.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.postProcessEntityManager (1 samples, 0.02%)</title><rect x="175.7" y="1491.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.7" y="1502.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator.createApplicationManagedEntityManager (7 samples, 0.17%)</title><rect x="176.0" y="1491.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.0" y="1502.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator.createProxy (7 samples, 0.17%)</title><rect x="176.0" y="1475.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.0" y="1486.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator.createProxy (7 samples, 0.17%)</title><rect x="176.0" y="1459.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (5 samples, 0.12%)</title><rect x="176.3" y="1443.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (5 samples, 0.12%)</title><rect x="176.3" y="1427.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (5 samples, 0.12%)</title><rect x="176.3" y="1411.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.3" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.12%)</title><rect x="176.3" y="1395.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Sub.equals (3 samples, 0.07%)</title><rect x="176.3" y="1379.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.3" y="1390.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.07%)</title><rect x="176.3" y="1363.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.3" y="1374.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (3 samples, 0.07%)</title><rect x="176.3" y="1347.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.3" y="1358.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="176.3" y="1331.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="179.3" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.02%)</title><rect x="176.6" y="1331.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.6" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.02%)</title><rect x="176.9" y="1331.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.9" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.02%)</title><rect x="176.9" y="1315.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.9" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractList$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="176.9" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.9" y="1310.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="176.9" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Sub.hashCode (2 samples, 0.05%)</title><rect x="177.2" y="1379.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.2" y="1390.0"></text>
</g>
<g>
<title>java/util/Objects.hashCode (2 samples, 0.05%)</title><rect x="177.2" y="1363.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.2" y="1374.0"></text>
</g>
<g>
<title>java/util/AbstractList.hashCode (2 samples, 0.05%)</title><rect x="177.2" y="1347.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/Object.equals (1 samples, 0.02%)</title><rect x="177.5" y="1331.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.5" y="1342.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.&lt;init&gt; (1 samples, 0.02%)</title><rect x="177.8" y="1443.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.8" y="1454.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.getParticipateAttributeName (4 samples, 0.10%)</title><rect x="178.0" y="1555.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.0" y="1566.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy108.toString (3 samples, 0.07%)</title><rect x="178.3" y="1539.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.3" y="1550.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke (3 samples, 0.07%)</title><rect x="178.3" y="1523.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.3" y="1534.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.invokeProxyMethod (3 samples, 0.07%)</title><rect x="178.3" y="1507.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="178.3" y="1491.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/reflect/Modifier.isStatic (1 samples, 0.02%)</title><rect x="178.3" y="1475.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.3" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="178.6" y="1475.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor25.invoke (2 samples, 0.05%)</title><rect x="178.6" y="1459.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.02%)</title><rect x="178.9" y="1443.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="178.9" y="1427.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="178.9" y="1411.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.9" y="1422.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="178.9" y="1395.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.9" y="1406.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.bindResource (2 samples, 0.05%)</title><rect x="179.2" y="1555.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.2" y="1566.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="179.2" y="1539.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="182.2" y="1550.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="179.2" y="1523.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="182.2" y="1534.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="179.2" y="1507.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="182.2" y="1518.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="179.2" y="1491.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="182.2" y="1502.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="179.5" y="1539.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.5" y="1550.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.hasResource (1 samples, 0.02%)</title><rect x="179.8" y="1555.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.8" y="1566.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.doGetResource (1 samples, 0.02%)</title><rect x="179.8" y="1539.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.8" y="1550.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="179.8" y="1523.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="179.8" y="1507.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.8" y="1518.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="179.8" y="1491.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="182.8" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/WebAsyncManager.registerCallableInterceptor (2 samples, 0.05%)</title><rect x="180.0" y="1555.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.0" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="180.0" y="1539.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.0" y="1550.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="180.0" y="1523.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.0" y="1534.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="180.0" y="1507.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.0" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="180.0" y="1491.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.0" y="1502.0"></text>
</g>
<g>
<title>org/springframework/util/Assert.notNull (1 samples, 0.02%)</title><rect x="180.3" y="1539.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.3" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/WebAsyncUtils.getAsyncManager (1 samples, 0.02%)</title><rect x="180.6" y="1555.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.6" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletRequestAttributes.getAttribute (1 samples, 0.02%)</title><rect x="180.6" y="1539.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.6" y="1550.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="180.6" y="1523.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.6" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.handle (2,069 samples, 50.28%)</title><rect x="180.9" y="1603.0" width="593.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.9" y="1614.0">org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.handle</text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.handleInternal (2,069 samples, 50.28%)</title><rect x="180.9" y="1587.0" width="593.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="183.9" y="1598.0">org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter..</text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.containsHeader (3 samples, 0.07%)</title><rect x="181.2" y="1571.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.2" y="1582.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.containsHeader (2 samples, 0.05%)</title><rect x="181.5" y="1555.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.5" y="1566.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="181.5" y="1539.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="184.5" y="1550.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="181.5" y="1523.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="184.5" y="1534.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="181.5" y="1507.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="184.5" y="1518.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="181.5" y="1491.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="184.5" y="1502.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="181.5" y="1475.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="184.5" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.02%)</title><rect x="181.5" y="1459.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="184.5" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="181.5" y="1443.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="184.5" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="181.5" y="1427.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="184.5" y="1438.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.containsHeader (1 samples, 0.02%)</title><rect x="181.8" y="1539.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.8" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.getSessionAttributesHandler (2 samples, 0.05%)</title><rect x="182.1" y="1571.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.1" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (2 samples, 0.05%)</title><rect x="182.1" y="1555.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="182.3" y="1539.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.3" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.invokeHandlerMethod (2,059 samples, 50.04%)</title><rect x="182.6" y="1571.0" width="590.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.6" y="1582.0">org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="183.5" y="1555.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="186.5" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="183.5" y="1539.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="186.5" y="1550.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="183.5" y="1523.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="186.5" y="1534.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="183.5" y="1507.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="186.5" y="1518.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="183.5" y="1491.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="186.5" y="1502.0"></text>
</g>
<g>
<title>_SafeFetchN_fault (1 samples, 0.02%)</title><rect x="183.5" y="1475.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="186.5" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/WebAsyncManager.isConcurrentHandlingStarted (1 samples, 0.02%)</title><rect x="183.8" y="1555.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.8" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/WebAsyncUtils.createAsyncWebRequest (1 samples, 0.02%)</title><rect x="184.1" y="1555.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.1" y="1566.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="184.1" y="1539.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="187.1" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/ModelFactory.initModel (6 samples, 0.15%)</title><rect x="184.3" y="1555.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.3" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/ModelFactory.findSessionAttributeArguments (3 samples, 0.07%)</title><rect x="184.3" y="1539.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.3" y="1550.0"></text>
</g>
<g>
<title>org/springframework/core/MethodParameter.hasParameterAnnotation (3 samples, 0.07%)</title><rect x="184.3" y="1523.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.3" y="1534.0"></text>
</g>
<g>
<title>org/springframework/core/MethodParameter.getParameterAnnotation (3 samples, 0.07%)</title><rect x="184.3" y="1507.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.3" y="1518.0"></text>
</g>
<g>
<title>Klass::search_secondary_supers(Klass*) const (1 samples, 0.02%)</title><rect x="184.6" y="1491.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="187.6" y="1502.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedMethod$AnnotatedMethodParameter.getParameterAnnotations (1 samples, 0.02%)</title><rect x="184.9" y="1491.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.9" y="1502.0"></text>
</g>
<g>
<title>org/springframework/core/MethodParameter.getParameterAnnotations (1 samples, 0.02%)</title><rect x="184.9" y="1475.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.9" y="1486.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/SynthesizingMethodParameter.adaptAnnotationArray (1 samples, 0.02%)</title><rect x="184.9" y="1459.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.9" y="1470.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationUtils.synthesizeAnnotationArray (1 samples, 0.02%)</title><rect x="184.9" y="1443.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.9" y="1454.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationUtils.synthesizeAnnotation (1 samples, 0.02%)</title><rect x="184.9" y="1427.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.9" y="1438.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AbstractMergedAnnotation.synthesize (1 samples, 0.02%)</title><rect x="184.9" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.9" y="1422.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotation.createSynthesizedAnnotation (1 samples, 0.02%)</title><rect x="184.9" y="1395.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.9" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler.createProxy (1 samples, 0.02%)</title><rect x="184.9" y="1379.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.02%)</title><rect x="184.9" y="1363.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.02%)</title><rect x="184.9" y="1347.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.02%)</title><rect x="184.9" y="1331.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (1 samples, 0.02%)</title><rect x="184.9" y="1315.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.02%)</title><rect x="184.9" y="1299.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.02%)</title><rect x="184.9" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generateConstructor (1 samples, 0.02%)</title><rect x="184.9" y="1267.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generate (1 samples, 0.02%)</title><rect x="184.9" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.9" y="1262.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="184.9" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.9" y="1246.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="184.9" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator$1.run (1 samples, 0.02%)</title><rect x="184.9" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator$1.run (1 samples, 0.02%)</title><rect x="184.9" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ClassDefiner.defineClass (1 samples, 0.02%)</title><rect x="184.9" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/System$2.defineClass (1 samples, 0.02%)</title><rect x="184.9" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="184.9" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.9" y="1150.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="184.9" y="1123.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="187.9" y="1134.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="184.9" y="1107.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="187.9" y="1118.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="184.9" y="1091.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="187.9" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="184.9" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="187.9" y="1086.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="184.9" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="187.9" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="184.9" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="187.9" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="184.9" y="1027.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="187.9" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="184.9" y="1011.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="187.9" y="1022.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="184.9" y="995.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="187.9" y="1006.0"></text>
</g>
<g>
<title>SymbolTable::lookup_shared(char const*, int, unsigned int) (1 samples, 0.02%)</title><rect x="184.9" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="187.9" y="990.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/ModelFactory.invokeModelAttributeMethods (1 samples, 0.02%)</title><rect x="185.2" y="1539.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.2" y="1550.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="185.2" y="1523.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="188.2" y="1534.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="185.2" y="1507.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="188.2" y="1518.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="185.2" y="1491.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="188.2" y="1502.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="185.2" y="1475.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="188.2" y="1486.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="185.2" y="1459.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="188.2" y="1470.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="185.2" y="1443.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="188.2" y="1454.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="185.2" y="1427.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="188.2" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/SessionAttributesHandler.retrieveAttributes (2 samples, 0.05%)</title><rect x="185.5" y="1539.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.5" y="1550.0"></text>
</g>
<g>
<title>java/util/HashSet.isEmpty (1 samples, 0.02%)</title><rect x="185.8" y="1523.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="188.8" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.createInvocableHandlerMethod (5 samples, 0.12%)</title><rect x="186.1" y="1555.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.1" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.&lt;init&gt; (5 samples, 0.12%)</title><rect x="186.1" y="1539.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.1" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/method/support/InvocableHandlerMethod.&lt;init&gt; (5 samples, 0.12%)</title><rect x="186.1" y="1523.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.1" y="1534.0"></text>
</g>
<g>
<title>org/springframework/core/DefaultParameterNameDiscoverer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="186.1" y="1507.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.1" y="1518.0"></text>
</g>
<g>
<title>org/springframework/core/PrioritizedParameterNameDiscoverer.addDiscoverer (1 samples, 0.02%)</title><rect x="186.1" y="1491.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.1" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/method/HandlerMethod.&lt;init&gt; (4 samples, 0.10%)</title><rect x="186.4" y="1507.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.4" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/method/HandlerMethod.&lt;init&gt; (1 samples, 0.02%)</title><rect x="187.2" y="1491.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.2" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.getDataBinderFactory (3 samples, 0.07%)</title><rect x="187.5" y="1555.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.5" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.createDataBinderFactory (1 samples, 0.02%)</title><rect x="188.1" y="1539.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.1" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.getModelAndView (1 samples, 0.02%)</title><rect x="188.4" y="1555.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.4" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/ModelFactory.updateModel (1 samples, 0.02%)</title><rect x="188.4" y="1539.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.4" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/SessionAttributesHandler.storeAttributes (1 samples, 0.02%)</title><rect x="188.4" y="1523.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="188.4" y="1507.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.4" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="188.4" y="1491.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.4" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/SessionAttributesHandler$$Lambda$2077.0x00007f9a5ca74f90.&lt;init&gt; (1 samples, 0.02%)</title><rect x="188.4" y="1475.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.4" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.getModelFactory (3 samples, 0.07%)</title><rect x="188.6" y="1555.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.6" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="188.9" y="1539.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.9" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x00007f9a5c12c000.newInvokeSpecial (1 samples, 0.02%)</title><rect x="188.9" y="1523.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.9" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="188.9" y="1507.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.9" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="188.9" y="1491.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.9" y="1502.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="188.9" y="1475.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="191.9" y="1486.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="188.9" y="1459.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="191.9" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.getSessionAttributesHandler (1 samples, 0.02%)</title><rect x="189.2" y="1539.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.2" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="189.2" y="1523.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.2" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter$$Lambda$1618.0x00007f9a5c9b7d28.apply (1 samples, 0.02%)</title><rect x="189.2" y="1507.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.2" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.lambda$getSessionAttributesHandler$3 (1 samples, 0.02%)</title><rect x="189.2" y="1491.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.2" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="189.2" y="1475.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="192.2" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="189.2" y="1459.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="192.2" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="189.2" y="1443.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="192.2" y="1454.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="189.2" y="1427.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="192.2" y="1438.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(JavaThread*) (1 samples, 0.02%)</title><rect x="189.2" y="1411.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="192.2" y="1422.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="189.2" y="1395.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="192.2" y="1406.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.invokeAndHandle (2,035 samples, 49.45%)</title><rect x="189.5" y="1555.0" width="583.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.5" y="1566.0">org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMeth..</text>
</g>
<g>
<title>org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.handleReturnValue (270 samples, 6.56%)</title><rect x="189.8" y="1539.0" width="77.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.8" y="1550.0">org/sprin..</text>
</g>
<g>
<title>org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.selectHandler (21 samples, 0.51%)</title><rect x="189.8" y="1523.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.8" y="1534.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="190.4" y="1507.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="193.4" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/ModelAttributeMethodProcessor.supportsReturnType (5 samples, 0.12%)</title><rect x="190.7" y="1507.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.7" y="1518.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedMethod$AnnotatedMethodParameter.hasMethodAnnotation (5 samples, 0.12%)</title><rect x="190.7" y="1491.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.7" y="1502.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedMethod.hasMethodAnnotation (5 samples, 0.12%)</title><rect x="190.7" y="1475.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.7" y="1486.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedElementUtils.hasAnnotation (5 samples, 0.12%)</title><rect x="190.7" y="1459.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.7" y="1470.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.isPresent (5 samples, 0.12%)</title><rect x="190.7" y="1443.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.7" y="1454.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.scan (5 samples, 0.12%)</title><rect x="190.7" y="1427.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.7" y="1438.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.scan (5 samples, 0.12%)</title><rect x="190.7" y="1411.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.7" y="1422.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.process (5 samples, 0.12%)</title><rect x="190.7" y="1395.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.7" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processMethod (5 samples, 0.12%)</title><rect x="190.7" y="1379.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.7" y="1390.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processMethodHierarchy (5 samples, 0.12%)</title><rect x="190.7" y="1363.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.7" y="1374.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processMethodAnnotations (5 samples, 0.12%)</title><rect x="190.7" y="1347.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.7" y="1358.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$IsPresent.doWithAnnotations (4 samples, 0.10%)</title><rect x="190.7" y="1331.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.7" y="1342.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$IsPresent.doWithAnnotations (4 samples, 0.10%)</title><rect x="190.7" y="1315.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.7" y="1326.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (3 samples, 0.07%)</title><rect x="190.7" y="1299.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.7" y="1310.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (3 samples, 0.07%)</title><rect x="190.7" y="1283.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.7" y="1294.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (3 samples, 0.07%)</title><rect x="190.7" y="1267.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="193.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="190.7" y="1251.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="190.7" y="1235.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="190.7" y="1219.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="190.7" y="1203.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.7" y="1214.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="190.7" y="1187.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="193.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="190.9" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.9" y="1262.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.get (1 samples, 0.02%)</title><rect x="190.9" y="1235.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.9" y="1246.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.getReference (1 samples, 0.02%)</title><rect x="190.9" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.9" y="1230.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.getReference (1 samples, 0.02%)</title><rect x="190.9" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.9" y="1214.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.restructureIfNecessary (1 samples, 0.02%)</title><rect x="190.9" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.9" y="1198.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.pollForPurge (1 samples, 0.02%)</title><rect x="190.9" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.02%)</title><rect x="190.9" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.02%)</title><rect x="190.9" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.9" y="1150.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/PackagesAnnotationFilter.hashCode (1 samples, 0.02%)</title><rect x="190.9" y="1123.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.9" y="1134.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings$Cache.get (1 samples, 0.02%)</title><rect x="191.2" y="1251.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="191.2" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.2" y="1246.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.get (1 samples, 0.02%)</title><rect x="191.2" y="1219.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.2" y="1230.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.getReference (1 samples, 0.02%)</title><rect x="191.2" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.2" y="1214.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.getReference (1 samples, 0.02%)</title><rect x="191.2" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.2" y="1198.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.restructureIfNecessary (1 samples, 0.02%)</title><rect x="191.2" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.2" y="1182.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.size (1 samples, 0.02%)</title><rect x="191.5" y="1299.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.5" y="1310.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.doWithAnnotations (1 samples, 0.02%)</title><rect x="191.8" y="1331.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.8" y="1342.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.doWithAnnotations (1 samples, 0.02%)</title><rect x="191.8" y="1315.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.8" y="1326.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.process (1 samples, 0.02%)</title><rect x="191.8" y="1299.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.8" y="1310.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (1 samples, 0.02%)</title><rect x="191.8" y="1283.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.8" y="1294.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (1 samples, 0.02%)</title><rect x="191.8" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.8" y="1278.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsProcessor.doWithAggregate (1 samples, 0.02%)</title><rect x="191.8" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.8" y="1262.0"></text>
</g>
<g>
<title>org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.isAsyncReturnValue (2 samples, 0.05%)</title><rect x="192.1" y="1507.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.1" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.supportsReturnType (2 samples, 0.05%)</title><rect x="192.7" y="1507.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.02%)</title><rect x="193.0" y="1491.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.0" y="1502.0"></text>
</g>
<g>
<title>Klass::search_secondary_supers(Klass*) const (1 samples, 0.02%)</title><rect x="193.0" y="1475.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="196.0" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.supportsReturnType (8 samples, 0.19%)</title><rect x="193.2" y="1507.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.2" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="193.2" y="1491.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="196.2" y="1502.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedElementUtils.hasAnnotation (5 samples, 0.12%)</title><rect x="193.5" y="1491.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.5" y="1502.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedElementUtils.findAnnotations (1 samples, 0.02%)</title><rect x="193.5" y="1475.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.5" y="1486.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/MergedAnnotations.from (1 samples, 0.02%)</title><rect x="193.5" y="1459.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.5" y="1470.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/MergedAnnotations.from (1 samples, 0.02%)</title><rect x="193.5" y="1443.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.5" y="1454.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/MergedAnnotations.from (1 samples, 0.02%)</title><rect x="193.5" y="1427.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.5" y="1438.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.from (1 samples, 0.02%)</title><rect x="193.5" y="1411.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.5" y="1422.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.isKnownEmpty (1 samples, 0.02%)</title><rect x="193.5" y="1395.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.5" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.hasPlainJavaAnnotationsOnly (1 samples, 0.02%)</title><rect x="193.5" y="1379.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.5" y="1390.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.hasPlainJavaAnnotationsOnly (1 samples, 0.02%)</title><rect x="193.5" y="1363.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="193.5" y="1347.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="193.5" y="1331.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.5" y="1342.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.isPresent (4 samples, 0.10%)</title><rect x="193.8" y="1475.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.8" y="1486.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.scan (4 samples, 0.10%)</title><rect x="193.8" y="1459.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="196.8" y="1470.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.scan (4 samples, 0.10%)</title><rect x="193.8" y="1443.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.8" y="1454.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.process (4 samples, 0.10%)</title><rect x="193.8" y="1427.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.8" y="1438.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processClass (4 samples, 0.10%)</title><rect x="193.8" y="1411.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.8" y="1422.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processClassHierarchy (4 samples, 0.10%)</title><rect x="193.8" y="1395.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.8" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processClassHierarchy (4 samples, 0.10%)</title><rect x="193.8" y="1379.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.8" y="1390.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$IsPresent.doWithAnnotations (4 samples, 0.10%)</title><rect x="193.8" y="1363.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="196.8" y="1374.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$IsPresent.doWithAnnotations (4 samples, 0.10%)</title><rect x="193.8" y="1347.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.8" y="1358.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="194.4" y="1331.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="197.4" y="1342.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy48.annotationType (1 samples, 0.02%)</title><rect x="194.7" y="1331.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.7" y="1342.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedMethod$AnnotatedMethodParameter.getContainingClass (2 samples, 0.05%)</title><rect x="195.0" y="1491.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.0" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/method/HandlerMethod.getContainingClass (1 samples, 0.02%)</title><rect x="195.2" y="1475.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.2" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/StreamingResponseBodyReturnValueHandler.supportsReturnType (1 samples, 0.02%)</title><rect x="195.5" y="1507.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.5" y="1518.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.02%)</title><rect x="195.5" y="1491.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.5" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.handleReturnValue (249 samples, 6.05%)</title><rect x="195.8" y="1523.0" width="71.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.8" y="1534.0">org/spri..</text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.createInputMessage (5 samples, 0.12%)</title><rect x="196.4" y="1507.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.4" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="196.7" y="1491.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.7" y="1502.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="196.7" y="1475.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.7" y="1486.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="196.7" y="1459.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="196.7" y="1443.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.7" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="196.7" y="1427.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.7" y="1438.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="196.7" y="1411.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.7" y="1422.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="196.7" y="1395.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.7" y="1406.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="196.7" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.7" y="1390.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="196.7" y="1363.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.7" y="1374.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="196.7" y="1347.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.7" y="1358.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="196.7" y="1331.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="196.7" y="1315.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="196.7" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.7" y="1310.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="196.7" y="1283.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="199.7" y="1294.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="196.7" y="1267.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="199.7" y="1278.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="196.7" y="1251.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="199.7" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="196.7" y="1235.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="199.7" y="1246.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="196.7" y="1219.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="199.7" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="196.7" y="1203.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="199.7" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="196.7" y="1187.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="199.7" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="196.7" y="1171.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="199.7" y="1182.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="196.7" y="1155.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="199.7" y="1166.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (1 samples, 0.02%)</title><rect x="196.7" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="199.7" y="1150.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.getNativeRequest (3 samples, 0.07%)</title><rect x="197.0" y="1491.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.0" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/util/WebUtils.getNativeRequest (3 samples, 0.07%)</title><rect x="197.0" y="1475.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.0" y="1486.0"></text>
</g>
<g>
<title>java/lang/Class.isInstance (2 samples, 0.05%)</title><rect x="197.3" y="1459.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.3" y="1470.0"></text>
</g>
<g>
<title>Java_java_lang_Class_isInstance (1 samples, 0.02%)</title><rect x="197.5" y="1443.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="200.5" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.createOutputMessage (6 samples, 0.15%)</title><rect x="197.8" y="1507.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.8" y="1518.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse.&lt;init&gt; (4 samples, 0.10%)</title><rect x="198.4" y="1491.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.4" y="1502.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders.&lt;init&gt; (3 samples, 0.07%)</title><rect x="198.7" y="1475.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.7" y="1486.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.&lt;init&gt; (3 samples, 0.07%)</title><rect x="198.7" y="1459.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.7" y="1470.0"></text>
</g>
<g>
<title>org/springframework/util/LinkedCaseInsensitiveMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="199.3" y="1443.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.3" y="1454.0"></text>
</g>
<g>
<title>org/springframework/util/CollectionUtils.newHashMap (1 samples, 0.02%)</title><rect x="199.3" y="1427.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.3" y="1438.0"></text>
</g>
<g>
<title>org/springframework/util/CollectionUtils.computeMapInitialCapacity (1 samples, 0.02%)</title><rect x="199.3" y="1411.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/Math.ceil (1 samples, 0.02%)</title><rect x="199.3" y="1395.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.3" y="1406.0"></text>
</g>
<g>
<title>java/lang/StrictMath.ceil (1 samples, 0.02%)</title><rect x="199.3" y="1379.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/StrictMath.floorOrCeil (1 samples, 0.02%)</title><rect x="199.3" y="1363.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/Math.getExponent (1 samples, 0.02%)</title><rect x="199.3" y="1347.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/Double.doubleToRawLongBits (1 samples, 0.02%)</title><rect x="199.3" y="1331.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.3" y="1342.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.writeWithMessageConverters (236 samples, 5.74%)</title><rect x="199.5" y="1507.0" width="67.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.5" y="1518.0">org/spr..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="201.6" y="1491.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.6" y="1502.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="201.8" y="1491.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="204.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="202.1" y="1491.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="202.1" y="1475.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.1" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="202.1" y="1459.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="205.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="202.1" y="1443.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.1" y="1454.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (1 samples, 0.02%)</title><rect x="202.1" y="1427.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="205.1" y="1438.0"></text>
</g>
<g>
<title>org/springframework/core/GenericTypeResolver.resolveType (1 samples, 0.02%)</title><rect x="202.4" y="1491.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.4" y="1502.0"></text>
</g>
<g>
<title>org/springframework/core/log/LogFormatUtils.traceDebug (1 samples, 0.02%)</title><rect x="202.7" y="1491.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.7" y="1502.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.getContentType (3 samples, 0.07%)</title><rect x="203.0" y="1491.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.0" y="1502.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders.getFirst (3 samples, 0.07%)</title><rect x="203.0" y="1475.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.0" y="1486.0"></text>
</g>
<g>
<title>jakarta/servlet/http/HttpServletResponseWrapper.getHeader (1 samples, 0.02%)</title><rect x="203.3" y="1459.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.3" y="1470.0"></text>
</g>
<g>
<title>jakarta/servlet/http/HttpServletResponseWrapper._getHttpServletResponse (1 samples, 0.02%)</title><rect x="203.3" y="1443.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.3" y="1454.0"></text>
</g>
<g>
<title>jakarta/servlet/ServletResponseWrapper.getResponse (1 samples, 0.02%)</title><rect x="203.3" y="1427.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.3" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.02%)</title><rect x="203.3" y="1411.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="206.3" y="1422.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="203.3" y="1395.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="206.3" y="1406.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="203.3" y="1379.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="206.3" y="1390.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="203.3" y="1363.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="206.3" y="1374.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.getFirst (1 samples, 0.02%)</title><rect x="203.6" y="1459.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.6" y="1470.0"></text>
</g>
<g>
<title>org/springframework/util/MultiValueMapAdapter.getFirst (1 samples, 0.02%)</title><rect x="203.6" y="1443.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.6" y="1454.0"></text>
</g>
<g>
<title>org/springframework/util/LinkedCaseInsensitiveMap.get (1 samples, 0.02%)</title><rect x="203.6" y="1427.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.6" y="1438.0"></text>
</g>
<g>
<title>org/springframework/util/LinkedCaseInsensitiveMap.convertKey (1 samples, 0.02%)</title><rect x="203.6" y="1411.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.6" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="203.6" y="1395.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="203.6" y="1379.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.6" y="1390.0"></text>
</g>
<g>
<title>org/springframework/http/converter/AbstractGenericHttpMessageConverter.canWrite (21 samples, 0.51%)</title><rect x="203.8" y="1491.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.8" y="1502.0"></text>
</g>
<g>
<title>org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.canWrite (21 samples, 0.51%)</title><rect x="203.8" y="1475.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.8" y="1486.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.canSerialize (20 samples, 0.49%)</title><rect x="203.8" y="1459.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.8" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._serializerProvider (2 samples, 0.05%)</title><rect x="204.1" y="1443.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.1" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider$Impl.createInstance (2 samples, 0.05%)</title><rect x="204.1" y="1427.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.1" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider$Impl.createInstance (2 samples, 0.05%)</title><rect x="204.1" y="1411.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.1" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider$Impl.&lt;init&gt; (2 samples, 0.05%)</title><rect x="204.1" y="1395.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.1" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.&lt;init&gt; (1 samples, 0.02%)</title><rect x="204.4" y="1379.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.4" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.&lt;init&gt; (1 samples, 0.02%)</title><rect x="204.4" y="1363.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.4" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.hasSerializerFor (17 samples, 0.41%)</title><rect x="204.7" y="1443.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.7" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider._findExplicitUntypedSerializer (17 samples, 0.41%)</title><rect x="204.7" y="1427.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.7" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider._createAndCacheUntypedSerializer (14 samples, 0.34%)</title><rect x="204.7" y="1411.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.7" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider._createUntypedSerializer (13 samples, 0.32%)</title><rect x="204.7" y="1395.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.7" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.createSerializer (13 samples, 0.32%)</title><rect x="204.7" y="1379.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.7" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializationConfig.introspect (2 samples, 0.05%)</title><rect x="204.7" y="1363.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.7" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.forSerialization (2 samples, 0.05%)</title><rect x="204.7" y="1347.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.7" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.forSerialization (2 samples, 0.05%)</title><rect x="204.7" y="1331.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.7" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.collectProperties (2 samples, 0.05%)</title><rect x="204.7" y="1315.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.7" y="1326.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicClassIntrospector._resolveAnnotatedClass (1 samples, 0.02%)</title><rect x="204.7" y="1299.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.7" y="1310.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.resolve (1 samples, 0.02%)</title><rect x="204.7" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.7" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.resolveFully (1 samples, 0.02%)</title><rect x="204.7" y="1267.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.7" y="1278.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.resolveClassAnnotations (1 samples, 0.02%)</title><rect x="204.7" y="1251.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.7" y="1262.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotationCollector$NCollector.asAnnotations (1 samples, 0.02%)</title><rect x="204.7" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="204.7" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.7" y="1230.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="204.7" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.7" y="1214.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="204.7" y="1187.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="204.7" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.7" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="204.7" y="1155.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.7" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="204.7" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.7" y="1150.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="204.7" y="1123.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.7" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="204.7" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.7" y="1118.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="204.7" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="204.7" y="1075.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="204.7" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.7" y="1070.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="204.7" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.7" y="1054.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="204.7" y="1027.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.7" y="1038.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.parseURL (1 samples, 0.02%)</title><rect x="204.7" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.7" y="1022.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.extractPath (1 samples, 0.02%)</title><rect x="204.7" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.7" y="1006.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.extractRelativePath (1 samples, 0.02%)</title><rect x="204.7" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="204.7" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.02%)</title><rect x="204.7" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.7" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="204.7" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.simpleConcat (1 samples, 0.02%)</title><rect x="204.7" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="204.7" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="204.7" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.7" y="894.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="204.7" y="867.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="207.7" y="878.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.constructPropertyCollector (1 samples, 0.02%)</title><rect x="205.0" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.0" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="205.0" y="1283.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="208.0" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="205.0" y="1267.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="208.0" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="205.0" y="1251.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="208.0" y="1262.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="205.0" y="1235.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="208.0" y="1246.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(JavaThread*) (1 samples, 0.02%)</title><rect x="205.0" y="1219.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="208.0" y="1230.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="205.0" y="1203.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="208.0" y="1214.0"></text>
</g>
<g>
<title>ClassVerifier::verify_aload(unsigned short, StackMapFrame*, JavaThread*) (1 samples, 0.02%)</title><rect x="205.0" y="1187.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="208.0" y="1198.0"></text>
</g>
<g>
<title>StackMapFrame::get_local(int, VerificationType, JavaThread*) (1 samples, 0.02%)</title><rect x="205.0" y="1171.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="208.0" y="1182.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory._createSerializer2 (11 samples, 0.27%)</title><rect x="205.3" y="1363.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.3" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.findSerializerByAnnotations (6 samples, 0.15%)</title><rect x="205.3" y="1347.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.3" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicBeanDescription.findJsonValueAccessor (6 samples, 0.15%)</title><rect x="205.3" y="1331.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.3" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.getJsonValueAccessor (6 samples, 0.15%)</title><rect x="205.3" y="1315.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.3" y="1326.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.collectAll (6 samples, 0.15%)</title><rect x="205.3" y="1299.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.3" y="1310.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector._addFields (4 samples, 0.10%)</title><rect x="205.3" y="1283.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.3" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClass.fields (2 samples, 0.05%)</title><rect x="205.3" y="1267.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.3" y="1278.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClass._fields (2 samples, 0.05%)</title><rect x="205.3" y="1251.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.3" y="1262.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedFieldCollector.collectFields (2 samples, 0.05%)</title><rect x="205.3" y="1235.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.3" y="1246.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedFieldCollector.collect (2 samples, 0.05%)</title><rect x="205.3" y="1219.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.3" y="1230.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedFieldCollector._findFields (2 samples, 0.05%)</title><rect x="205.3" y="1203.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.3" y="1214.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedFieldCollector._isIncludableField (1 samples, 0.02%)</title><rect x="205.3" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.3" y="1198.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="205.3" y="1171.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="208.3" y="1182.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="205.3" y="1155.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="208.3" y="1166.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="205.3" y="1139.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="208.3" y="1150.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="205.3" y="1123.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="208.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="205.6" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.6" y="1198.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="205.6" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.6" y="1182.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="205.6" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="205.6" y="1139.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.6" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="205.6" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.6" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="205.6" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.6" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="205.6" y="1091.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.6" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="205.6" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.6" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="205.6" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.6" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="205.6" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.6" y="1054.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="205.6" y="1027.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="205.6" y="1011.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="205.6" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.6" y="1006.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="205.6" y="979.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="208.6" y="990.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="205.6" y="963.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="208.6" y="974.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="205.6" y="947.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="208.6" y="958.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="205.6" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="208.6" y="942.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="205.6" y="915.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="208.6" y="926.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="205.6" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="208.6" y="910.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="205.6" y="883.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="208.6" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="205.6" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="208.6" y="878.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="205.6" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="208.6" y="862.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (1 samples, 0.02%)</title><rect x="205.6" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="208.6" y="846.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector._property (2 samples, 0.05%)</title><rect x="205.9" y="1267.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="205.9" y="1251.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="208.9" y="1262.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="205.9" y="1235.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="208.9" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="205.9" y="1219.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="208.9" y="1230.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="205.9" y="1203.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="208.9" y="1214.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.&lt;clinit&gt; (1 samples, 0.02%)</title><rect x="206.1" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="206.1" y="1235.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.1" y="1246.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="206.1" y="1219.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.1" y="1230.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="206.1" y="1203.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="206.1" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.1" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="206.1" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.1" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="206.1" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.1" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="206.1" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.1" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="206.1" y="1123.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.1" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="206.1" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="209.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="206.1" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="206.1" y="1075.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.1" y="1086.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="206.1" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.1" y="1070.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="206.1" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.1" y="1054.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="206.1" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.1" y="1038.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="206.1" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.1" y="1022.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="206.1" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.1" y="1006.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="206.1" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.1" y="990.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.02%)</title><rect x="206.1" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="206.1" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.1" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="206.1" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.1" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector._addMethods (1 samples, 0.02%)</title><rect x="206.4" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.4" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClass.memberMethods (1 samples, 0.02%)</title><rect x="206.4" y="1267.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.4" y="1278.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClass._methods (1 samples, 0.02%)</title><rect x="206.4" y="1251.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.4" y="1262.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedMethodCollector.collectMethods (1 samples, 0.02%)</title><rect x="206.4" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.4" y="1246.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedMethodCollector.collect (1 samples, 0.02%)</title><rect x="206.4" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="206.4" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.4" y="1214.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="206.4" y="1187.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.4" y="1198.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="206.4" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="206.4" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.4" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="206.4" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.4" y="1150.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="206.4" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.4" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="206.4" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.4" y="1118.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="206.4" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.4" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="206.4" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="206.4" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="206.4" y="1043.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.4" y="1054.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="206.4" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.4" y="1038.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="206.4" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.4" y="1022.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="206.4" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.4" y="1006.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.hasEntry (1 samples, 0.02%)</title><rect x="206.4" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.4" y="990.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.hasEntry (1 samples, 0.02%)</title><rect x="206.4" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.4" y="974.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/ZipContent.hasEntry (1 samples, 0.02%)</title><rect x="206.4" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.4" y="958.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/ZipContent.getFirstLookupIndex (1 samples, 0.02%)</title><rect x="206.4" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.4" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector._removeUnwantedProperties (1 samples, 0.02%)</title><rect x="206.7" y="1283.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.7" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.anyVisible (1 samples, 0.02%)</title><rect x="206.7" y="1267.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.7" y="1278.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder._anyVisible (1 samples, 0.02%)</title><rect x="206.7" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.7" y="1262.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.findSerializerByPrimaryType (1 samples, 0.02%)</title><rect x="207.0" y="1347.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.0" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.findOptionalStdSerializer (1 samples, 0.02%)</title><rect x="207.0" y="1331.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.0" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ext/OptionalHandlerFactory.findSerializer (1 samples, 0.02%)</title><rect x="207.0" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.0" y="1326.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ext/Java7HandlersImpl.getSerializerForJavaNioFilePath (1 samples, 0.02%)</title><rect x="207.0" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.0" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="207.0" y="1283.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="210.0" y="1294.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="207.0" y="1267.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="210.0" y="1278.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="207.0" y="1251.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="210.0" y="1262.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_virtual_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="207.0" y="1235.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="210.0" y="1246.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="207.0" y="1219.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="210.0" y="1230.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.findBeanOrAddOnSerializer (4 samples, 0.10%)</title><rect x="207.3" y="1347.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.3" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.constructBeanOrAddOnSerializer (4 samples, 0.10%)</title><rect x="207.3" y="1331.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.3" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.filterBeanProperties (1 samples, 0.02%)</title><rect x="207.3" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.3" y="1326.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/MapperConfigBase.getDefaultPropertyInclusions (1 samples, 0.02%)</title><rect x="207.3" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.3" y="1310.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.findPropertyInclusionByName (1 samples, 0.02%)</title><rect x="207.3" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.3" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.findPropertyInclusionByName (1 samples, 0.02%)</title><rect x="207.3" y="1267.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="207.3" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.3" y="1262.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="207.3" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.3" y="1246.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="207.3" y="1219.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="207.3" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.3" y="1214.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="207.3" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.3" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="207.3" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.3" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="207.3" y="1155.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.3" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="207.3" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.3" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="207.3" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.3" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="207.3" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.3" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="207.3" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="207.3" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="207.3" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.3" y="1070.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="207.3" y="1043.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="210.3" y="1054.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="207.3" y="1027.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="210.3" y="1038.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="207.3" y="1011.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="210.3" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="207.3" y="995.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="210.3" y="1006.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="207.3" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="210.3" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="207.3" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="210.3" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="207.3" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="210.3" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="207.3" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="210.3" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.findBeanProperties (3 samples, 0.07%)</title><rect x="207.6" y="1315.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.6" y="1326.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory._constructWriter (3 samples, 0.07%)</title><rect x="207.6" y="1299.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.6" y="1310.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.findPropertyTypeSerializer (1 samples, 0.02%)</title><rect x="207.6" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.6" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.findPropertyTypeResolver (1 samples, 0.02%)</title><rect x="207.6" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.6" y="1278.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.findPropertyTypeResolver (1 samples, 0.02%)</title><rect x="207.6" y="1251.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.6" y="1262.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector._findTypeResolver (1 samples, 0.02%)</title><rect x="207.6" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.6" y="1246.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="207.6" y="1219.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="210.6" y="1230.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="207.6" y="1203.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="210.6" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="207.6" y="1187.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="210.6" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="207.6" y="1171.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="210.6" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="207.6" y="1155.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="210.6" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="207.6" y="1139.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="210.6" y="1150.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/PropertyBuilder.buildWriter (2 samples, 0.05%)</title><rect x="207.9" y="1283.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.9" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/PropertyBuilder._constructPropertyWriter (1 samples, 0.02%)</title><rect x="208.1" y="1267.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.1" y="1278.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="208.1" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="211.1" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="208.1" y="1235.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="211.1" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="208.1" y="1219.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="211.1" y="1230.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="208.1" y="1203.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="211.1" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="208.1" y="1187.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="211.1" y="1198.0"></text>
</g>
<g>
<title>_SafeFetchN_fault (1 samples, 0.02%)</title><rect x="208.1" y="1171.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="211.1" y="1182.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/MapperConfig.constructType (1 samples, 0.02%)</title><rect x="208.4" y="1395.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.4" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (1 samples, 0.02%)</title><rect x="208.4" y="1379.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.4" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (1 samples, 0.02%)</title><rect x="208.4" y="1363.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.4" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (1 samples, 0.02%)</title><rect x="208.4" y="1347.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.4" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/LRUMap.putIfAbsent (1 samples, 0.02%)</title><rect x="208.4" y="1331.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.4" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.putIfAbsent (1 samples, 0.02%)</title><rect x="208.4" y="1315.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.4" y="1326.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.put (1 samples, 0.02%)</title><rect x="208.4" y="1299.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.4" y="1310.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.afterRead (1 samples, 0.02%)</title><rect x="208.4" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.4" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.recordRead (1 samples, 0.02%)</title><rect x="208.4" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.4" y="1278.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="208.4" y="1251.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="211.4" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="208.4" y="1235.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="211.4" y="1246.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="208.4" y="1219.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="211.4" y="1230.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="208.4" y="1203.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="211.4" y="1214.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.isUnknownTypeSerializer (2 samples, 0.05%)</title><rect x="208.7" y="1411.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.7" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.isEnabled (1 samples, 0.02%)</title><rect x="209.0" y="1395.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.0" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializationConfig.isEnabled (1 samples, 0.02%)</title><rect x="209.0" y="1379.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.0" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializationFeature.getMask (1 samples, 0.02%)</title><rect x="209.0" y="1363.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.0" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap.untypedValueSerializer (1 samples, 0.02%)</title><rect x="209.3" y="1411.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.3" y="1422.0"></text>
</g>
<g>
<title>org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.selectObjectMapper (1 samples, 0.02%)</title><rect x="209.6" y="1459.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.6" y="1470.0"></text>
</g>
<g>
<title>org/springframework/util/CollectionUtils.isEmpty (1 samples, 0.02%)</title><rect x="209.6" y="1443.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.6" y="1454.0"></text>
</g>
<g>
<title>org/springframework/http/converter/AbstractGenericHttpMessageConverter.write (160 samples, 3.89%)</title><rect x="209.9" y="1491.0" width="45.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.9" y="1502.0">org/..</text>
</g>
<g>
<title>org/springframework/http/converter/AbstractHttpMessageConverter.addDefaultHeaders (15 samples, 0.36%)</title><rect x="210.2" y="1475.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.2" y="1486.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.getContentLength (1 samples, 0.02%)</title><rect x="211.0" y="1459.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.0" y="1470.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders.getFirst (1 samples, 0.02%)</title><rect x="211.0" y="1443.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.0" y="1454.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.getFirst (1 samples, 0.02%)</title><rect x="211.0" y="1427.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.0" y="1438.0"></text>
</g>
<g>
<title>org/springframework/util/MultiValueMapAdapter.getFirst (1 samples, 0.02%)</title><rect x="211.0" y="1411.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.0" y="1422.0"></text>
</g>
<g>
<title>org/springframework/util/LinkedCaseInsensitiveMap.get (1 samples, 0.02%)</title><rect x="211.0" y="1395.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.0" y="1406.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.getContentType (5 samples, 0.12%)</title><rect x="211.3" y="1459.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.3" y="1470.0"></text>
</g>
<g>
<title>org/springframework/http/MediaType.parseMediaType (4 samples, 0.10%)</title><rect x="211.3" y="1443.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.3" y="1454.0"></text>
</g>
<g>
<title>org/springframework/http/MediaType.&lt;init&gt; (3 samples, 0.07%)</title><rect x="211.3" y="1427.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.3" y="1438.0"></text>
</g>
<g>
<title>java/util/Collections$EmptyMap.forEach (1 samples, 0.02%)</title><rect x="211.6" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.6" y="1422.0"></text>
</g>
<g>
<title>org/springframework/util/MimeType.getParameters (1 samples, 0.02%)</title><rect x="211.9" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.9" y="1422.0"></text>
</g>
<g>
<title>org/springframework/util/MimeTypeUtils.parseMimeType (1 samples, 0.02%)</title><rect x="212.2" y="1427.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="212.2" y="1411.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="212.2" y="1395.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="212.2" y="1379.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="215.2" y="1390.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.hasLength (1 samples, 0.02%)</title><rect x="212.4" y="1443.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="215.4" y="1454.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.setContentType (2 samples, 0.05%)</title><rect x="212.7" y="1459.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.7" y="1470.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.set (2 samples, 0.05%)</title><rect x="212.7" y="1443.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.7" y="1454.0"></text>
</g>
<g>
<title>org/springframework/util/MultiValueMapAdapter.set (1 samples, 0.02%)</title><rect x="213.0" y="1427.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.0" y="1438.0"></text>
</g>
<g>
<title>org/springframework/util/LinkedCaseInsensitiveMap.put (1 samples, 0.02%)</title><rect x="213.0" y="1411.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.0" y="1422.0"></text>
</g>
<g>
<title>org/springframework/util/LinkedCaseInsensitiveMap.put (1 samples, 0.02%)</title><rect x="213.0" y="1395.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.0" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="213.0" y="1379.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.0" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="213.0" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.0" y="1374.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders.containsKey (2 samples, 0.05%)</title><rect x="213.3" y="1459.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.3" y="1470.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders.get (2 samples, 0.05%)</title><rect x="213.3" y="1443.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.3" y="1454.0"></text>
</g>
<g>
<title>jakarta/servlet/http/HttpServletResponseWrapper.getHeaders (1 samples, 0.02%)</title><rect x="213.6" y="1427.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.6" y="1438.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.getHeaders (1 samples, 0.02%)</title><rect x="213.6" y="1411.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.6" y="1422.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.checkFacade (1 samples, 0.02%)</title><rect x="213.6" y="1395.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.6" y="1406.0"></text>
</g>
<g>
<title>org/springframework/util/MimeType.equals (1 samples, 0.02%)</title><rect x="213.9" y="1459.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.9" y="1470.0"></text>
</g>
<g>
<title>org/springframework/util/MimeType.isConcrete (1 samples, 0.02%)</title><rect x="214.2" y="1459.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.2" y="1470.0"></text>
</g>
<g>
<title>org/springframework/util/MimeType.isWildcardSubtype (1 samples, 0.02%)</title><rect x="214.2" y="1443.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.2" y="1454.0"></text>
</g>
<g>
<title>org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.writeInternal (139 samples, 3.38%)</title><rect x="214.5" y="1475.0" width="39.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.5" y="1486.0">org..</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="215.3" y="1459.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="218.3" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="215.3" y="1443.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="218.3" y="1454.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="215.3" y="1427.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="218.3" y="1438.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="215.3" y="1411.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="218.3" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="215.3" y="1395.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="218.3" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="215.3" y="1379.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="218.3" y="1390.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="215.3" y="1363.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="218.3" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="215.3" y="1347.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="218.3" y="1358.0"></text>
</g>
<g>
<title>_SafeFetchN_fault (1 samples, 0.02%)</title><rect x="215.3" y="1331.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="218.3" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createGenerator (11 samples, 0.27%)</title><rect x="215.6" y="1459.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.6" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createContext (2 samples, 0.05%)</title><rect x="215.6" y="1443.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.6" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._getBufferRecycler (1 samples, 0.02%)</title><rect x="215.6" y="1427.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="215.9" y="1427.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.9" y="1438.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="215.9" y="1411.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.9" y="1422.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="215.9" y="1395.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="215.9" y="1379.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.9" y="1390.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="215.9" y="1363.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.9" y="1374.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="215.9" y="1347.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.9" y="1358.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="215.9" y="1331.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.9" y="1342.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="215.9" y="1315.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.9" y="1326.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="215.9" y="1299.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="215.9" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="215.9" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.9" y="1278.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="215.9" y="1251.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.9" y="1262.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="215.9" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="215.9" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="215.9" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.9" y="1214.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createUTF8Generator (9 samples, 0.22%)</title><rect x="216.2" y="1443.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.2" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator.&lt;init&gt; (8 samples, 0.19%)</title><rect x="216.5" y="1427.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.5" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.allocConcatBuffer (3 samples, 0.07%)</title><rect x="216.5" y="1411.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.5" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer (3 samples, 0.07%)</title><rect x="216.5" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.5" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer (3 samples, 0.07%)</title><rect x="216.5" y="1379.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.getAndSet (1 samples, 0.02%)</title><rect x="217.0" y="1363.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.0" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (1 samples, 0.02%)</title><rect x="217.0" y="1347.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="220.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.02%)</title><rect x="217.0" y="1331.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.0" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.allocWriteEncodingBuffer (2 samples, 0.05%)</title><rect x="217.3" y="1411.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.3" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.allocByteBuffer (2 samples, 0.05%)</title><rect x="217.3" y="1395.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.3" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.allocByteBuffer (2 samples, 0.05%)</title><rect x="217.3" y="1379.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.3" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.getAndSet (2 samples, 0.05%)</title><rect x="217.3" y="1363.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (2 samples, 0.05%)</title><rect x="217.3" y="1347.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.getAndSet (1 samples, 0.02%)</title><rect x="217.6" y="1331.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndSetReference (1 samples, 0.02%)</title><rect x="217.6" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getReferenceVolatile (1 samples, 0.02%)</title><rect x="217.6" y="1299.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.6" y="1310.0"></text>
</g>
<g>
<title>Unsafe_GetReferenceVolatile (1 samples, 0.02%)</title><rect x="217.6" y="1283.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="220.6" y="1294.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;402470ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 402470ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.02%)</title><rect x="217.6" y="1267.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="220.6" y="1278.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.02%)</title><rect x="217.6" y="1251.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="220.6" y="1262.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonGeneratorImpl.&lt;init&gt; (3 samples, 0.07%)</title><rect x="217.9" y="1411.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.9" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/GeneratorBase.&lt;init&gt; (1 samples, 0.02%)</title><rect x="218.5" y="1395.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.5" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonWriteContext.createRootContext (1 samples, 0.02%)</title><rect x="218.5" y="1379.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.5" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonWriteContext.&lt;init&gt; (1 samples, 0.02%)</title><rect x="218.5" y="1363.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.5" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonStreamContext.&lt;init&gt; (1 samples, 0.02%)</title><rect x="218.5" y="1347.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.5" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator.close (6 samples, 0.15%)</title><rect x="218.8" y="1459.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.8" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/GeneratorBase.close (1 samples, 0.02%)</title><rect x="219.0" y="1443.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.0" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/GeneratorBase.isEnabled (1 samples, 0.02%)</title><rect x="219.3" y="1443.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.3" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonGenerator$Feature.getMask (1 samples, 0.02%)</title><rect x="219.3" y="1427.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.3" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator._releaseBuffers (3 samples, 0.07%)</title><rect x="219.6" y="1443.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.6" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.releaseWriteEncodingBuffer (3 samples, 0.07%)</title><rect x="219.6" y="1427.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.6" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.releaseByteBuffer (3 samples, 0.07%)</title><rect x="219.6" y="1411.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.6" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.set (2 samples, 0.05%)</title><rect x="219.9" y="1395.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.02%)</title><rect x="220.2" y="1379.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.setVolatile (1 samples, 0.02%)</title><rect x="220.2" y="1363.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.2" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/util/Preconditions.checkIndex (1 samples, 0.02%)</title><rect x="220.2" y="1347.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.2" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator.flush (5 samples, 0.12%)</title><rect x="220.5" y="1459.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.5" y="1470.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.flush (5 samples, 0.12%)</title><rect x="220.5" y="1443.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.5" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/StandardServletAsyncWebRequest$LifecycleServletOutputStream.flush (4 samples, 0.10%)</title><rect x="220.8" y="1427.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.8" y="1438.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteOutputStream.flush (4 samples, 0.10%)</title><rect x="220.8" y="1411.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.8" y="1422.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.flush (4 samples, 0.10%)</title><rect x="220.8" y="1395.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.8" y="1406.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.doFlush (4 samples, 0.10%)</title><rect x="220.8" y="1379.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.8" y="1390.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.action (4 samples, 0.10%)</title><rect x="220.8" y="1363.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.8" y="1374.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.action (3 samples, 0.07%)</title><rect x="221.1" y="1347.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.1" y="1358.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.handleIOException (1 samples, 0.02%)</title><rect x="221.1" y="1331.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.1" y="1342.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="221.1" y="1315.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.1" y="1326.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.flush (2 samples, 0.05%)</title><rect x="221.3" y="1331.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.3" y="1342.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.flush (2 samples, 0.05%)</title><rect x="221.3" y="1315.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.3" y="1326.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/filters/ChunkedOutputFilter.flush (2 samples, 0.05%)</title><rect x="221.3" y="1299.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.3" y="1310.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer$SocketOutputBuffer.flush (1 samples, 0.02%)</title><rect x="221.6" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.6" y="1294.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flush (1 samples, 0.02%)</title><rect x="221.6" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.6" y="1278.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flushBlocking (1 samples, 0.02%)</title><rect x="221.6" y="1251.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.6" y="1262.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.doWrite (1 samples, 0.02%)</title><rect x="221.6" y="1235.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.6" y="1246.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.doWrite (1 samples, 0.02%)</title><rect x="221.6" y="1219.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.6" y="1230.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.write (1 samples, 0.02%)</title><rect x="221.6" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.6" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.02%)</title><rect x="221.6" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.6" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.02%)</title><rect x="221.6" y="1171.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.6" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.02%)</title><rect x="221.6" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.6" y="1166.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="221.6" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.6" y="1150.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.writer (1 samples, 0.02%)</title><rect x="221.9" y="1459.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.9" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._newWriter (1 samples, 0.02%)</title><rect x="221.9" y="1443.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.9" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="221.9" y="1427.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="224.9" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="221.9" y="1411.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="224.9" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="221.9" y="1395.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="224.9" y="1406.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="221.9" y="1379.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="224.9" y="1390.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(JavaThread*) (1 samples, 0.02%)</title><rect x="221.9" y="1363.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="224.9" y="1374.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="221.9" y="1347.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="224.9" y="1358.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, JavaThread*) (1 samples, 0.02%)</title><rect x="221.9" y="1331.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="224.9" y="1342.0"></text>
</g>
<g>
<title>ClassVerifier::create_method_sig_entry(sig_as_verification_types*, int) (1 samples, 0.02%)</title><rect x="221.9" y="1315.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="224.9" y="1326.0"></text>
</g>
<g>
<title>ClassVerifier::translate_signature(Symbol*, sig_as_verification_types*) (1 samples, 0.02%)</title><rect x="221.9" y="1299.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="224.9" y="1310.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.02%)</title><rect x="221.9" y="1283.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="224.9" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectWriter.writeValue (86 samples, 2.09%)</title><rect x="222.2" y="1459.0" width="24.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.2" y="1470.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator.flush (71 samples, 1.73%)</title><rect x="222.5" y="1443.0" width="20.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.5" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator._flushBuffer (5 samples, 0.12%)</title><rect x="222.8" y="1427.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.8" y="1438.0"></text>
</g>
<g>
<title>org/springframework/util/StreamUtils$NonClosingOutputStream.write (5 samples, 0.12%)</title><rect x="222.8" y="1411.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.8" y="1422.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/StandardServletAsyncWebRequest$LifecycleServletOutputStream.write (5 samples, 0.12%)</title><rect x="222.8" y="1395.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.8" y="1406.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteOutputStream.write (5 samples, 0.12%)</title><rect x="222.8" y="1379.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.8" y="1390.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.write (5 samples, 0.12%)</title><rect x="222.8" y="1363.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.8" y="1374.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.writeBytes (2 samples, 0.05%)</title><rect x="223.6" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.6" y="1358.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.append (2 samples, 0.05%)</title><rect x="223.6" y="1331.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.6" y="1342.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.appendByteArray (2 samples, 0.05%)</title><rect x="223.6" y="1315.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.6" y="1326.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1 samples, 0.02%)</title><rect x="223.6" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.6" y="1310.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.transfer (1 samples, 0.02%)</title><rect x="223.9" y="1299.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.9" y="1310.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.toWriteMode (1 samples, 0.02%)</title><rect x="223.9" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.9" y="1294.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.flush (65 samples, 1.58%)</title><rect x="224.2" y="1427.0" width="18.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.2" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/StandardServletAsyncWebRequest$LifecycleServletOutputStream.flush (65 samples, 1.58%)</title><rect x="224.2" y="1411.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.2" y="1422.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteOutputStream.flush (65 samples, 1.58%)</title><rect x="224.2" y="1395.0" width="18.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.2" y="1406.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.flush (65 samples, 1.58%)</title><rect x="224.2" y="1379.0" width="18.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.2" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="224.2" y="1363.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="227.2" y="1374.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="224.2" y="1347.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="227.2" y="1358.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="224.2" y="1331.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="227.2" y="1342.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="224.2" y="1315.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="227.2" y="1326.0"></text>
</g>
<g>
<title>Method::is_accessor() const (1 samples, 0.02%)</title><rect x="224.2" y="1299.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="227.2" y="1310.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.doFlush (64 samples, 1.56%)</title><rect x="224.5" y="1363.0" width="18.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.5" y="1374.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.flushByteBuffer (9 samples, 0.22%)</title><rect x="224.5" y="1347.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.5" y="1358.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="224.5" y="1331.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.5" y="1342.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (2 samples, 0.05%)</title><rect x="224.8" y="1331.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.8" y="1342.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="225.1" y="1315.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.1" y="1326.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.clear (1 samples, 0.02%)</title><rect x="225.4" y="1331.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.4" y="1342.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.02%)</title><rect x="225.4" y="1315.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.4" y="1326.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.realWriteBytes (5 samples, 0.12%)</title><rect x="225.6" y="1331.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.6" y="1342.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.doWrite (3 samples, 0.07%)</title><rect x="226.2" y="1315.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.2" y="1326.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.doWrite (3 samples, 0.07%)</title><rect x="226.2" y="1299.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="229.2" y="1310.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/filters/ChunkedOutputFilter.doWrite (2 samples, 0.05%)</title><rect x="226.5" y="1283.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.5" y="1294.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer$SocketOutputBuffer.doWrite (1 samples, 0.02%)</title><rect x="226.5" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.5" y="1278.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.write (1 samples, 0.02%)</title><rect x="226.5" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.5" y="1262.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.writeBlocking (1 samples, 0.02%)</title><rect x="226.5" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.5" y="1246.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.transfer (1 samples, 0.02%)</title><rect x="226.5" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.5" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="226.5" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.5" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.02%)</title><rect x="226.5" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.5" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.putBuffer (1 samples, 0.02%)</title><rect x="226.5" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemory (1 samples, 0.02%)</title><rect x="226.5" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemoryInternal (1 samples, 0.02%)</title><rect x="226.5" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.02%)</title><rect x="226.5" y="1123.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.02%)</title><rect x="226.5" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.02%)</title><rect x="226.5" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.02%)</title><rect x="226.5" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.5" y="1086.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/filters/ChunkedOutputFilter.calculateChunkHeader (1 samples, 0.02%)</title><rect x="226.8" y="1267.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.8" y="1278.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="226.8" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.8" y="1262.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.action (28 samples, 0.68%)</title><rect x="227.1" y="1347.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.1" y="1358.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.action (28 samples, 0.68%)</title><rect x="227.1" y="1331.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.1" y="1342.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.flush (28 samples, 0.68%)</title><rect x="227.1" y="1315.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.1" y="1326.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.flush (28 samples, 0.68%)</title><rect x="227.1" y="1299.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.1" y="1310.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/filters/ChunkedOutputFilter.flush (28 samples, 0.68%)</title><rect x="227.1" y="1283.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.1" y="1294.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer$SocketOutputBuffer.flush (28 samples, 0.68%)</title><rect x="227.1" y="1267.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.1" y="1278.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flush (28 samples, 0.68%)</title><rect x="227.1" y="1251.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.1" y="1262.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flushBlocking (28 samples, 0.68%)</title><rect x="227.1" y="1235.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.1" y="1246.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.doWrite (28 samples, 0.68%)</title><rect x="227.1" y="1219.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.1" y="1230.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.doWrite (28 samples, 0.68%)</title><rect x="227.1" y="1203.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.1" y="1214.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.write (28 samples, 0.68%)</title><rect x="227.1" y="1187.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.1" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (28 samples, 0.68%)</title><rect x="227.1" y="1171.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.1" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (28 samples, 0.68%)</title><rect x="227.1" y="1155.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.1" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (28 samples, 0.68%)</title><rect x="227.1" y="1139.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.1" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (2 samples, 0.05%)</title><rect x="227.1" y="1123.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.putBuffer (2 samples, 0.05%)</title><rect x="227.1" y="1107.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemory (1 samples, 0.02%)</title><rect x="227.4" y="1091.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemoryInternal (1 samples, 0.02%)</title><rect x="227.4" y="1075.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (23 samples, 0.56%)</title><rect x="227.6" y="1123.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.6" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (23 samples, 0.56%)</title><rect x="227.6" y="1107.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.6" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (23 samples, 0.56%)</title><rect x="227.6" y="1091.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.6" y="1102.0"></text>
</g>
<g>
<title>__write (22 samples, 0.53%)</title><rect x="227.9" y="1075.0" width="6.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="230.9" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.51%)</title><rect x="228.2" y="1059.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.2" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.51%)</title><rect x="228.2" y="1043.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="231.2" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_write (21 samples, 0.51%)</title><rect x="228.2" y="1027.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="231.2" y="1038.0"></text>
</g>
<g>
<title>ksys_write (21 samples, 0.51%)</title><rect x="228.2" y="1011.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="231.2" y="1022.0"></text>
</g>
<g>
<title>vfs_write (21 samples, 0.51%)</title><rect x="228.2" y="995.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="231.2" y="1006.0"></text>
</g>
<g>
<title>__vfs_write (21 samples, 0.51%)</title><rect x="228.2" y="979.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="231.2" y="990.0"></text>
</g>
<g>
<title>new_sync_write (21 samples, 0.51%)</title><rect x="228.2" y="963.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="231.2" y="974.0"></text>
</g>
<g>
<title>sock_write_iter (20 samples, 0.49%)</title><rect x="228.5" y="947.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="231.5" y="958.0"></text>
</g>
<g>
<title>__sock_sendmsg (20 samples, 0.49%)</title><rect x="228.5" y="931.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="231.5" y="942.0"></text>
</g>
<g>
<title>inet6_sendmsg (20 samples, 0.49%)</title><rect x="228.5" y="915.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="231.5" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg (20 samples, 0.49%)</title><rect x="228.5" y="899.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="231.5" y="910.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="228.5" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="231.5" y="894.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.02%)</title><rect x="228.5" y="867.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="231.5" y="878.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="228.5" y="851.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="231.5" y="862.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="228.5" y="835.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="231.5" y="846.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="228.5" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="231.5" y="830.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="228.5" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="231.5" y="814.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (19 samples, 0.46%)</title><rect x="228.8" y="883.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="231.8" y="894.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="228.8" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.8" y="878.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="228.8" y="851.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="231.8" y="862.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="229.1" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="232.1" y="878.0"></text>
</g>
<g>
<title>tcp_push (17 samples, 0.41%)</title><rect x="229.4" y="867.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.4" y="878.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (17 samples, 0.41%)</title><rect x="229.4" y="851.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.4" y="862.0"></text>
</g>
<g>
<title>tcp_write_xmit (17 samples, 0.41%)</title><rect x="229.4" y="835.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="232.4" y="846.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (15 samples, 0.36%)</title><rect x="229.4" y="819.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.4" y="830.0"></text>
</g>
<g>
<title>ip_queue_xmit (15 samples, 0.36%)</title><rect x="229.4" y="803.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="232.4" y="814.0"></text>
</g>
<g>
<title>__ip_queue_xmit (15 samples, 0.36%)</title><rect x="229.4" y="787.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="232.4" y="798.0"></text>
</g>
<g>
<title>ip_local_out (15 samples, 0.36%)</title><rect x="229.4" y="771.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="232.4" y="782.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.05%)</title><rect x="229.4" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.4" y="766.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.02%)</title><rect x="229.4" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="232.4" y="750.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="229.7" y="739.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="232.7" y="750.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.02%)</title><rect x="229.7" y="723.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="232.7" y="734.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.02%)</title><rect x="229.7" y="707.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="232.7" y="718.0"></text>
</g>
<g>
<title>ip_output (13 samples, 0.32%)</title><rect x="229.9" y="755.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="232.9" y="766.0"></text>
</g>
<g>
<title>ip_finish_output (13 samples, 0.32%)</title><rect x="229.9" y="739.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="232.9" y="750.0"></text>
</g>
<g>
<title>__ip_finish_output (13 samples, 0.32%)</title><rect x="229.9" y="723.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="232.9" y="734.0"></text>
</g>
<g>
<title>ip_finish_output2 (13 samples, 0.32%)</title><rect x="229.9" y="707.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="232.9" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (13 samples, 0.32%)</title><rect x="229.9" y="691.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="232.9" y="702.0"></text>
</g>
<g>
<title>do_softirq.part.0 (13 samples, 0.32%)</title><rect x="229.9" y="675.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.9" y="686.0"></text>
</g>
<g>
<title>do_softirq_own_stack (13 samples, 0.32%)</title><rect x="229.9" y="659.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.9" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (13 samples, 0.32%)</title><rect x="229.9" y="643.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="232.9" y="654.0"></text>
</g>
<g>
<title>net_rx_action (11 samples, 0.27%)</title><rect x="230.5" y="627.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.5" y="638.0"></text>
</g>
<g>
<title>process_backlog (11 samples, 0.27%)</title><rect x="230.5" y="611.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="233.5" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb (11 samples, 0.27%)</title><rect x="230.5" y="595.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="233.5" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 0.27%)</title><rect x="230.5" y="579.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="233.5" y="590.0"></text>
</g>
<g>
<title>ip_rcv (11 samples, 0.27%)</title><rect x="230.5" y="563.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.5" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (11 samples, 0.27%)</title><rect x="230.5" y="547.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="233.5" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (11 samples, 0.27%)</title><rect x="230.5" y="531.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="233.5" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (11 samples, 0.27%)</title><rect x="230.5" y="515.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.5" y="526.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (11 samples, 0.27%)</title><rect x="230.5" y="499.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="233.5" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (11 samples, 0.27%)</title><rect x="230.5" y="483.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="233.5" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 0.27%)</title><rect x="230.5" y="467.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="233.5" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 0.27%)</title><rect x="230.5" y="451.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="233.5" y="462.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.10%)</title><rect x="230.5" y="435.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="233.5" y="446.0"></text>
</g>
<g>
<title>tcp_send_ack (4 samples, 0.10%)</title><rect x="230.5" y="419.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="233.5" y="430.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (4 samples, 0.10%)</title><rect x="230.5" y="403.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="230.5" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="233.5" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="230.5" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="233.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="230.5" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="233.5" y="366.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="230.5" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="233.5" y="350.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.07%)</title><rect x="230.8" y="387.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="233.8" y="398.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.05%)</title><rect x="231.1" y="371.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="234.1" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.05%)</title><rect x="231.1" y="355.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="234.1" y="366.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.05%)</title><rect x="231.1" y="339.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="234.1" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="231.1" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="234.1" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="231.1" y="307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="234.1" y="318.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.02%)</title><rect x="231.1" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="234.1" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.02%)</title><rect x="231.1" y="275.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="234.1" y="286.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="231.4" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="234.4" y="334.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="231.4" y="307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="234.4" y="318.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.02%)</title><rect x="231.4" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="234.4" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="231.4" y="275.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="234.4" y="286.0"></text>
</g>
<g>
<title>tcp_data_queue (6 samples, 0.15%)</title><rect x="231.7" y="435.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="234.7" y="446.0"></text>
</g>
<g>
<title>tcp_data_ready (6 samples, 0.15%)</title><rect x="231.7" y="419.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="234.7" y="430.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.15%)</title><rect x="231.7" y="403.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="234.7" y="414.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.15%)</title><rect x="231.7" y="387.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="234.7" y="398.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.15%)</title><rect x="231.7" y="371.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="234.7" y="382.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.15%)</title><rect x="231.7" y="355.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="234.7" y="366.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="233.4" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.4" y="446.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="233.7" y="819.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="236.7" y="830.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="233.7" y="803.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.7" y="814.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="234.0" y="787.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="237.0" y="798.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="234.0" y="771.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="237.0" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="234.0" y="755.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="237.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="234.2" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.2" y="1134.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="234.2" y="1107.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.05%)</title><rect x="234.5" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="234.8" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="234.8" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.8" y="1102.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.sendHeaders (27 samples, 0.66%)</title><rect x="235.1" y="1347.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.1" y="1358.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.action (27 samples, 0.66%)</title><rect x="235.1" y="1331.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.1" y="1342.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.action (26 samples, 0.63%)</title><rect x="235.4" y="1315.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.4" y="1326.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.flush (1 samples, 0.02%)</title><rect x="235.7" y="1299.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.7" y="1310.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.flush (1 samples, 0.02%)</title><rect x="235.7" y="1283.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.7" y="1294.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/filters/ChunkedOutputFilter.flush (1 samples, 0.02%)</title><rect x="235.7" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.7" y="1278.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer$SocketOutputBuffer.flush (1 samples, 0.02%)</title><rect x="235.7" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.7" y="1262.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flush (1 samples, 0.02%)</title><rect x="235.7" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.7" y="1246.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flushBlocking (1 samples, 0.02%)</title><rect x="235.7" y="1219.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.7" y="1230.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.doWrite (1 samples, 0.02%)</title><rect x="235.7" y="1203.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.7" y="1214.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.doWrite (1 samples, 0.02%)</title><rect x="235.7" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.7" y="1198.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.write (1 samples, 0.02%)</title><rect x="235.7" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.7" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.02%)</title><rect x="235.7" y="1155.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="238.7" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.02%)</title><rect x="235.7" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.7" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.02%)</title><rect x="235.7" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.7" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.02%)</title><rect x="235.7" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.7" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.putBuffer (1 samples, 0.02%)</title><rect x="235.7" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemory (1 samples, 0.02%)</title><rect x="235.7" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemoryInternal (1 samples, 0.02%)</title><rect x="235.7" y="1059.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.7" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="235.7" y="1043.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="238.7" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="235.7" y="1027.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="238.7" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="235.7" y="1011.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="238.7" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="235.7" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="238.7" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="235.7" y="979.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="238.7" y="990.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(JavaThread*) (1 samples, 0.02%)</title><rect x="235.7" y="963.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="238.7" y="974.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="235.7" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="238.7" y="958.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="235.7" y="931.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="238.7" y="942.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="235.7" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="238.7" y="926.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.prepareResponse (24 samples, 0.58%)</title><rect x="236.0" y="1299.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="236.5" y="1283.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c0bd000.invoke (2 samples, 0.05%)</title><rect x="236.5" y="1267.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="236.5" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="236.5" y="1235.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c034800.invoke (1 samples, 0.02%)</title><rect x="236.8" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="236.8" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="236.8" y="1219.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="236.8" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="236.8" y="1187.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.8" y="1198.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="236.8" y="1171.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="239.8" y="1182.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/AbstractHttp11Protocol.getUseSendfile (1 samples, 0.02%)</title><rect x="237.1" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.1" y="1294.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/AbstractEndpoint.getUseSendfile (1 samples, 0.02%)</title><rect x="237.1" y="1267.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.1" y="1278.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.addActiveFilter (1 samples, 0.02%)</title><rect x="237.4" y="1283.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.4" y="1294.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="237.4" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.4" y="1278.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.commit (2 samples, 0.05%)</title><rect x="237.7" y="1283.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.7" y="1294.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.write (2 samples, 0.05%)</title><rect x="237.7" y="1267.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.7" y="1278.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.writeBlocking (2 samples, 0.05%)</title><rect x="237.7" y="1251.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.7" y="1262.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.transfer (2 samples, 0.05%)</title><rect x="237.7" y="1235.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.7" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="237.7" y="1219.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.7" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="238.0" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.0" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.02%)</title><rect x="238.0" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.0" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="238.0" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.0" y="1198.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="238.0" y="1171.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.0" y="1182.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.getFilters (1 samples, 0.02%)</title><rect x="238.3" y="1283.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.3" y="1294.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.sendHeader (2 samples, 0.05%)</title><rect x="238.5" y="1283.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.5" y="1294.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.write (2 samples, 0.05%)</title><rect x="238.5" y="1267.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.5" y="1278.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.write (1 samples, 0.02%)</title><rect x="238.5" y="1251.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.5" y="1262.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="238.5" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.5" y="1246.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.toBytes (1 samples, 0.02%)</title><rect x="238.8" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.8" y="1262.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.getCharset (1 samples, 0.02%)</title><rect x="238.8" y="1235.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.8" y="1246.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.getCharset (1 samples, 0.02%)</title><rect x="238.8" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.8" y="1230.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.sendStatus (4 samples, 0.10%)</title><rect x="239.1" y="1283.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.1" y="1294.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.write (2 samples, 0.05%)</title><rect x="239.7" y="1267.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.7" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.02%)</title><rect x="240.0" y="1251.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.0" y="1262.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="240.0" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.0" y="1246.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.isConnectionToken (7 samples, 0.17%)</title><rect x="240.3" y="1283.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.3" y="1294.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="240.3" y="1267.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="243.3" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="240.3" y="1251.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="243.3" y="1262.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="240.3" y="1235.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="243.3" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="240.3" y="1219.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="243.3" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="240.3" y="1203.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="243.3" y="1214.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="240.3" y="1187.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="243.3" y="1198.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.02%)</title><rect x="240.3" y="1171.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="243.3" y="1182.0"></text>
</g>
<g>
<title>OopMapStream::find_next() [clone .part.0] (1 samples, 0.02%)</title><rect x="240.3" y="1155.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="243.3" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.02%)</title><rect x="240.6" y="1267.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.6" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.02%)</title><rect x="240.6" y="1251.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.6" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="240.6" y="1235.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.6" y="1246.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/TokenList.parseTokenList (5 samples, 0.12%)</title><rect x="240.8" y="1267.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.8" y="1278.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/TokenList.parseTokenList (5 samples, 0.12%)</title><rect x="240.8" y="1251.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.8" y="1262.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/HttpParser.readToken (4 samples, 0.10%)</title><rect x="240.8" y="1235.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.8" y="1246.0"></text>
</g>
<g>
<title>java/io/StringReader.mark (2 samples, 0.05%)</title><rect x="240.8" y="1219.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="241.4" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="241.4" y="1203.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="241.7" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="241.7" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="241.7" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.7" y="1198.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="241.7" y="1171.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="244.7" y="1182.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/HttpParser.skipConstant (1 samples, 0.02%)</title><rect x="242.0" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.0" y="1246.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/MimeHeaders.addValue (1 samples, 0.02%)</title><rect x="242.3" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.3" y="1294.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/MimeHeaders.createHeader (1 samples, 0.02%)</title><rect x="242.3" y="1267.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.3" y="1278.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/MimeHeaders.getName (1 samples, 0.02%)</title><rect x="242.6" y="1283.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.6" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectWriter$Prefetch.serialize (12 samples, 0.29%)</title><rect x="242.8" y="1443.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.8" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (12 samples, 0.29%)</title><rect x="242.8" y="1427.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.8" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.findTypedValueSerializer (1 samples, 0.02%)</title><rect x="242.8" y="1411.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.8" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.createTypeSerializer (1 samples, 0.02%)</title><rect x="242.8" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.8" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/MapperConfig.introspectClassAnnotations (1 samples, 0.02%)</title><rect x="242.8" y="1379.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.8" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/MapperConfig.constructType (1 samples, 0.02%)</title><rect x="242.8" y="1363.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.8" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (1 samples, 0.02%)</title><rect x="242.8" y="1347.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.8" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (1 samples, 0.02%)</title><rect x="242.8" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.8" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (1 samples, 0.02%)</title><rect x="242.8" y="1315.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.8" y="1326.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/LRUMap.get (1 samples, 0.02%)</title><rect x="242.8" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.8" y="1310.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.get (1 samples, 0.02%)</title><rect x="242.8" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.8" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.afterRead (1 samples, 0.02%)</title><rect x="242.8" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.8" y="1278.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.drainOnReadIfNeeded (1 samples, 0.02%)</title><rect x="242.8" y="1251.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.8" y="1262.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider._serialize (11 samples, 0.27%)</title><rect x="243.1" y="1411.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.1" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializer.serialize (10 samples, 0.24%)</title><rect x="243.4" y="1395.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.4" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeStartObject (1 samples, 0.02%)</title><rect x="243.4" y="1379.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.4" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonWriteContext.createChildObjectContext (1 samples, 0.02%)</title><rect x="243.4" y="1363.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.4" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.serializeFields (9 samples, 0.22%)</title><rect x="243.7" y="1379.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.7" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanPropertyWriter.serializeAsField (9 samples, 0.22%)</title><rect x="243.7" y="1363.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.7" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeFieldName (2 samples, 0.05%)</title><rect x="243.7" y="1347.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.7" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/SerializedString.appendQuotedUTF8 (2 samples, 0.05%)</title><rect x="243.7" y="1331.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.7" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/NumberSerializers$LongSerializer.serialize (2 samples, 0.05%)</title><rect x="244.3" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.3" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeNumber (1 samples, 0.02%)</title><rect x="244.6" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.6" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/NumberOutput.outputLong (1 samples, 0.02%)</title><rect x="244.6" y="1315.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.6" y="1326.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/NumberOutput.outputInt (1 samples, 0.02%)</title><rect x="244.6" y="1299.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.6" y="1310.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/NumberOutput._leading3 (1 samples, 0.02%)</title><rect x="244.6" y="1283.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.6" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/StringSerializer.serialize (4 samples, 0.10%)</title><rect x="244.9" y="1347.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.9" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeString (2 samples, 0.05%)</title><rect x="245.4" y="1331.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.4" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegment (2 samples, 0.05%)</title><rect x="245.4" y="1315.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="246.0" y="1347.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="246.0" y="1331.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="246.0" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generateMethod (1 samples, 0.02%)</title><rect x="246.0" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generate (1 samples, 0.02%)</title><rect x="246.0" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.0" y="1294.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="246.0" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.0" y="1278.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="246.0" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator$1.run (1 samples, 0.02%)</title><rect x="246.0" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator$1.run (1 samples, 0.02%)</title><rect x="246.0" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ClassDefiner.defineClass (1 samples, 0.02%)</title><rect x="246.0" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.0" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="246.0" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="246.0" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ClassDefiner$1.run (1 samples, 0.02%)</title><rect x="246.0" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ClassDefiner$1.run (1 samples, 0.02%)</title><rect x="246.0" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingClassLoader.&lt;init&gt; (1 samples, 0.02%)</title><rect x="246.0" y="1123.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.02%)</title><rect x="246.0" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.02%)</title><rect x="246.0" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (1 samples, 0.02%)</title><rect x="246.0" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.0" y="1086.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectWriter._serializerProvider (1 samples, 0.02%)</title><rect x="246.3" y="1443.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.3" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider$Impl.createInstance (1 samples, 0.02%)</title><rect x="246.3" y="1427.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.3" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider$Impl.createInstance (1 samples, 0.02%)</title><rect x="246.3" y="1411.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.3" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider$Impl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="246.3" y="1395.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.3" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.&lt;init&gt; (1 samples, 0.02%)</title><rect x="246.3" y="1379.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.3" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.&lt;init&gt; (1 samples, 0.02%)</title><rect x="246.3" y="1363.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.3" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/SerializerCache.getReadOnlyLookupMap (1 samples, 0.02%)</title><rect x="246.3" y="1347.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.3" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/SerializerCache._makeReadOnlyLookupMap (1 samples, 0.02%)</title><rect x="246.3" y="1331.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.3" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.02%)</title><rect x="246.3" y="1315.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="249.3" y="1326.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="246.3" y="1299.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="249.3" y="1310.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="246.3" y="1283.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="249.3" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(JavaThread*) (1 samples, 0.02%)</title><rect x="246.3" y="1267.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="249.3" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="246.3" y="1251.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="249.3" y="1262.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializationConfig.isEnabled (1 samples, 0.02%)</title><rect x="246.6" y="1443.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.6" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="246.6" y="1427.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="249.6" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="246.6" y="1411.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="249.6" y="1422.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="246.6" y="1395.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="249.6" y="1406.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="246.6" y="1379.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="249.6" y="1390.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.getContentType (2 samples, 0.05%)</title><rect x="246.9" y="1459.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.9" y="1470.0"></text>
</g>
<g>
<title>org/springframework/http/MediaType.parseMediaType (2 samples, 0.05%)</title><rect x="246.9" y="1443.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.9" y="1454.0"></text>
</g>
<g>
<title>org/springframework/util/MimeTypeUtils.parseMimeType (2 samples, 0.05%)</title><rect x="246.9" y="1427.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.9" y="1438.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentLruCache.get (2 samples, 0.05%)</title><rect x="246.9" y="1411.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.9" y="1422.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentLruCache.processRead (2 samples, 0.05%)</title><rect x="246.9" y="1395.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.9" y="1406.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentLruCache$ReadOperations.recordRead (1 samples, 0.02%)</title><rect x="247.1" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.1" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLongArray.get (1 samples, 0.02%)</title><rect x="247.1" y="1363.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.1" y="1374.0"></text>
</g>
<g>
<title>org/springframework/http/MediaType.isCompatibleWith (1 samples, 0.02%)</title><rect x="247.4" y="1459.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.4" y="1470.0"></text>
</g>
<g>
<title>org/springframework/util/MimeType.isCompatibleWith (1 samples, 0.02%)</title><rect x="247.4" y="1443.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.4" y="1454.0"></text>
</g>
<g>
<title>org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.getJavaType (8 samples, 0.19%)</title><rect x="247.7" y="1459.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.7" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.constructType (6 samples, 0.15%)</title><rect x="248.3" y="1443.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.3" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (5 samples, 0.12%)</title><rect x="248.6" y="1427.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.6" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (5 samples, 0.12%)</title><rect x="248.6" y="1411.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.6" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (5 samples, 0.12%)</title><rect x="248.6" y="1395.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.6" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/LRUMap.get (5 samples, 0.12%)</title><rect x="248.6" y="1379.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.6" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.get (5 samples, 0.12%)</title><rect x="248.6" y="1363.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.6" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.afterRead (4 samples, 0.10%)</title><rect x="248.9" y="1347.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.9" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.drainOnReadIfNeeded (3 samples, 0.07%)</title><rect x="248.9" y="1331.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.9" y="1342.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.tryToDrainBuffers (2 samples, 0.05%)</title><rect x="248.9" y="1315.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.9" y="1326.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.drainBuffers (1 samples, 0.02%)</title><rect x="248.9" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.9" y="1310.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.drainReadBuffers (1 samples, 0.02%)</title><rect x="248.9" y="1283.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.9" y="1294.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.drainReadBuffer (1 samples, 0.02%)</title><rect x="248.9" y="1267.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.02%)</title><rect x="249.2" y="1299.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="249.2" y="1283.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.setRelease (1 samples, 0.02%)</title><rect x="249.2" y="1267.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.02%)</title><rect x="249.2" y="1251.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLongArray.get (1 samples, 0.02%)</title><rect x="249.4" y="1315.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_J (1 samples, 0.02%)</title><rect x="249.4" y="1299.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.4" y="1310.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/internal/PrivateMaxEntriesMap.recordRead (1 samples, 0.02%)</title><rect x="249.7" y="1331.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.7" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.lazySet (1 samples, 0.02%)</title><rect x="249.7" y="1315.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.02%)</title><rect x="249.7" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.setRelease (1 samples, 0.02%)</title><rect x="249.7" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.runtimeTypeCheck (1 samples, 0.02%)</title><rect x="249.7" y="1267.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.02%)</title><rect x="249.7" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.7" y="1262.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse.getBody (14 samples, 0.34%)</title><rect x="250.0" y="1459.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.0" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="250.0" y="1443.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="253.0" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="250.0" y="1427.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="253.0" y="1438.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="250.0" y="1411.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="253.0" y="1422.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="250.0" y="1395.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="253.0" y="1406.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="250.0" y="1379.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="253.0" y="1390.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="250.0" y="1363.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="253.0" y="1374.0"></text>
</g>
<g>
<title>MethodData::initialize() (1 samples, 0.02%)</title><rect x="250.0" y="1347.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="253.0" y="1358.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse.writeHeaders (11 samples, 0.27%)</title><rect x="250.3" y="1443.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.3" y="1454.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.forEach (8 samples, 0.19%)</title><rect x="250.3" y="1427.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.3" y="1438.0"></text>
</g>
<g>
<title>org/springframework/util/MultiValueMapAdapter.forEach (8 samples, 0.19%)</title><rect x="250.3" y="1411.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.3" y="1422.0"></text>
</g>
<g>
<title>org/springframework/util/LinkedCaseInsensitiveMap.forEach (6 samples, 0.15%)</title><rect x="250.9" y="1395.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.9" y="1406.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.forEach (6 samples, 0.15%)</title><rect x="250.9" y="1379.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.9" y="1390.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$$Lambda$2070.0x00007f9a5ca70000.accept (6 samples, 0.15%)</title><rect x="250.9" y="1363.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.9" y="1374.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse.lambda$writeHeaders$0 (5 samples, 0.12%)</title><rect x="251.2" y="1347.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.2" y="1358.0"></text>
</g>
<g>
<title>jakarta/servlet/http/HttpServletResponseWrapper.addHeader (5 samples, 0.12%)</title><rect x="251.2" y="1331.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.2" y="1342.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.addHeader (4 samples, 0.10%)</title><rect x="251.4" y="1315.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.4" y="1326.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.addHeader (1 samples, 0.02%)</title><rect x="251.4" y="1299.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.4" y="1310.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.addHeader (1 samples, 0.02%)</title><rect x="251.4" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.4" y="1294.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.checkSpecialHeader (1 samples, 0.02%)</title><rect x="251.4" y="1267.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.4" y="1278.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.setContentType (1 samples, 0.02%)</title><rect x="251.4" y="1251.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.4" y="1262.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/MediaTypeCache.parse (1 samples, 0.02%)</title><rect x="251.4" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.4" y="1246.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.isCommitted (3 samples, 0.07%)</title><rect x="251.7" y="1299.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.7" y="1310.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.isAppCommitted (2 samples, 0.05%)</title><rect x="252.0" y="1283.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.0" y="1294.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.getContentLength (2 samples, 0.05%)</title><rect x="252.0" y="1267.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.0" y="1278.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.getContentLength (1 samples, 0.02%)</title><rect x="252.6" y="1427.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.6" y="1438.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders.getFirst (1 samples, 0.02%)</title><rect x="252.6" y="1411.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.6" y="1422.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.getContentType (2 samples, 0.05%)</title><rect x="252.9" y="1427.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.9" y="1438.0"></text>
</g>
<g>
<title>org/springframework/http/MediaType.parseMediaType (1 samples, 0.02%)</title><rect x="252.9" y="1411.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.9" y="1422.0"></text>
</g>
<g>
<title>org/springframework/util/MimeTypeUtils.parseMimeType (1 samples, 0.02%)</title><rect x="252.9" y="1395.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.9" y="1406.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentLruCache.get (1 samples, 0.02%)</title><rect x="252.9" y="1379.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.9" y="1390.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentLruCache.processRead (1 samples, 0.02%)</title><rect x="252.9" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.9" y="1374.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentLruCache.drainOperations (1 samples, 0.02%)</title><rect x="252.9" y="1347.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.9" y="1358.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentLruCache$ReadOperations.drain (1 samples, 0.02%)</title><rect x="252.9" y="1331.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.9" y="1342.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentLruCache$ReadOperations.drainReadBuffer (1 samples, 0.02%)</title><rect x="252.9" y="1315.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.get (1 samples, 0.02%)</title><rect x="252.9" y="1299.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.02%)</title><rect x="252.9" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.getVolatile (1 samples, 0.02%)</title><rect x="252.9" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.02%)</title><rect x="252.9" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.9" y="1262.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders.getFirst (1 samples, 0.02%)</title><rect x="253.2" y="1411.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.2" y="1422.0"></text>
</g>
<g>
<title>org/springframework/http/HttpHeaders.getFirst (1 samples, 0.02%)</title><rect x="253.2" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.2" y="1406.0"></text>
</g>
<g>
<title>org/springframework/util/MultiValueMapAdapter.getFirst (1 samples, 0.02%)</title><rect x="253.2" y="1379.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.2" y="1390.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/StandardServletAsyncWebRequest$LifecycleHttpServletResponse.getOutputStream (2 samples, 0.05%)</title><rect x="253.5" y="1443.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.5" y="1454.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.getOutputStream (1 samples, 0.02%)</title><rect x="253.5" y="1427.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.5" y="1438.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.getOutputStream (1 samples, 0.02%)</title><rect x="253.5" y="1411.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="256.5" y="1422.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="253.5" y="1395.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.5" y="1406.0"></text>
</g>
<g>
<title>jakarta/servlet/ServletOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="253.5" y="1379.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.5" y="1390.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/StandardServletAsyncWebRequest$LifecycleServletOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="253.7" y="1427.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.7" y="1438.0"></text>
</g>
<g>
<title>org/springframework/util/StreamUtils.nonClosing (1 samples, 0.02%)</title><rect x="254.0" y="1459.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.0" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/async/StandardServletAsyncWebRequest$LifecycleServletOutputStream.flush (5 samples, 0.12%)</title><rect x="254.3" y="1475.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.3" y="1486.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteOutputStream.flush (4 samples, 0.10%)</title><rect x="254.6" y="1459.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.6" y="1470.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.flush (4 samples, 0.10%)</title><rect x="254.6" y="1443.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.6" y="1454.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/OutputBuffer.doFlush (4 samples, 0.10%)</title><rect x="254.6" y="1427.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.6" y="1438.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.action (4 samples, 0.10%)</title><rect x="254.6" y="1411.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.6" y="1422.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.action (4 samples, 0.10%)</title><rect x="254.6" y="1395.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.6" y="1406.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.flush (4 samples, 0.10%)</title><rect x="254.6" y="1379.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.6" y="1390.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.flush (4 samples, 0.10%)</title><rect x="254.6" y="1363.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.6" y="1374.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/filters/ChunkedOutputFilter.flush (4 samples, 0.10%)</title><rect x="254.6" y="1347.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.6" y="1358.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer$SocketOutputBuffer.flush (4 samples, 0.10%)</title><rect x="254.6" y="1331.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.6" y="1342.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flush (4 samples, 0.10%)</title><rect x="254.6" y="1315.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.6" y="1326.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.flushBlocking (4 samples, 0.10%)</title><rect x="254.6" y="1299.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.6" y="1310.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.doWrite (4 samples, 0.10%)</title><rect x="254.6" y="1283.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.6" y="1294.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.doWrite (3 samples, 0.07%)</title><rect x="254.9" y="1267.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.9" y="1278.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.write (3 samples, 0.07%)</title><rect x="254.9" y="1251.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.9" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.07%)</title><rect x="254.9" y="1235.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="254.9" y="1219.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="254.9" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="254.9" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.9" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="255.2" y="1219.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.2" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="255.2" y="1203.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.2" y="1214.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="255.2" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.2" y="1198.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="255.2" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.2" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="255.5" y="1187.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.5" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="255.5" y="1171.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.5" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="255.5" y="1155.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.5" y="1166.0"></text>
</g>
<g>
<title>org/springframework/http/converter/AbstractHttpMessageConverter.canWrite (2 samples, 0.05%)</title><rect x="255.7" y="1491.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.7" y="1502.0"></text>
</g>
<g>
<title>org/springframework/http/converter/ResourceHttpMessageConverter.supports (2 samples, 0.05%)</title><rect x="255.7" y="1475.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.02%)</title><rect x="256.0" y="1459.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.0" y="1470.0"></text>
</g>
<g>
<title>Java_java_lang_Class_isAssignableFrom (1 samples, 0.02%)</title><rect x="256.0" y="1443.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="259.0" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.addContentDispositionHeader (11 samples, 0.27%)</title><rect x="256.3" y="1491.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.3" y="1502.0"></text>
</g>
<g>
<title>jakarta/servlet/http/HttpServletResponseWrapper.getStatus (2 samples, 0.05%)</title><rect x="256.3" y="1475.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.3" y="1486.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.getStatus (2 samples, 0.05%)</title><rect x="256.3" y="1459.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.3" y="1470.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.getStatus (1 samples, 0.02%)</title><rect x="256.3" y="1443.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.3" y="1454.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.getStatus (1 samples, 0.02%)</title><rect x="256.3" y="1427.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.3" y="1438.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.checkFacade (1 samples, 0.02%)</title><rect x="256.6" y="1443.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.6" y="1454.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders.containsKey (3 samples, 0.07%)</title><rect x="256.9" y="1475.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.9" y="1486.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders.get (3 samples, 0.07%)</title><rect x="256.9" y="1459.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.9" y="1470.0"></text>
</g>
<g>
<title>jakarta/servlet/http/HttpServletResponseWrapper.getHeaders (3 samples, 0.07%)</title><rect x="256.9" y="1443.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.9" y="1454.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/ResponseFacade.getHeaders (2 samples, 0.05%)</title><rect x="257.2" y="1427.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.2" y="1438.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.getHeaders (2 samples, 0.05%)</title><rect x="257.2" y="1411.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.2" y="1422.0"></text>
</g>
<g>
<title>java/util/LinkedHashSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="257.5" y="1395.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.5" y="1406.0"></text>
</g>
<g>
<title>org/springframework/http/server/ServletServerHttpResponse.getHeaders (1 samples, 0.02%)</title><rect x="257.8" y="1475.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.8" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.safeExtension (2 samples, 0.05%)</title><rect x="258.0" y="1475.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.0" y="1486.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.hasText (1 samples, 0.02%)</title><rect x="258.3" y="1459.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.3" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/util/UrlPathHelper.decodeRequestString (2 samples, 0.05%)</title><rect x="258.6" y="1475.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.6" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/util/UrlPathHelper.decodeInternal (2 samples, 0.05%)</title><rect x="258.6" y="1459.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.6" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/util/UrlPathHelper.getOriginatingRequestUri (1 samples, 0.02%)</title><rect x="259.2" y="1475.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.2" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/util/UrlPathHelper.decodeAndCleanUriString (1 samples, 0.02%)</title><rect x="259.2" y="1459.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.2" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/util/UrlPathHelper.getSanitizedPath (1 samples, 0.02%)</title><rect x="259.2" y="1443.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="259.2" y="1427.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="262.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="259.2" y="1411.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.2" y="1422.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.determineCompatibleMediaTypes (4 samples, 0.10%)</title><rect x="259.5" y="1491.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.5" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.getMostSpecificMediaType (2 samples, 0.05%)</title><rect x="260.1" y="1475.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="263.1" y="1486.0"></text>
</g>
<g>
<title>org/springframework/http/MediaType.isLessSpecific (1 samples, 0.02%)</title><rect x="260.3" y="1459.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.3" y="1470.0"></text>
</g>
<g>
<title>org/springframework/http/MediaType.isMoreSpecific (1 samples, 0.02%)</title><rect x="260.3" y="1443.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.3" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.getAcceptableMediaTypes (6 samples, 0.15%)</title><rect x="260.6" y="1491.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.6" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/accept/ContentNegotiationManager.resolveMediaTypes (5 samples, 0.12%)</title><rect x="260.6" y="1475.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.6" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.05%)</title><rect x="260.6" y="1459.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="263.6" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (2 samples, 0.05%)</title><rect x="260.6" y="1443.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="263.6" y="1454.0"></text>
</g>
<g>
<title>LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="260.6" y="1427.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="263.6" y="1438.0"></text>
</g>
<g>
<title>frame::interpreter_callee_receiver_addr(Symbol*) (1 samples, 0.02%)</title><rect x="260.9" y="1427.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="263.9" y="1438.0"></text>
</g>
<g>
<title>ArgumentSizeComputer::ArgumentSizeComputer(Symbol*) (1 samples, 0.02%)</title><rect x="260.9" y="1411.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="263.9" y="1422.0"></text>
</g>
<g>
<title>SignatureStream::next() (1 samples, 0.02%)</title><rect x="260.9" y="1395.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="263.9" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="261.2" y="1459.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="264.2" y="1470.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="261.2" y="1443.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="264.2" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/accept/HeaderContentNegotiationStrategy.resolveMediaTypes (2 samples, 0.05%)</title><rect x="261.5" y="1459.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.5" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.getHeaderValues (2 samples, 0.05%)</title><rect x="261.5" y="1443.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.5" y="1454.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getHeaders (1 samples, 0.02%)</title><rect x="261.5" y="1427.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.5" y="1438.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.checkFacade (1 samples, 0.02%)</title><rect x="261.5" y="1411.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.5" y="1422.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.toStringArray (1 samples, 0.02%)</title><rect x="261.8" y="1427.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.8" y="1438.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.toStringArray (1 samples, 0.02%)</title><rect x="261.8" y="1411.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.8" y="1422.0"></text>
</g>
<g>
<title>org/springframework/util/CollectionUtils.isEmpty (1 samples, 0.02%)</title><rect x="261.8" y="1395.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.8" y="1406.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.&lt;init&gt; (1 samples, 0.02%)</title><rect x="262.1" y="1475.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.1" y="1486.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="262.1" y="1459.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.1" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.getGenericType (1 samples, 0.02%)</title><rect x="262.3" y="1491.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.3" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="262.3" y="1475.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="265.3" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.getProducibleMediaTypes (3 samples, 0.07%)</title><rect x="262.6" y="1491.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.6" y="1502.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getAttribute (1 samples, 0.02%)</title><rect x="262.9" y="1475.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.9" y="1486.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getAttribute (1 samples, 0.02%)</title><rect x="262.9" y="1459.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.9" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="262.9" y="1443.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.9" y="1454.0"></text>
</g>
<g>
<title>org/springframework/util/CollectionUtils.isEmpty (1 samples, 0.02%)</title><rect x="263.2" y="1475.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.2" y="1486.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="263.2" y="1459.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="266.2" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain.beforeBodyWrite (13 samples, 0.32%)</title><rect x="263.5" y="1491.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.5" y="1502.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain.processBody (13 samples, 0.32%)</title><rect x="263.5" y="1475.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.5" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/JsonViewResponseBodyAdvice.supports (12 samples, 0.29%)</title><rect x="263.5" y="1459.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.5" y="1470.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedMethod$AnnotatedMethodParameter.hasMethodAnnotation (9 samples, 0.22%)</title><rect x="263.8" y="1443.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.8" y="1454.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedMethod.hasMethodAnnotation (9 samples, 0.22%)</title><rect x="263.8" y="1427.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.8" y="1438.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedElementUtils.hasAnnotation (9 samples, 0.22%)</title><rect x="263.8" y="1411.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.8" y="1422.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedElementUtils.findAnnotations (3 samples, 0.07%)</title><rect x="263.8" y="1395.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.8" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/MergedAnnotations.from (3 samples, 0.07%)</title><rect x="263.8" y="1379.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.8" y="1390.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/MergedAnnotations.from (3 samples, 0.07%)</title><rect x="263.8" y="1363.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.8" y="1374.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/MergedAnnotations.from (3 samples, 0.07%)</title><rect x="263.8" y="1347.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.8" y="1358.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.from (3 samples, 0.07%)</title><rect x="263.8" y="1331.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.8" y="1342.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.isKnownEmpty (3 samples, 0.07%)</title><rect x="263.8" y="1315.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.8" y="1326.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.getDeclaredAnnotations (2 samples, 0.05%)</title><rect x="263.8" y="1299.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.8" y="1310.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.get (2 samples, 0.05%)</title><rect x="263.8" y="1283.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.8" y="1294.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.getReference (2 samples, 0.05%)</title><rect x="263.8" y="1267.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.8" y="1278.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.getHash (2 samples, 0.05%)</title><rect x="263.8" y="1251.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.hashCode (1 samples, 0.02%)</title><rect x="264.1" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.02%)</title><rect x="264.1" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.1" y="1230.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.isWithoutHierarchy (1 samples, 0.02%)</title><rect x="264.4" y="1299.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.4" y="1310.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.isWithoutHierarchy (1 samples, 0.02%)</title><rect x="264.4" y="1283.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/Class.getInterfaces (1 samples, 0.02%)</title><rect x="264.4" y="1267.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/Class.getInterfaces (1 samples, 0.02%)</title><rect x="264.4" y="1251.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.4" y="1262.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.isPresent (6 samples, 0.15%)</title><rect x="264.6" y="1395.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.6" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.scan (6 samples, 0.15%)</title><rect x="264.6" y="1379.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.6" y="1390.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.scan (6 samples, 0.15%)</title><rect x="264.6" y="1363.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.6" y="1374.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.process (6 samples, 0.15%)</title><rect x="264.6" y="1347.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.6" y="1358.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processMethod (6 samples, 0.15%)</title><rect x="264.6" y="1331.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.6" y="1342.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processMethodHierarchy (6 samples, 0.15%)</title><rect x="264.6" y="1315.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.6" y="1326.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processMethodAnnotations (6 samples, 0.15%)</title><rect x="264.6" y="1299.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.6" y="1310.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$IsPresent.doWithAnnotations (3 samples, 0.07%)</title><rect x="264.6" y="1283.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.6" y="1294.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$IsPresent.doWithAnnotations (3 samples, 0.07%)</title><rect x="264.6" y="1267.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.6" y="1278.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (2 samples, 0.05%)</title><rect x="264.9" y="1251.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.9" y="1262.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (2 samples, 0.05%)</title><rect x="264.9" y="1235.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.9" y="1246.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (2 samples, 0.05%)</title><rect x="264.9" y="1219.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="264.9" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.9" y="1214.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="264.9" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.9" y="1198.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings$Cache.get (1 samples, 0.02%)</title><rect x="265.2" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="265.2" y="1187.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="265.2" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.2" y="1182.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings$Cache$$Lambda$195.0x00007f9a5c12a288.&lt;init&gt; (1 samples, 0.02%)</title><rect x="265.2" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.2" y="1166.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.doWithAnnotations (3 samples, 0.07%)</title><rect x="265.5" y="1283.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.5" y="1294.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.doWithAnnotations (3 samples, 0.07%)</title><rect x="265.5" y="1267.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.5" y="1278.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.process (3 samples, 0.07%)</title><rect x="265.5" y="1251.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="268.5" y="1262.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (3 samples, 0.07%)</title><rect x="265.5" y="1235.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.5" y="1246.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (3 samples, 0.07%)</title><rect x="265.5" y="1219.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.5" y="1230.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/AbstractMappingJacksonResponseBodyAdvice.supports (2 samples, 0.05%)</title><rect x="266.4" y="1443.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.4" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (2 samples, 0.05%)</title><rect x="266.4" y="1427.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="269.4" y="1438.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*) (2 samples, 0.05%)</title><rect x="266.4" y="1411.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="269.4" y="1422.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain.getMatchingAdvice (1 samples, 0.02%)</title><rect x="266.9" y="1459.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.9" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/method/support/InvocableHandlerMethod.invokeForRequest (1,763 samples, 42.84%)</title><rect x="267.2" y="1539.0" width="505.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.2" y="1550.0">org/springframework/web/method/support/InvocableHandlerMethod.invokeFo..</text>
</g>
<g>
<title>org/springframework/web/method/HandlerMethod.shouldValidateReturnValue (1 samples, 0.02%)</title><rect x="267.2" y="1523.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.2" y="1534.0"></text>
</g>
<g>
<title>org/springframework/web/method/support/InvocableHandlerMethod.doInvoke (1,674 samples, 40.68%)</title><rect x="267.5" y="1523.0" width="480.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.5" y="1534.0">org/springframework/web/method/support/InvocableHandlerMethod.doIn..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1,674 samples, 40.68%)</title><rect x="267.5" y="1507.0" width="480.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.5" y="1518.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1,673 samples, 40.66%)</title><rect x="267.5" y="1491.0" width="479.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.5" y="1502.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor24.invoke (1,611 samples, 39.15%)</title><rect x="267.5" y="1475.0" width="462.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.5" y="1486.0">jdk/internal/reflect/GeneratedMethodAccessor24.invoke</text>
</g>
<g>
<title>otus/moryakovdv/task9/web/UserController.login (1,611 samples, 39.15%)</title><rect x="267.5" y="1459.0" width="462.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.5" y="1470.0">otus/moryakovdv/task9/web/UserController.login</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5ca34c00.linkToTargetMethod (1 samples, 0.02%)</title><rect x="268.4" y="1443.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x00007f9a5ca34000.newInvokeSpecial (1 samples, 0.02%)</title><rect x="268.4" y="1427.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.4" y="1438.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/web/UserController$$Lambda$1897.0x00007f9a5ca334e8.&lt;init&gt; (1 samples, 0.02%)</title><rect x="268.4" y="1411.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="268.4" y="1395.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.4" y="1406.0"></text>
</g>
<g>
<title>java/util/Optional.orElseGet (450 samples, 10.94%)</title><rect x="268.7" y="1443.0" width="129.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.7" y="1454.0">java/util/Option..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="268.7" y="1427.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.7" y="1438.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/web/UserController$$Lambda$1897.0x00007f9a5ca334e8.get (449 samples, 10.91%)</title><rect x="268.9" y="1427.0" width="128.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.9" y="1438.0">otus/moryakovdv/..</text>
</g>
<g>
<title>otus/moryakovdv/task9/web/UserController.lambda$login$0 (449 samples, 10.91%)</title><rect x="268.9" y="1411.0" width="128.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.9" y="1422.0">otus/moryakovdv/..</text>
</g>
<g>
<title>otus/moryakovdv/task9/web/UserController.createUser (449 samples, 10.91%)</title><rect x="268.9" y="1395.0" width="128.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.9" y="1406.0">otus/moryakovdv/..</text>
</g>
<g>
<title>jdk/proxy2/$Proxy116.save (441 samples, 10.72%)</title><rect x="268.9" y="1379.0" width="126.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.9" y="1390.0">jdk/proxy2/$Prox..</text>
</g>
<g>
<title>org/springframework/aop/framework/JdkDynamicAopProxy.invoke (441 samples, 10.72%)</title><rect x="268.9" y="1363.0" width="126.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.9" y="1374.0">org/springframew..</text>
</g>
<g>
<title>org/springframework/aop/framework/AdvisedSupport.getInterceptorsAndDynamicInterceptionAdvice (1 samples, 0.02%)</title><rect x="268.9" y="1347.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.9" y="1358.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.&lt;init&gt; (1 samples, 0.02%)</title><rect x="269.2" y="1347.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.2" y="1358.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (437 samples, 10.62%)</title><rect x="269.5" y="1347.0" width="125.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.5" y="1358.0">org/springframe..</text>
</g>
<g>
<title>org/springframework/aop/interceptor/ExposeInvocationInterceptor.invoke (436 samples, 10.60%)</title><rect x="269.8" y="1331.0" width="125.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.8" y="1342.0">org/springframe..</text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (436 samples, 10.60%)</title><rect x="269.8" y="1315.0" width="125.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.8" y="1326.0">org/springframe..</text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke (435 samples, 10.57%)</title><rect x="270.1" y="1299.0" width="124.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.1" y="1310.0">org/springframe..</text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.02%)</title><rect x="270.1" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.1" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.02%)</title><rect x="270.1" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.1" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="270.1" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.equals (1 samples, 0.02%)</title><rect x="270.1" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.1" y="1246.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.getMethod (1 samples, 0.02%)</title><rect x="270.4" y="1283.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.4" y="1294.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (432 samples, 10.50%)</title><rect x="270.7" y="1283.0" width="123.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.7" y="1294.0">org/springframe..</text>
</g>
<g>
<title>org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.invoke (432 samples, 10.50%)</title><rect x="270.7" y="1267.0" width="123.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.7" y="1278.0">org/springframe..</text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (432 samples, 10.50%)</title><rect x="270.7" y="1251.0" width="123.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.7" y="1262.0">org/springframe..</text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionInterceptor.invoke (432 samples, 10.50%)</title><rect x="270.7" y="1235.0" width="123.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.7" y="1246.0">org/springframe..</text>
</g>
<g>
<title>org/springframework/aop/support/AopUtils.getTargetClass (1 samples, 0.02%)</title><rect x="270.7" y="1219.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.7" y="1230.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.invokeWithinTransaction (431 samples, 10.47%)</title><rect x="270.9" y="1219.0" width="123.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.9" y="1230.0">org/springframe..</text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.asPlatformTransactionManager (1 samples, 0.02%)</title><rect x="272.4" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.4" y="1214.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.commitTransactionAfterReturning (287 samples, 6.97%)</title><rect x="272.7" y="1203.0" width="82.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.7" y="1214.0">org/sprin..</text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.commit (287 samples, 6.97%)</title><rect x="272.7" y="1187.0" width="82.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.7" y="1198.0">org/sprin..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="273.0" y="1171.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.0" y="1182.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.processCommit (285 samples, 6.93%)</title><rect x="273.2" y="1171.0" width="81.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.2" y="1182.0">org/sprin..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="273.2" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.02%)</title><rect x="273.2" y="1139.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.2" y="1150.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager.doCommit (270 samples, 6.56%)</title><rect x="273.5" y="1155.0" width="77.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.5" y="1166.0">org/sprin..</text>
</g>
<g>
<title>org/hibernate/engine/transaction/internal/TransactionImpl.commit (270 samples, 6.56%)</title><rect x="273.5" y="1139.0" width="77.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.5" y="1150.0">org/hiber..</text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit (269 samples, 6.54%)</title><rect x="273.8" y="1123.0" width="77.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.8" y="1134.0">org/hiber..</text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor.commit (69 samples, 1.68%)</title><rect x="273.8" y="1107.0" width="19.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.8" y="1118.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyConnection.commit (50 samples, 1.22%)</title><rect x="274.1" y="1091.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.1" y="1102.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyConnection.commit (50 samples, 1.22%)</title><rect x="274.1" y="1075.0" width="14.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.1" y="1086.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.commit (49 samples, 1.19%)</title><rect x="274.4" y="1059.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.4" y="1070.0"></text>
</g>
<g>
<title>org/h2/command/Command.executeUpdate (48 samples, 1.17%)</title><rect x="274.7" y="1043.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.7" y="1054.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.stop (1 samples, 0.02%)</title><rect x="274.7" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.7" y="1038.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.clearCTE (1 samples, 0.02%)</title><rect x="274.7" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.7" y="1022.0"></text>
</g>
<g>
<title>org/h2/command/Prepared.getCteCleanups (1 samples, 0.02%)</title><rect x="274.7" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.7" y="1006.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.update (44 samples, 1.07%)</title><rect x="275.0" y="1027.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.0" y="1038.0"></text>
</g>
<g>
<title>org/h2/command/dml/TransactionCommand.update (44 samples, 1.07%)</title><rect x="275.0" y="1011.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.0" y="1022.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.commit (44 samples, 1.07%)</title><rect x="275.0" y="995.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.0" y="1006.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.analyzeTables (1 samples, 0.02%)</title><rect x="275.2" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="278.2" y="990.0"></text>
</g>
<g>
<title>org/h2/command/ddl/Analyze.analyzeTable (1 samples, 0.02%)</title><rect x="275.2" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.2" y="974.0"></text>
</g>
<g>
<title>org/h2/command/ddl/Analyze$SelectivityData.add (1 samples, 0.02%)</title><rect x="275.2" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.2" y="958.0"></text>
</g>
<g>
<title>org/h2/command/ddl/Analyze$SelectivityData.add (1 samples, 0.02%)</title><rect x="275.2" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.2" y="942.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.beforeCommitOrRollback (2 samples, 0.05%)</title><rect x="275.5" y="979.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.5" y="990.0"></text>
</g>
<g>
<title>org/h2/engine/Database.throwLastBackgroundException (1 samples, 0.02%)</title><rect x="275.8" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="278.8" y="974.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.endTransaction (4 samples, 0.10%)</title><rect x="276.1" y="979.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.1" y="990.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.unlockAll (4 samples, 0.10%)</title><rect x="276.1" y="963.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.1" y="974.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVTable.unlock (3 samples, 0.07%)</title><rect x="276.4" y="947.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.remove (2 samples, 0.05%)</title><rect x="276.7" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (2 samples, 0.05%)</title><rect x="276.7" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.02%)</title><rect x="276.7" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.02%)</title><rect x="277.0" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.0" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.commit (36 samples, 0.87%)</title><rect x="277.3" y="979.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.3" y="990.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.markTransactionEnd (1 samples, 0.02%)</title><rect x="277.8" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.8" y="974.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.commit (31 samples, 0.75%)</title><rect x="278.1" y="963.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.1" y="974.0"></text>
</g>
<g>
<title>org/h2/mvstore/Cursor.next (1 samples, 0.02%)</title><rect x="278.1" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.1" y="958.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.clear (8 samples, 0.19%)</title><rect x="278.4" y="947.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.4" y="958.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.clearIt (8 samples, 0.19%)</title><rect x="278.4" y="931.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.4" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.createEmptyLeaf (3 samples, 0.07%)</title><rect x="278.7" y="915.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.7" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.createEmptyLeaf (2 samples, 0.05%)</title><rect x="279.0" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.0" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.createLeaf (2 samples, 0.05%)</title><rect x="279.0" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.0" y="894.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.initMemoryAccount (1 samples, 0.02%)</title><rect x="279.3" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.3" y="878.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.flushAndGetRoot (4 samples, 0.10%)</title><rect x="279.6" y="915.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.6" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.flushAppendBuffer (4 samples, 0.10%)</title><rect x="279.6" y="899.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.6" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.tryLock (1 samples, 0.02%)</title><rect x="280.1" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.1" y="894.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.tryLock (1 samples, 0.02%)</title><rect x="280.1" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.1" y="878.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.updatePageAndLockedStatus (1 samples, 0.02%)</title><rect x="280.4" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.4" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="280.4" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="283.4" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.02%)</title><rect x="280.4" y="851.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="283.4" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="280.4" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="283.4" y="846.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWordImpl**, unsigned long, unsigned long, JavaThread*) (1 samples, 0.02%)</title><rect x="280.4" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="283.4" y="830.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.cursor (5 samples, 0.12%)</title><rect x="280.7" y="947.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.7" y="958.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.cursor (5 samples, 0.12%)</title><rect x="280.7" y="931.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.7" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.flushAndGetRoot (5 samples, 0.12%)</title><rect x="280.7" y="915.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.7" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.flushAppendBuffer (5 samples, 0.12%)</title><rect x="280.7" y="899.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.7" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.isPersistent (1 samples, 0.02%)</title><rect x="281.0" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.0" y="894.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVStore.isPersistent (1 samples, 0.02%)</title><rect x="281.0" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.0" y="878.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.tryLock (2 samples, 0.05%)</title><rect x="281.3" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.3" y="894.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.tryLock (2 samples, 0.05%)</title><rect x="281.3" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.3" y="878.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="281.6" y="851.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.6" y="862.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.copy (1 samples, 0.02%)</title><rect x="281.8" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.8" y="894.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.clone (1 samples, 0.02%)</title><rect x="281.8" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.8" y="878.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="281.8" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.8" y="862.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.operate (9 samples, 0.22%)</title><rect x="282.1" y="947.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.1" y="958.0"></text>
</g>
<g>
<title>org/h2/mvstore/CursorPos.traverseDown (2 samples, 0.05%)</title><rect x="282.1" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.1" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.binarySearch (1 samples, 0.02%)</title><rect x="282.1" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.1" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/type/LongDataType.binarySearch (1 samples, 0.02%)</title><rect x="282.1" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.1" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/type/LongDataType.binarySearch (1 samples, 0.02%)</title><rect x="282.1" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.1" y="894.0"></text>
</g>
<g>
<title>org/h2/mvstore/type/LongDataType.binarySearch (1 samples, 0.02%)</title><rect x="282.1" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.1" y="878.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.isLeaf (1 samples, 0.02%)</title><rect x="282.4" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.4" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page$Leaf.getNodeType (1 samples, 0.02%)</title><rect x="282.4" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.4" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap$DecisionMaker.decide (1 samples, 0.02%)</title><rect x="282.7" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.7" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/CommitDecisionMaker.decide (1 samples, 0.02%)</title><rect x="282.7" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.7" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/CommitDecisionMaker.decide (1 samples, 0.02%)</title><rect x="282.7" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.7" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.beforeWrite (1 samples, 0.02%)</title><rect x="283.0" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.0" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.replacePage (1 samples, 0.02%)</title><rect x="283.3" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.3" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page$NonLeaf.setChild (1 samples, 0.02%)</title><rect x="283.3" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.3" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page$PageReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="283.3" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.3" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page$Leaf.setValue (1 samples, 0.02%)</title><rect x="283.6" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.6" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.isPersistent (1 samples, 0.02%)</title><rect x="283.6" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.6" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.copy (1 samples, 0.02%)</title><rect x="283.9" y="931.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.9" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.updateRootPage (2 samples, 0.05%)</title><rect x="284.1" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="287.1" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.tryUpdate (2 samples, 0.05%)</title><rect x="284.1" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.1" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.compareAndSetRoot (1 samples, 0.02%)</title><rect x="284.4" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.02%)</title><rect x="284.4" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="284.4" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.4" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="284.4" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.02%)</title><rect x="284.4" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.4" y="846.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.flipCommittingTransactionsBit (5 samples, 0.12%)</title><rect x="284.7" y="947.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.7" y="958.0"></text>
</g>
<g>
<title>java/util/BitSet.clone (2 samples, 0.05%)</title><rect x="284.7" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="285.0" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.0" y="926.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.02%)</title><rect x="285.0" y="899.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="288.0" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="285.0" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="288.0" y="894.0"></text>
</g>
<g>
<title>java/util/BitSet.set (2 samples, 0.05%)</title><rect x="285.3" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.3" y="942.0"></text>
</g>
<g>
<title>java/util/BitSet.set (1 samples, 0.02%)</title><rect x="285.6" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.02%)</title><rect x="285.9" y="931.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="285.9" y="915.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="285.9" y="899.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.9" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.markUndoLogAsCommitted (1 samples, 0.02%)</title><rect x="286.1" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.1" y="958.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.addUndoLogRecord (1 samples, 0.02%)</title><rect x="286.1" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.1" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.append (1 samples, 0.02%)</title><rect x="286.1" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.1" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.openMap (2 samples, 0.05%)</title><rect x="286.4" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.4" y="958.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVStore.getMap (1 samples, 0.02%)</title><rect x="286.7" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.7" y="942.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="286.7" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.7" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.endTransaction (2 samples, 0.05%)</title><rect x="287.0" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.set (1 samples, 0.02%)</title><rect x="287.0" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.0" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.02%)</title><rect x="287.0" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.setVolatile (1 samples, 0.02%)</title><rect x="287.0" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/util/Preconditions.checkIndex (1 samples, 0.02%)</title><rect x="287.0" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.0" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/VersionedBitSet.clone (1 samples, 0.02%)</title><rect x="287.3" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.3" y="958.0"></text>
</g>
<g>
<title>java/util/BitSet.clone (1 samples, 0.02%)</title><rect x="287.3" y="931.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="287.3" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.3" y="926.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.02%)</title><rect x="287.3" y="899.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="290.3" y="910.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.startStatementWithinTransaction (3 samples, 0.07%)</title><rect x="287.6" y="1027.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.6" y="1038.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="287.6" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.6" y="1022.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.setCurrentCommand (2 samples, 0.05%)</title><rect x="287.9" y="1011.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.9" y="1022.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.transitionToState (2 samples, 0.05%)</title><rect x="287.9" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.02%)</title><rect x="288.2" y="979.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="288.2" y="963.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.2" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="288.2" y="947.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.2" y="958.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.afterCompletion (16 samples, 0.39%)</title><rect x="288.4" y="1091.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.4" y="1102.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor.resetConnection (16 samples, 0.39%)</title><rect x="288.4" y="1075.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.4" y="1086.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyConnection.setAutoCommit (15 samples, 0.36%)</title><rect x="288.7" y="1059.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.7" y="1070.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyConnection.setAutoCommit (15 samples, 0.36%)</title><rect x="288.7" y="1043.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.7" y="1054.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.setAutoCommit (15 samples, 0.36%)</title><rect x="288.7" y="1027.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.7" y="1038.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.commit (14 samples, 0.34%)</title><rect x="289.0" y="1011.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="292.0" y="1022.0"></text>
</g>
<g>
<title>org/h2/command/Command.executeUpdate (14 samples, 0.34%)</title><rect x="289.0" y="995.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.0" y="1006.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.stop (1 samples, 0.02%)</title><rect x="289.3" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.3" y="990.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.clearCTE (1 samples, 0.02%)</title><rect x="289.3" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.3" y="974.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.update (6 samples, 0.15%)</title><rect x="289.6" y="979.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.6" y="990.0"></text>
</g>
<g>
<title>org/h2/command/dml/TransactionCommand.update (4 samples, 0.10%)</title><rect x="290.2" y="963.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.2" y="974.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.commit (4 samples, 0.10%)</title><rect x="290.2" y="947.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.2" y="958.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.commit (2 samples, 0.05%)</title><rect x="290.7" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.7" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.hasChanges (1 samples, 0.02%)</title><rect x="290.7" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.7" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.endTransaction (1 samples, 0.02%)</title><rect x="291.0" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.0" y="926.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/VersionedBitSet.clone (1 samples, 0.02%)</title><rect x="291.0" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.0" y="910.0"></text>
</g>
<g>
<title>java/util/BitSet.clone (1 samples, 0.02%)</title><rect x="291.0" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.0" y="894.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.resetThreadLocalSession (1 samples, 0.02%)</title><rect x="291.3" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.3" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.02%)</title><rect x="291.3" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.3" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (1 samples, 0.02%)</title><rect x="291.3" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.3" y="958.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear (1 samples, 0.02%)</title><rect x="291.3" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.3" y="942.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear0 (1 samples, 0.02%)</title><rect x="291.3" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.3" y="926.0"></text>
</g>
<g>
<title>JVM_ReferenceClear (1 samples, 0.02%)</title><rect x="291.3" y="899.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="294.3" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;397414ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 397414ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.02%)</title><rect x="291.3" y="883.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="294.3" y="894.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.setSavepoint (4 samples, 0.10%)</title><rect x="291.6" y="979.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.6" y="990.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.getStatementSavepoint (4 samples, 0.10%)</title><rect x="291.6" y="963.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.6" y="974.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.getTransaction (4 samples, 0.10%)</title><rect x="291.6" y="947.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.6" y="958.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.begin (4 samples, 0.10%)</title><rect x="291.6" y="931.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.6" y="942.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.registerTransaction (4 samples, 0.10%)</title><rect x="291.6" y="915.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.set (2 samples, 0.05%)</title><rect x="291.6" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (2 samples, 0.05%)</title><rect x="291.6" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.setVolatile (2 samples, 0.05%)</title><rect x="291.6" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.cast (2 samples, 0.05%)</title><rect x="291.6" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.6" y="862.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.&lt;init&gt; (1 samples, 0.02%)</title><rect x="292.2" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.2" y="910.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.setTimeoutMillis (1 samples, 0.02%)</title><rect x="292.2" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.2" y="894.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/VersionedBitSet.clone (1 samples, 0.02%)</title><rect x="292.5" y="899.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.5" y="910.0"></text>
</g>
<g>
<title>java/util/BitSet.clone (1 samples, 0.02%)</title><rect x="292.5" y="883.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.5" y="894.0"></text>
</g>
<g>
<title>java/util/BitSet.trimToSize (1 samples, 0.02%)</title><rect x="292.5" y="867.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.5" y="878.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.waitIfExclusiveModeEnabled (1 samples, 0.02%)</title><rect x="292.7" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.7" y="990.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.getConnectionForTransactionManagement (1 samples, 0.02%)</title><rect x="293.0" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.0" y="1102.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.trace (1 samples, 0.02%)</title><rect x="293.3" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.3" y="1102.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.doLog (1 samples, 0.02%)</title><rect x="293.3" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.3" y="1086.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.isEnabled (1 samples, 0.02%)</title><rect x="293.3" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.3" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback (11 samples, 0.27%)</title><rect x="293.6" y="1107.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.6" y="1118.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcCoordinatorImpl.afterTransactionCompletion (7 samples, 0.17%)</title><rect x="293.9" y="1091.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.9" y="1102.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.afterTransactionCompletion (7 samples, 0.17%)</title><rect x="293.9" y="1075.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.9" y="1086.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.afterTransactionCompletion (1 samples, 0.02%)</title><rect x="294.5" y="1059.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="297.5" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext.downgradeLocks (1 samples, 0.02%)</title><rect x="294.5" y="1043.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="294.5" y="1027.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.02%)</title><rect x="294.5" y="1011.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.5" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.afterTransactionCompletion (2 samples, 0.05%)</title><rect x="294.7" y="1059.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.7" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.getTransactionIfAccessible (2 samples, 0.05%)</title><rect x="295.3" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.3" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.accessTransaction (1 samples, 0.02%)</title><rect x="295.6" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.6" y="1054.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/internal/SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion (3 samples, 0.07%)</title><rect x="295.9" y="1091.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.9" y="1102.0"></text>
</g>
<g>
<title>org/jboss/logging/DelegatingBasicLogger.tracef (3 samples, 0.07%)</title><rect x="295.9" y="1075.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="298.9" y="1086.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.tracef (1 samples, 0.02%)</title><rect x="296.5" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.5" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback (189 samples, 4.59%)</title><rect x="296.8" y="1107.0" width="54.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.8" y="1118.0">org/h..</text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcCoordinatorImpl.beforeTransactionCompletion (188 samples, 4.57%)</title><rect x="297.0" y="1091.0" width="54.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.0" y="1102.0">org/h..</text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.beforeTransactionCompletion (188 samples, 4.57%)</title><rect x="297.0" y="1075.0" width="54.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.0" y="1086.0">org/h..</text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.flushBeforeTransactionCompletion (188 samples, 4.57%)</title><rect x="297.0" y="1059.0" width="54.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.0" y="1070.0">org/h..</text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.managedFlush (188 samples, 4.57%)</title><rect x="297.0" y="1043.0" width="54.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.0" y="1054.0">org/h..</text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.doFlush (188 samples, 4.57%)</title><rect x="297.0" y="1027.0" width="54.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.0" y="1038.0">org/h..</text>
</g>
<g>
<title>org/hibernate/event/service/internal/EventListenerGroupImpl.fireEventOnEachListener (185 samples, 4.50%)</title><rect x="297.6" y="1011.0" width="53.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.6" y="1022.0">org/h..</text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl$$Lambda$1970.0x00007f9a5ca4a118.accept (185 samples, 4.50%)</title><rect x="297.6" y="995.0" width="53.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.6" y="1006.0">org/h..</text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEventListener.onFlush (184 samples, 4.47%)</title><rect x="297.9" y="979.0" width="52.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.9" y="990.0">org/h..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="297.9" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.9" y="974.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/SessionEventListenerManagerImpl.flushStart (1 samples, 0.02%)</title><rect x="298.2" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.2" y="974.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.managedEntitiesIterator (1 samples, 0.02%)</title><rect x="298.5" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.5" y="974.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.flushEverythingToExecutions (44 samples, 1.07%)</title><rect x="298.8" y="963.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.8" y="974.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.setFlushing (6 samples, 0.15%)</title><rect x="299.0" y="947.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.0" y="958.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/NaturalIdResolutionsImpl.cleanupFromSynchronizations (3 samples, 0.07%)</title><rect x="299.0" y="931.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.0" y="942.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/NaturalIdResolutionsImpl.unStashInvalidNaturalIdReferences (3 samples, 0.07%)</title><rect x="299.0" y="915.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.0" y="926.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="299.0" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValuesView.iterator (1 samples, 0.02%)</title><rect x="299.3" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValueIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="299.3" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$BaseIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="299.3" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$Traverser.advance (1 samples, 0.02%)</title><rect x="299.3" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.values (1 samples, 0.02%)</title><rect x="299.6" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.6" y="910.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.getNaturalIdResolutions (3 samples, 0.07%)</title><rect x="299.9" y="931.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.9" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="300.2" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.2" y="926.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="300.2" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.2" y="910.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="300.2" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.2" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="300.2" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.2" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="300.2" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.2" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="300.2" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.2" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="300.2" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.2" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="300.2" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.2" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="300.2" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.2" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="300.2" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.2" y="782.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="300.2" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="300.2" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="300.2" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.2" y="734.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="300.2" y="707.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="303.2" y="718.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="300.2" y="691.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="303.2" y="702.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="300.2" y="675.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="303.2" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="300.2" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="303.2" y="670.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="300.2" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="303.2" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="300.2" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="303.2" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="300.2" y="611.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="303.2" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="300.2" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="303.2" y="606.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="300.2" y="579.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="303.2" y="590.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (1 samples, 0.02%)</title><rect x="300.2" y="563.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="303.2" y="574.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/NaturalIdResolutionsImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="300.5" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.5" y="926.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.flushCollections (5 samples, 0.12%)</title><rect x="300.8" y="947.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.8" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="301.3" y="931.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="301.3" y="915.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.3" y="926.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener$$Lambda$1989.0x00007f9a5ca4d000.&lt;init&gt; (1 samples, 0.02%)</title><rect x="301.3" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.3" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.02%)</title><rect x="301.6" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.6" y="926.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.sortCollectionActions (1 samples, 0.02%)</title><rect x="301.9" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.9" y="942.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.flushEntities (27 samples, 0.66%)</title><rect x="302.2" y="947.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.2" y="958.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/AbstractEntityEntry.getStatus (1 samples, 0.02%)</title><rect x="302.2" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.2" y="942.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/AbstractEntityEntry.getCompressedValue (1 samples, 0.02%)</title><rect x="302.2" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.2" y="926.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.sortActions (1 samples, 0.02%)</title><rect x="302.5" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.5" y="942.0"></text>
</g>
<g>
<title>org/hibernate/event/service/internal/EventListenerGroupImpl.fireEventOnEachListener (25 samples, 0.61%)</title><rect x="302.8" y="931.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.8" y="942.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener$$Lambda$1975.0x00007f9a5ca4e000.accept (25 samples, 0.61%)</title><rect x="302.8" y="915.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.8" y="926.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.onFlushEntity (24 samples, 0.58%)</title><rect x="303.1" y="899.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.1" y="910.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/AbstractEntityEntry.requiresDirtyCheck (2 samples, 0.05%)</title><rect x="303.9" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.9" y="894.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/AbstractEntityEntry.isUnequivocallyNonDirty (2 samples, 0.05%)</title><rect x="303.9" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.9" y="878.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.getValues (9 samples, 0.22%)</title><rect x="304.5" y="883.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.5" y="894.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.checkId (5 samples, 0.12%)</title><rect x="304.5" y="867.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.5" y="878.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.getIdentifier (4 samples, 0.10%)</title><rect x="304.5" y="851.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.5" y="862.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl.getIdentifier (3 samples, 0.07%)</title><rect x="304.8" y="835.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.8" y="846.0"></text>
</g>
<g>
<title>org/hibernate/property/access/spi/GetterFieldImpl.get (2 samples, 0.05%)</title><rect x="305.1" y="819.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.1" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.get (2 samples, 0.05%)</title><rect x="305.1" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeLongFieldAccessorImpl.get (1 samples, 0.02%)</title><rect x="305.4" y="787.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.4" y="798.0"></text>
</g>
<g>
<title>org/hibernate/type/AbstractStandardBasicType.isEqual (1 samples, 0.02%)</title><rect x="305.6" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.6" y="862.0"></text>
</g>
<g>
<title>org/hibernate/type/AbstractStandardBasicType.isEqual (1 samples, 0.02%)</title><rect x="305.6" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.6" y="846.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/EntityPersister.getValues (4 samples, 0.10%)</title><rect x="305.9" y="867.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.9" y="878.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.getPropertyValues (4 samples, 0.10%)</title><rect x="305.9" y="851.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.9" y="862.0"></text>
</g>
<g>
<title>org/hibernate/bytecode/enhance/spi/interceptor/LazyAttributesMetadata.isLazyAttribute (1 samples, 0.02%)</title><rect x="306.5" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.5" y="846.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.getNumberOfAttributeMappings (1 samples, 0.02%)</title><rect x="306.8" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.8" y="846.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.isUpdateNecessary (10 samples, 0.24%)</title><rect x="307.1" y="883.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="307.1" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.02%)</title><rect x="307.1" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.1" y="862.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.dirtyCheck (9 samples, 0.22%)</title><rect x="307.4" y="867.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.4" y="878.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.getDirtyProperties (3 samples, 0.07%)</title><rect x="307.7" y="851.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.7" y="862.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.getDirtyPropertiesFromCustomEntityDirtinessStrategy (1 samples, 0.02%)</title><rect x="307.7" y="835.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.7" y="846.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.getDirtyPropertiesFromInterceptor (2 samples, 0.05%)</title><rect x="307.9" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.9" y="846.0"></text>
</g>
<g>
<title>org/hibernate/event/spi/FlushEntityEvent.getPropertyValues (1 samples, 0.02%)</title><rect x="308.2" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.2" y="830.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.performDirtyCheck (5 samples, 0.12%)</title><rect x="308.5" y="851.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.5" y="862.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.findDirty (5 samples, 0.12%)</title><rect x="308.5" y="835.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.5" y="846.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/DirtyHelper.findDirty (4 samples, 0.10%)</title><rect x="308.8" y="819.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.8" y="830.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/DirtyHelper.isDirty (4 samples, 0.10%)</title><rect x="308.8" y="803.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.8" y="814.0"></text>
</g>
<g>
<title>org/hibernate/type/AbstractStandardBasicType.isDirty (1 samples, 0.02%)</title><rect x="309.7" y="787.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.7" y="798.0"></text>
</g>
<g>
<title>org/hibernate/type/AbstractStandardBasicType.isDirty (1 samples, 0.02%)</title><rect x="309.7" y="771.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.7" y="782.0"></text>
</g>
<g>
<title>org/hibernate/type/AbstractStandardBasicType.isSame (1 samples, 0.02%)</title><rect x="309.7" y="755.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.7" y="766.0"></text>
</g>
<g>
<title>org/hibernate/type/AbstractStandardBasicType.isEqual (1 samples, 0.02%)</title><rect x="309.7" y="739.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.7" y="750.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.logFlushResults (1 samples, 0.02%)</title><rect x="309.9" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.9" y="958.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.prepareCollectionFlushes (2 samples, 0.05%)</title><rect x="310.2" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.2" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="310.5" y="931.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.5" y="942.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="310.5" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.5" y="926.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="310.5" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.5" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="310.5" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.5" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="310.5" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.5" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="310.5" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.5" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="310.5" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.5" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="310.5" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.5" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="310.5" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="310.5" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="310.5" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.5" y="782.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="310.5" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.5" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="310.5" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.5" y="750.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="310.5" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.5" y="734.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.hasEntry (1 samples, 0.02%)</title><rect x="310.5" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.5" y="718.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.hasEntry (1 samples, 0.02%)</title><rect x="310.5" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.5" y="702.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/ZipContent.hasEntry (1 samples, 0.02%)</title><rect x="310.5" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.5" y="686.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/ZipContent.loadZipCentralDirectoryFileHeaderRecord (1 samples, 0.02%)</title><rect x="310.5" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.5" y="670.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/ZipCentralDirectoryFileHeaderRecord.load (1 samples, 0.02%)</title><rect x="310.5" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.5" y="654.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/DataBlock.readFully (1 samples, 0.02%)</title><rect x="310.5" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.5" y="638.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/FileDataBlock.read (1 samples, 0.02%)</title><rect x="310.5" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.5" y="622.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/FileDataBlock$FileAccess.read (1 samples, 0.02%)</title><rect x="310.5" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.5" y="606.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/FileDataBlock$FileAccess.fillBuffer (1 samples, 0.02%)</title><rect x="310.5" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.02%)</title><rect x="310.5" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.02%)</title><rect x="310.5" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.5" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.02%)</title><rect x="310.5" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="310.5" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.5" y="526.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.prepareEntityFlushes (1 samples, 0.02%)</title><rect x="310.8" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.8" y="958.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext$EntityEntryCrossRefImpl.getKey (1 samples, 0.02%)</title><rect x="310.8" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.8" y="942.0"></text>
</g>
<g>
<title>org/jboss/logging/DelegatingBasicLogger.trace (1 samples, 0.02%)</title><rect x="311.1" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.1" y="958.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.trace (1 samples, 0.02%)</title><rect x="311.1" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.1" y="942.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.performExecutions (134 samples, 3.26%)</title><rect x="311.4" y="963.0" width="38.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.4" y="974.0">org..</text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.setFlushing (2 samples, 0.05%)</title><rect x="312.0" y="947.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.0" y="958.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/NaturalIdResolutionsImpl.cleanupFromSynchronizations (1 samples, 0.02%)</title><rect x="312.2" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.2" y="942.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/NaturalIdResolutionsImpl.unStashInvalidNaturalIdReferences (1 samples, 0.02%)</title><rect x="312.2" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValuesView.iterator (1 samples, 0.02%)</title><rect x="312.2" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValueIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="312.2" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$BaseIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="312.2" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$Traverser.advance (1 samples, 0.02%)</title><rect x="312.2" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.2" y="862.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.executeActions (128 samples, 3.11%)</title><rect x="312.5" y="947.0" width="36.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.5" y="958.0">org..</text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.executeActions (126 samples, 3.06%)</title><rect x="313.1" y="931.0" width="36.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.1" y="942.0">org..</text>
</g>
<g>
<title>org/hibernate/action/internal/EntityAction.getAfterTransactionCompletionProcess (1 samples, 0.02%)</title><rect x="313.1" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.1" y="926.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityAction.needsAfterTransactionCompletion (1 samples, 0.02%)</title><rect x="313.1" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.1" y="910.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityInsertAction.hasPostCommitEventListeners (1 samples, 0.02%)</title><rect x="313.1" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="316.1" y="894.0"></text>
</g>
<g>
<title>org/hibernate/event/service/internal/EventListenerGroupImpl.listeners (1 samples, 0.02%)</title><rect x="313.1" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.1" y="878.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityInsertAction.execute (125 samples, 3.04%)</title><rect x="313.4" y="915.0" width="35.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.4" y="926.0">org..</text>
</g>
<g>
<title>org/hibernate/action/internal/EntityInsertAction.handleGeneratedProperties (2 samples, 0.05%)</title><rect x="313.4" y="899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.4" y="910.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.hasInsertGeneratedProperties (1 samples, 0.02%)</title><rect x="313.7" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.7" y="894.0"></text>
</g>
<g>
<title>org/hibernate/tuple/entity/EntityMetamodel.hasInsertGeneratedValues (1 samples, 0.02%)</title><rect x="313.7" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.7" y="878.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityInsertAction.postInsert (1 samples, 0.02%)</title><rect x="314.0" y="899.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.0" y="910.0"></text>
</g>
<g>
<title>org/hibernate/event/service/internal/EventListenerGroupImpl.fireLazyEventOnEachListener (1 samples, 0.02%)</title><rect x="314.0" y="883.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.0" y="894.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityInsertAction$$Lambda$2032.0x00007f9a5ca57a88.accept (1 samples, 0.02%)</title><rect x="314.0" y="867.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.0" y="878.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/PostInsertEventListenerStandardImpl.onPostInsert (1 samples, 0.02%)</title><rect x="314.0" y="851.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.0" y="862.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/AbstractEntityEntry.postInsert (1 samples, 0.02%)</title><rect x="314.2" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.2" y="910.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.getEntry (1 samples, 0.02%)</title><rect x="314.5" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.5" y="910.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext.getEntityEntry (1 samples, 0.02%)</title><rect x="314.5" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.5" y="894.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext.getAssociatedManagedEntity (1 samples, 0.02%)</title><rect x="314.5" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.5" y="878.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.insert (120 samples, 2.92%)</title><rect x="314.8" y="899.0" width="34.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.8" y="910.0">or..</text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.coordinateInsert (119 samples, 2.89%)</title><rect x="315.1" y="883.0" width="34.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.1" y="894.0">or..</text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.doStaticInserts (116 samples, 2.82%)</title><rect x="315.1" y="867.0" width="33.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.1" y="878.0">or..</text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/AbstractMutationExecutor.execute (88 samples, 2.14%)</title><rect x="315.1" y="851.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.1" y="862.0">o..</text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/MutationExecutorSingleNonBatched.performNonBatchedOperations (88 samples, 2.14%)</title><rect x="315.1" y="835.0" width="25.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.1" y="846.0">o..</text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/AbstractMutationExecutor.performNonBatchedMutation (88 samples, 2.14%)</title><rect x="315.1" y="819.0" width="25.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.1" y="830.0">o..</text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcCoordinatorImpl.getResultSetReturn (1 samples, 0.02%)</title><rect x="315.7" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.7" y="814.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/ResultSetReturnImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="315.7" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.7" y="798.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcServicesImpl.getDialect (1 samples, 0.02%)</title><rect x="315.7" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.7" y="782.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/ResultSetReturnImpl.executeUpdate (58 samples, 1.41%)</title><rect x="316.0" y="803.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.0" y="814.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.executeUpdate (57 samples, 1.39%)</title><rect x="316.0" y="787.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.0" y="798.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyPreparedStatement.executeUpdate (57 samples, 1.39%)</title><rect x="316.0" y="771.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.0" y="782.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.executeUpdate (57 samples, 1.39%)</title><rect x="316.0" y="755.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.0" y="766.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.executeUpdateInternal (56 samples, 1.36%)</title><rect x="316.3" y="739.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.3" y="750.0"></text>
</g>
<g>
<title>org/h2/command/Command.executeUpdate (56 samples, 1.36%)</title><rect x="316.3" y="723.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.3" y="734.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.stop (2 samples, 0.05%)</title><rect x="316.3" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.3" y="718.0"></text>
</g>
<g>
<title>org/h2/command/Command.stop (1 samples, 0.02%)</title><rect x="316.5" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.5" y="702.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.update (41 samples, 1.00%)</title><rect x="316.8" y="707.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.8" y="718.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.recompileIfRequired (1 samples, 0.02%)</title><rect x="316.8" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.8" y="702.0"></text>
</g>
<g>
<title>org/h2/command/dml/DataChangeStatement.update (40 samples, 0.97%)</title><rect x="317.1" y="691.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.1" y="702.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="317.1" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.1" y="686.0"></text>
</g>
<g>
<title>org/h2/command/dml/Insert.update (39 samples, 0.95%)</title><rect x="317.4" y="675.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.4" y="686.0"></text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.05%)</title><rect x="317.4" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.4" y="670.0"></text>
</g>
<g>
<title>org/h2/command/dml/Insert.insertRows (37 samples, 0.90%)</title><rect x="318.0" y="659.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.0" y="670.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVTable.addRow (30 samples, 0.73%)</title><rect x="318.5" y="643.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.5" y="654.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVPrimaryIndex.add (28 samples, 0.68%)</title><rect x="318.8" y="627.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.8" y="638.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVPrimaryIndex.getMap (1 samples, 0.02%)</title><rect x="319.1" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.1" y="622.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionMap.getInstance (1 samples, 0.02%)</title><rect x="319.1" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.1" y="606.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.openMapX (1 samples, 0.02%)</title><rect x="319.1" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.1" y="590.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionMap.putIfAbsent (26 samples, 0.63%)</title><rect x="319.4" y="611.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.4" y="622.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionMap.set (26 samples, 0.63%)</title><rect x="319.4" y="595.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.4" y="606.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.operate (26 samples, 0.63%)</title><rect x="319.4" y="579.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.4" y="590.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap$DecisionMaker.decide (16 samples, 0.39%)</title><rect x="319.4" y="563.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.4" y="574.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TxDecisionMaker$PutIfAbsentDecisionMaker.decide (16 samples, 0.39%)</title><rect x="319.4" y="547.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.4" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TxDecisionMaker$PutIfAbsentDecisionMaker.decide (16 samples, 0.39%)</title><rect x="319.4" y="531.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.4" y="542.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TxDecisionMaker$PutIfAbsentDecisionMaker.getValueInSnapshot (1 samples, 0.02%)</title><rect x="319.4" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.4" y="526.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TxDecisionMaker.logAndDecideToPut (15 samples, 0.36%)</title><rect x="319.7" y="515.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.7" y="526.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Record.&lt;init&gt; (1 samples, 0.02%)</title><rect x="320.0" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.0" y="510.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.log (13 samples, 0.32%)</title><rect x="320.3" y="499.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndIncrement (1 samples, 0.02%)</title><rect x="320.8" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="323.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndAddLong (1 samples, 0.02%)</title><rect x="320.8" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.weakCompareAndSetLong (1 samples, 0.02%)</title><rect x="320.8" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.8" y="462.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.addUndoLogRecord (10 samples, 0.24%)</title><rect x="321.1" y="483.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.1" y="494.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.append (6 samples, 0.15%)</title><rect x="321.1" y="467.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.1" y="478.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.lockRoot (1 samples, 0.02%)</title><rect x="321.4" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.4" y="462.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.tryLock (1 samples, 0.02%)</title><rect x="321.4" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.4" y="446.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.tryLock (1 samples, 0.02%)</title><rect x="321.4" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.4" y="430.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="321.4" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.4" y="414.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.unlockRoot (4 samples, 0.10%)</title><rect x="321.7" y="451.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="324.7" y="462.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.unlockRoot (4 samples, 0.10%)</title><rect x="321.7" y="435.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.7" y="446.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="322.0" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.0" y="430.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.updatePageAndLockedStatus (2 samples, 0.05%)</title><rect x="322.3" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.3" y="430.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="322.3" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.3" y="414.0"></text>
</g>
<g>
<title>org/h2/mvstore/RootReference.tryUpdate (1 samples, 0.02%)</title><rect x="322.6" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.6" y="414.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.compareAndSetRoot (1 samples, 0.02%)</title><rect x="322.6" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.02%)</title><rect x="322.6" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="322.6" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="322.6" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.6" y="350.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.isEmpty (1 samples, 0.02%)</title><rect x="322.9" y="467.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.9" y="478.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.sizeAsLong (1 samples, 0.02%)</title><rect x="322.9" y="451.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.9" y="462.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.getRoot (1 samples, 0.02%)</title><rect x="322.9" y="435.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.get (1 samples, 0.02%)</title><rect x="322.9" y="419.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.9" y="430.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.getOperationId (3 samples, 0.07%)</title><rect x="323.1" y="467.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.1" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.02%)</title><rect x="323.7" y="451.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="326.7" y="462.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="323.7" y="435.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="326.7" y="446.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.isPersistent (1 samples, 0.02%)</title><rect x="324.0" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.0" y="574.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.replacePage (3 samples, 0.07%)</title><rect x="324.3" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.3" y="574.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page$NonLeaf.setChild (2 samples, 0.05%)</title><rect x="324.3" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="327.3" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page$NonLeaf.getTotalCount (1 samples, 0.02%)</title><rect x="324.6" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.6" y="542.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="324.6" y="515.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="327.6" y="526.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="324.6" y="499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="327.6" y="510.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.isSaved (1 samples, 0.02%)</title><rect x="324.9" y="547.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.9" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/DataUtils.isPageSaved (1 samples, 0.02%)</title><rect x="324.9" y="531.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.9" y="542.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page$Leaf.insertLeaf (2 samples, 0.05%)</title><rect x="325.1" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.1" y="574.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.createValueStorage (1 samples, 0.02%)</title><rect x="325.1" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.1" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.insertKey (1 samples, 0.02%)</title><rect x="325.4" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.4" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.createKeyStorage (1 samples, 0.02%)</title><rect x="325.4" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.4" y="542.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.copy (1 samples, 0.02%)</title><rect x="325.7" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.7" y="574.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.clone (1 samples, 0.02%)</title><rect x="325.7" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.7" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="325.7" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.7" y="542.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::~JvmtiVMObjectAllocEventCollector() (1 samples, 0.02%)</title><rect x="325.7" y="515.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="328.7" y="526.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TxDecisionMaker$PutIfAbsentDecisionMaker.selectValue (3 samples, 0.07%)</title><rect x="326.0" y="563.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.0" y="574.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TxDecisionMaker.selectValue (3 samples, 0.07%)</title><rect x="326.0" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.0" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/VersionedValueUncommitted.getInstance (2 samples, 0.05%)</title><rect x="326.3" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.3" y="542.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="326.3" y="515.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="329.3" y="526.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="326.3" y="499.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="329.3" y="510.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="326.3" y="483.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="329.3" y="494.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/VersionedValueUncommitted.&lt;init&gt; (1 samples, 0.02%)</title><rect x="326.6" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.6" y="526.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="326.6" y="499.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="329.6" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="326.6" y="483.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="329.6" y="494.0"></text>
</g>
<g>
<title>InvocationCounter::set_carry_on_overflow() (1 samples, 0.02%)</title><rect x="326.6" y="467.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="329.6" y="478.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVTable.syncLastModificationIdWithDatabase (1 samples, 0.02%)</title><rect x="326.9" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.9" y="638.0"></text>
</g>
<g>
<title>org/h2/engine/Database.getNextModificationDataId (1 samples, 0.02%)</title><rect x="326.9" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.9" y="622.0"></text>
</g>
<g>
<title>org/h2/table/Table.convertInsertRow (4 samples, 0.10%)</title><rect x="327.2" y="643.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.2" y="654.0"></text>
</g>
<g>
<title>org/h2/table/Column.validateConvertUpdateSequence (4 samples, 0.10%)</title><rect x="327.2" y="627.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.2" y="638.0"></text>
</g>
<g>
<title>org/h2/value/Value.convertForAssignTo (3 samples, 0.07%)</title><rect x="327.4" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.4" y="622.0"></text>
</g>
<g>
<title>org/h2/value/Value.convertTo (3 samples, 0.07%)</title><rect x="327.4" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.4" y="606.0"></text>
</g>
<g>
<title>org/h2/value/Value.convertToBigint (2 samples, 0.05%)</title><rect x="327.7" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.7" y="590.0"></text>
</g>
<g>
<title>org/h2/table/Table.getTemplateRow (1 samples, 0.02%)</title><rect x="328.3" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.3" y="654.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.endStatement (1 samples, 0.02%)</title><rect x="328.6" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.6" y="718.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.markStatementEnd (1 samples, 0.02%)</title><rect x="328.6" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.6" y="702.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.releaseSnapshot (1 samples, 0.02%)</title><rect x="328.6" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.6" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="328.6" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="331.6" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="328.6" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="331.6" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="328.6" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="331.6" y="638.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="328.6" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="331.6" y="622.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="328.6" y="595.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="331.6" y="606.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.setSavepoint (3 samples, 0.07%)</title><rect x="328.9" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.9" y="718.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.getStatementSavepoint (2 samples, 0.05%)</title><rect x="329.2" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.2" y="702.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.getTransaction (2 samples, 0.05%)</title><rect x="329.2" y="675.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.2" y="686.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.begin (2 samples, 0.05%)</title><rect x="329.2" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.2" y="670.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.registerTransaction (2 samples, 0.05%)</title><rect x="329.2" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.2" y="654.0"></text>
</g>
<g>
<title>java/util/BitSet.nextClearBit (1 samples, 0.02%)</title><rect x="329.2" y="627.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.set (1 samples, 0.02%)</title><rect x="329.4" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.02%)</title><rect x="329.4" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.setVolatile (1 samples, 0.02%)</title><rect x="329.4" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.4" y="606.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.setThreadLocalSession (1 samples, 0.02%)</title><rect x="329.7" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="329.7" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="329.7" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.7" y="686.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.startStatementWithinTransaction (8 samples, 0.19%)</title><rect x="330.0" y="707.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.05%)</title><rect x="330.3" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="330.6" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="330.6" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.6" y="670.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.getDependencies (3 samples, 0.07%)</title><rect x="330.9" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.9" y="702.0"></text>
</g>
<g>
<title>org/h2/command/dml/Insert.collectDependencies (3 samples, 0.07%)</title><rect x="330.9" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.9" y="686.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.setCurrentCommand (1 samples, 0.02%)</title><rect x="331.7" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.7" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.02%)</title><rect x="331.7" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.7" y="686.0"></text>
</g>
<g>
<title>java/time/Clock.currentInstant (1 samples, 0.02%)</title><rect x="331.7" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.7" y="670.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.markStatementStart (1 samples, 0.02%)</title><rect x="332.0" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="335.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.isEmpty (1 samples, 0.02%)</title><rect x="332.0" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.0" y="686.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/spi/SqlStatementLogger.logSlowQuery (1 samples, 0.02%)</title><rect x="332.3" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.3" y="798.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/JdbcValueBindingsImpl.beforeStatement (21 samples, 0.51%)</title><rect x="332.6" y="803.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.6" y="814.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/spi/BindingGroup.forEachBinding (20 samples, 0.49%)</title><rect x="332.9" y="787.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.49%)</title><rect x="332.9" y="771.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.9" y="782.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/JdbcValueBindingsImpl$$Lambda$2025.0x00007f9a5ca56288.accept (19 samples, 0.46%)</title><rect x="333.2" y="755.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.2" y="766.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/JdbcValueBindingsImpl.lambda$beforeStatement$0 (19 samples, 0.46%)</title><rect x="333.2" y="739.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.2" y="750.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/PreparedStatementDetailsStandard.resolveStatement (9 samples, 0.22%)</title><rect x="333.2" y="723.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.2" y="734.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/ModelMutationHelper$$Lambda$2001.0x00007f9a5ca52458.get (9 samples, 0.22%)</title><rect x="333.2" y="707.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.2" y="718.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/ModelMutationHelper.lambda$standardPreparation$0 (9 samples, 0.22%)</title><rect x="333.2" y="691.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.2" y="702.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/ModelMutationHelper.standardStatementPreparation (9 samples, 0.22%)</title><rect x="333.2" y="675.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.2" y="686.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/MutationStatementPreparerImpl.prepareStatement (8 samples, 0.19%)</title><rect x="333.5" y="659.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.5" y="670.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/MutationStatementPreparerImpl$StatementPreparationTemplate.prepareStatement (7 samples, 0.17%)</title><rect x="333.5" y="643.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/MutationStatementPreparerImpl$1.doPrepare (5 samples, 0.12%)</title><rect x="333.5" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.5" y="638.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyConnection.prepareStatement (3 samples, 0.07%)</title><rect x="333.7" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.7" y="622.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyConnection.prepareStatement (3 samples, 0.07%)</title><rect x="333.7" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.7" y="606.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyFactory.getProxyPreparedStatement (1 samples, 0.02%)</title><rect x="333.7" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.7" y="590.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.&lt;init&gt; (1 samples, 0.02%)</title><rect x="333.7" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.7" y="574.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.prepareStatement (2 samples, 0.05%)</title><rect x="334.0" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.0" y="590.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.translateSQL (1 samples, 0.02%)</title><rect x="334.0" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.0" y="574.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.translateSQL (1 samples, 0.02%)</title><rect x="334.0" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.0" y="558.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.&lt;init&gt; (1 samples, 0.02%)</title><rect x="334.3" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.3" y="574.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/MutationStatementPreparerImpl.connection (1 samples, 0.02%)</title><rect x="334.6" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.6" y="622.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/MutationStatementPreparerImpl$StatementPreparationTemplate.postProcess (1 samples, 0.02%)</title><rect x="334.9" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.9" y="638.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.register (1 samples, 0.02%)</title><rect x="334.9" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.9" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (1 samples, 0.02%)</title><rect x="334.9" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="334.9" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="334.9" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.9" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="334.9" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="337.9" y="558.0"></text>
</g>
<g>
<title>org/hibernate/internal/JdbcObserverImpl.jdbcPrepareStatementEnd (1 samples, 0.02%)</title><rect x="335.2" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.2" y="638.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/MutationStatementPreparerImpl.buildPreparedStatementPreparationTemplate (1 samples, 0.02%)</title><rect x="335.5" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/MutationStatementPreparerImpl$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="335.5" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.5" y="638.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/MutationStatementPreparerImpl$StatementPreparationTemplate.&lt;init&gt; (1 samples, 0.02%)</title><rect x="335.5" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.5" y="622.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="335.5" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.5" y="606.0"></text>
</g>
<g>
<title>org/hibernate/type/descriptor/jdbc/BasicBinder.bind (10 samples, 0.24%)</title><rect x="335.8" y="723.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.8" y="734.0"></text>
</g>
<g>
<title>org/hibernate/type/descriptor/jdbc/BigIntJdbcType$1.doBind (2 samples, 0.05%)</title><rect x="335.8" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.8" y="718.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.setLong (2 samples, 0.05%)</title><rect x="335.8" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.8" y="702.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.setLong (2 samples, 0.05%)</title><rect x="335.8" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.8" y="686.0"></text>
</g>
<g>
<title>org/h2/value/ValueBigint.get (2 samples, 0.05%)</title><rect x="335.8" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.8" y="670.0"></text>
</g>
<g>
<title>org/h2/value/Value.cache (1 samples, 0.02%)</title><rect x="336.0" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.0" y="654.0"></text>
</g>
<g>
<title>org/h2/value/ValueBigint.hashCode (1 samples, 0.02%)</title><rect x="336.0" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.0" y="638.0"></text>
</g>
<g>
<title>org/hibernate/type/descriptor/jdbc/VarcharJdbcType$1.doBind (8 samples, 0.19%)</title><rect x="336.3" y="707.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.3" y="718.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.setString (6 samples, 0.15%)</title><rect x="336.6" y="691.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.6" y="702.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.setString (6 samples, 0.15%)</title><rect x="336.6" y="675.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="339.6" y="686.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.setParameter (1 samples, 0.02%)</title><rect x="336.6" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.6" y="670.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcStatement.checkClosed (1 samples, 0.02%)</title><rect x="336.6" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.6" y="654.0"></text>
</g>
<g>
<title>org/h2/value/ValueVarchar.get (5 samples, 0.12%)</title><rect x="336.9" y="659.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.9" y="670.0"></text>
</g>
<g>
<title>org/h2/util/StringUtils.cache (3 samples, 0.07%)</title><rect x="337.2" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="337.5" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.5" y="638.0"></text>
</g>
<g>
<title>org/h2/util/StringUtils.getCache (1 samples, 0.02%)</title><rect x="337.8" y="627.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.8" y="638.0"></text>
</g>
<g>
<title>org/h2/value/Value.cache (1 samples, 0.02%)</title><rect x="338.0" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.0" y="654.0"></text>
</g>
<g>
<title>org/h2/value/ValueVarchar.getValueType (1 samples, 0.02%)</title><rect x="338.0" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.0" y="638.0"></text>
</g>
<g>
<title>org/hibernate/type/descriptor/java/StringJavaType.unwrap (1 samples, 0.02%)</title><rect x="338.3" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.3" y="702.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/ModelMutationHelper.checkResults (3 samples, 0.07%)</title><rect x="338.6" y="803.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.6" y="814.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator$$Lambda$2023.0x00007f9a5ca55e48.checkResult (3 samples, 0.07%)</title><rect x="338.6" y="787.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.6" y="798.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.lambda$doStaticInserts$0 (2 samples, 0.05%)</title><rect x="338.9" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.9" y="782.0"></text>
</g>
<g>
<title>org/hibernate/jdbc/Expectations$BasicExpectation.verifyOutcome (2 samples, 0.05%)</title><rect x="338.9" y="755.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.9" y="766.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/PreparedStatementDetailsStandard.releaseStatement (3 samples, 0.07%)</title><rect x="339.5" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.5" y="814.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.release (3 samples, 0.07%)</title><rect x="339.5" y="787.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.5" y="798.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.close (2 samples, 0.05%)</title><rect x="339.5" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.5" y="782.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyStatement.close (1 samples, 0.02%)</title><rect x="339.5" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.5" y="766.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.close (1 samples, 0.02%)</title><rect x="339.5" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.5" y="750.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcStatement.close (1 samples, 0.02%)</title><rect x="339.5" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.5" y="734.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcStatement.closeInternal (1 samples, 0.02%)</title><rect x="339.5" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.5" y="718.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcStatement.closeOldResultSet (1 samples, 0.02%)</title><rect x="339.5" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.5" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="339.8" y="755.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="342.8" y="766.0"></text>
</g>
<g>
<title>org/jboss/logging/DelegatingBasicLogger.tracev (1 samples, 0.02%)</title><rect x="340.1" y="771.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="343.1" y="782.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.logv (1 samples, 0.02%)</title><rect x="340.1" y="755.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.1" y="766.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.isEnabled (1 samples, 0.02%)</title><rect x="340.1" y="739.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.1" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="340.1" y="723.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.1" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="340.1" y="707.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.1" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (1 samples, 0.02%)</title><rect x="340.1" y="691.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.1" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (1 samples, 0.02%)</title><rect x="340.1" y="675.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (1 samples, 0.02%)</title><rect x="340.1" y="659.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.getArray (1 samples, 0.02%)</title><rect x="340.1" y="643.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.1" y="654.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator$InsertValuesAnalysis.&lt;init&gt; (2 samples, 0.05%)</title><rect x="340.3" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.3" y="862.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.forEachMutableTable (2 samples, 0.05%)</title><rect x="340.3" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.3" y="846.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/EntityTableMapping.isInverse (2 samples, 0.05%)</title><rect x="340.3" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.3" y="830.0"></text>
</g>
<g>
<title>java/util/BitSet.get (2 samples, 0.05%)</title><rect x="340.3" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.3" y="814.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.decomposeForInsert (21 samples, 0.51%)</title><rect x="340.9" y="851.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.9" y="862.0"></text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.05%)</title><rect x="341.2" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="344.2" y="846.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator$$Lambda$1997.0x00007f9a5ca50438.include (1 samples, 0.02%)</title><rect x="341.8" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.8" y="846.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.lambda$getTableInclusionChecker$4 (1 samples, 0.02%)</title><rect x="341.8" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.8" y="830.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/EntityTableMapping.isOptional (1 samples, 0.02%)</title><rect x="341.8" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="344.8" y="814.0"></text>
</g>
<g>
<title>java/util/BitSet.get (1 samples, 0.02%)</title><rect x="341.8" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.8" y="798.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.breakDownJdbcValue (10 samples, 0.24%)</title><rect x="342.1" y="835.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.1" y="846.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/EntityTableMapping$KeyMapping.breakDownKeyJdbcValues (10 samples, 0.24%)</title><rect x="342.1" y="819.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.1" y="830.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/Bindable.forEachJdbcValue (10 samples, 0.24%)</title><rect x="342.1" y="803.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.1" y="814.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/Bindable.forEachJdbcValue (10 samples, 0.24%)</title><rect x="342.1" y="787.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.1" y="798.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="342.6" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.6" y="782.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl.disassemble (2 samples, 0.05%)</title><rect x="342.9" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.9" y="782.0"></text>
</g>
<g>
<title>org/hibernate/type/BasicType.disassemble (1 samples, 0.02%)</title><rect x="343.2" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.2" y="766.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl.forEachDisassembledJdbcValue (5 samples, 0.12%)</title><rect x="343.5" y="771.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.5" y="782.0"></text>
</g>
<g>
<title>org/hibernate/type/BasicType.forEachDisassembledJdbcValue (4 samples, 0.10%)</title><rect x="343.8" y="755.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="346.8" y="766.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/EntityTableMapping$KeyMapping$$Lambda$2018.0x00007f9a5ca551a8.consume (4 samples, 0.10%)</title><rect x="343.8" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.8" y="750.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/EntityTableMapping$KeyMapping.lambda$breakDownKeyJdbcValues$0 (4 samples, 0.10%)</title><rect x="343.8" y="723.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.8" y="734.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator$$Lambda$2014.0x00007f9a5ca54910.consume (3 samples, 0.07%)</title><rect x="344.1" y="707.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.1" y="718.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.lambda$breakDownJdbcValue$1 (3 samples, 0.07%)</title><rect x="344.1" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.1" y="702.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="344.1" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="347.1" y="686.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="344.1" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="347.1" y="670.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="344.1" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="347.1" y="654.0"></text>
</g>
<g>
<title>CompilationPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.02%)</title><rect x="344.1" y="627.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="347.1" y="638.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, JavaThread*) (1 samples, 0.02%)</title><rect x="344.1" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="347.1" y="622.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, JavaThread*) (1 samples, 0.02%)</title><rect x="344.1" y="595.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="347.1" y="606.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="344.1" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="347.1" y="590.0"></text>
</g>
<g>
<title>CompileTask::allocate() (1 samples, 0.02%)</title><rect x="344.1" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="347.1" y="574.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/JdbcValueBindingsImpl.bindValue (2 samples, 0.05%)</title><rect x="344.4" y="675.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.4" y="686.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/AbstractSingleMutationExecutor.resolveValueDescriptor (1 samples, 0.02%)</title><rect x="344.4" y="659.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.4" y="670.0"></text>
</g>
<g>
<title>org/hibernate/sql/model/jdbc/AbstractJdbcMutation.findValueDescriptor (1 samples, 0.02%)</title><rect x="344.4" y="643.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.4" y="654.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/spi/BindingGroup.bindValue (1 samples, 0.02%)</title><rect x="344.6" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.02%)</title><rect x="344.6" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="344.6" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="344.6" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.addEntry (1 samples, 0.02%)</title><rect x="344.6" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="344.6" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.6" y="590.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.decomposeAttribute (7 samples, 0.17%)</title><rect x="344.9" y="835.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.9" y="846.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/ModelPart.decompose (6 samples, 0.15%)</title><rect x="345.2" y="819.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.2" y="830.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicAttributeMapping.breakDownJdbcValues (6 samples, 0.15%)</title><rect x="345.2" y="803.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.2" y="814.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/BasicValuedMapping.disassemble (1 samples, 0.02%)</title><rect x="345.2" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.2" y="798.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/JdbcMapping.convertToRelationalValue (1 samples, 0.02%)</title><rect x="345.2" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator$$Lambda$2006.0x00007f9a5ca53148.consume (5 samples, 0.12%)</title><rect x="345.5" y="787.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.5" y="798.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.lambda$decomposeAttribute$2 (5 samples, 0.12%)</title><rect x="345.5" y="771.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="348.5" y="782.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="345.5" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.5" y="766.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/JdbcValueBindingsImpl.bindValue (3 samples, 0.07%)</title><rect x="345.8" y="755.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.8" y="766.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/JdbcValueBindingsImpl.resolveBindingGroup (1 samples, 0.02%)</title><rect x="346.1" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="346.1" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="346.1" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.02%)</title><rect x="346.1" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.1" y="702.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/spi/BindingGroup.bindValue (1 samples, 0.02%)</title><rect x="346.4" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.4" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.02%)</title><rect x="346.4" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="346.4" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="346.4" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.addEntryToEmptyMap (1 samples, 0.02%)</title><rect x="346.4" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="346.4" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.4" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$254.0x00007f9a5c0ee8b0.compare (1 samples, 0.02%)</title><rect x="346.4" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.4" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1 samples, 0.02%)</title><rect x="346.4" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="349.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (1 samples, 0.02%)</title><rect x="346.4" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.4" y="622.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.physicalTableNameForMutation (1 samples, 0.02%)</title><rect x="346.7" y="755.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.7" y="766.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicAttributeMapping.getContainingTableExpression (1 samples, 0.02%)</title><rect x="346.7" y="739.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.7" y="750.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.executor (5 samples, 0.12%)</title><rect x="346.9" y="851.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.9" y="862.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/StandardMutationExecutorService.createExecutor (4 samples, 0.10%)</title><rect x="347.2" y="835.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.2" y="846.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/MutationExecutorSingleNonBatched.&lt;init&gt; (2 samples, 0.05%)</title><rect x="347.5" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.5" y="830.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/AbstractSingleMutationExecutor.&lt;init&gt; (2 samples, 0.05%)</title><rect x="347.5" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.5" y="814.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="347.8" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.8" y="798.0"></text>
</g>
<g>
<title>org/hibernate/sql/model/PreparableMutationOperation.canBeBatched (1 samples, 0.02%)</title><rect x="348.1" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.1" y="830.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.preInsertInMemoryValueGeneration (3 samples, 0.07%)</title><rect x="348.4" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.4" y="878.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="348.7" y="851.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.7" y="862.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/AbstractMutationCoordinator.entityPersister (1 samples, 0.02%)</title><rect x="348.9" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.9" y="862.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.prepareActions (2 samples, 0.05%)</title><rect x="349.2" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.2" y="958.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.prepareActions (1 samples, 0.02%)</title><rect x="349.5" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.5" y="942.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.postFlush (3 samples, 0.07%)</title><rect x="349.8" y="963.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.8" y="974.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.02%)</title><rect x="350.4" y="947.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="353.4" y="958.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.checkTransactionNeededForUpdateOperation (1 samples, 0.02%)</title><rect x="350.7" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.7" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation (1 samples, 0.02%)</title><rect x="350.7" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.7" y="1006.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.cleanupAfterCompletion (10 samples, 0.24%)</title><rect x="351.0" y="1155.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.0" y="1166.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager.doCleanupAfterCompletion (5 samples, 0.12%)</title><rect x="351.5" y="1139.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.5" y="1150.0"></text>
</g>
<g>
<title>org/apache/commons/logging/LogAdapter$Slf4jLocationAwareLog.debug (1 samples, 0.02%)</title><rect x="351.5" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.5" y="1134.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.log (1 samples, 0.02%)</title><rect x="351.5" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.5" y="1118.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Level.fromLocationAwareLoggerInteger (1 samples, 0.02%)</title><rect x="351.5" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.5" y="1102.0"></text>
</g>
<g>
<title>org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.getConnectionHolder (1 samples, 0.02%)</title><rect x="351.8" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.8" y="1134.0"></text>
</g>
<g>
<title>org/springframework/util/Assert.state (1 samples, 0.02%)</title><rect x="351.8" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.8" y="1118.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/EntityManagerHolder.clear (1 samples, 0.02%)</title><rect x="352.1" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.1" y="1134.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/ResourceHolderSupport.clear (1 samples, 0.02%)</title><rect x="352.1" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.1" y="1118.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject.getEntityManagerHolder (1 samples, 0.02%)</title><rect x="352.4" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.4" y="1134.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager.getDataSource (1 samples, 0.02%)</title><rect x="352.7" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.7" y="1134.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/DefaultTransactionStatus.isNewSynchronization (1 samples, 0.02%)</title><rect x="353.0" y="1139.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.0" y="1150.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.clear (2 samples, 0.05%)</title><rect x="353.2" y="1139.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 0.05%)</title><rect x="353.2" y="1123.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (2 samples, 0.05%)</title><rect x="353.2" y="1107.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.expungeStaleEntry (2 samples, 0.05%)</title><rect x="353.2" y="1091.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.2" y="1102.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.triggerAfterCompletion (2 samples, 0.05%)</title><rect x="353.8" y="1155.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.8" y="1166.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.clearSynchronization (2 samples, 0.05%)</title><rect x="353.8" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="1150.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/DefaultTransactionStatus.isGlobalRollbackOnly (2 samples, 0.05%)</title><rect x="354.4" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.4" y="1166.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject.isRollbackOnly (2 samples, 0.05%)</title><rect x="354.4" y="1139.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.4" y="1150.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.getTransaction (2 samples, 0.05%)</title><rect x="354.4" y="1123.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.4" y="1134.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (2 samples, 0.05%)</title><rect x="354.4" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="354.4" y="1091.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.02%)</title><rect x="354.4" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.02%)</title><rect x="354.4" y="1059.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.refersTo0 (1 samples, 0.02%)</title><rect x="354.4" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="354.7" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor28.invoke (1 samples, 0.02%)</title><rect x="354.7" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.7" y="1070.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.createTransactionIfNecessary (32 samples, 0.78%)</title><rect x="355.0" y="1203.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.0" y="1214.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.prepareTransactionInfo (3 samples, 0.07%)</title><rect x="355.3" y="1187.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.3" y="1198.0"></text>
</g>
<g>
<title>org/apache/commons/logging/LogAdapter$Slf4jLog.isTraceEnabled (1 samples, 0.02%)</title><rect x="355.5" y="1171.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.5" y="1182.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.bindToThread (1 samples, 0.02%)</title><rect x="355.8" y="1171.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.8" y="1182.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.getTransaction (28 samples, 0.68%)</title><rect x="356.1" y="1187.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.1" y="1198.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager.doGetTransaction (1 samples, 0.02%)</title><rect x="356.1" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.1" y="1182.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.getResource (1 samples, 0.02%)</title><rect x="356.1" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.1" y="1166.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.doGetResource (1 samples, 0.02%)</title><rect x="356.1" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="356.1" y="1123.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="356.1" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.02%)</title><rect x="356.1" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.1" y="1102.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.startTransaction (27 samples, 0.66%)</title><rect x="356.4" y="1171.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.4" y="1182.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager.doBegin (27 samples, 0.66%)</title><rect x="356.4" y="1155.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.4" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="356.7" y="1139.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="359.7" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="356.7" y="1123.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="359.7" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="356.7" y="1107.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="359.7" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper_internal(methodHandle, frame const&amp;, CompiledMethod*, bool, bool, Handle, CallInfo&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="356.7" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="359.7" y="1102.0"></text>
</g>
<g>
<title>nmethod::call_wrapper_at(unsigned char*) const (1 samples, 0.02%)</title><rect x="356.7" y="1075.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="359.7" y="1086.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject.getEntityManagerHolder (1 samples, 0.02%)</title><rect x="357.0" y="1139.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.0" y="1150.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject.setTransactionData (1 samples, 0.02%)</title><rect x="357.3" y="1139.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.3" y="1150.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/vendor/HibernateJpaDialect.beginTransaction (17 samples, 0.41%)</title><rect x="357.5" y="1139.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.5" y="1150.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.getTransaction (6 samples, 0.15%)</title><rect x="357.5" y="1123.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.5" y="1134.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (6 samples, 0.15%)</title><rect x="357.5" y="1107.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="357.5" y="1091.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="357.5" y="1075.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor28.invoke (6 samples, 0.15%)</title><rect x="357.5" y="1059.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.5" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.getTransaction (6 samples, 0.15%)</title><rect x="357.5" y="1043.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.5" y="1054.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.accessTransaction (5 samples, 0.12%)</title><rect x="357.8" y="1027.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.8" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/engine/transaction/internal/TransactionImpl.&lt;init&gt; (5 samples, 0.12%)</title><rect x="357.8" y="1011.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.8" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.isOpen (2 samples, 0.05%)</title><rect x="358.1" y="995.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.1" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.checkTransactionSynchStatus (1 samples, 0.02%)</title><rect x="358.1" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.1" y="990.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.delayedAfterCompletion (1 samples, 0.02%)</title><rect x="358.1" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.1" y="974.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.getTransactionCoordinator (1 samples, 0.02%)</title><rect x="358.1" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.1" y="958.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.pulseTransactionCoordinator (1 samples, 0.02%)</title><rect x="358.1" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.1" y="942.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.isClosed (1 samples, 0.02%)</title><rect x="358.4" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="361.4" y="990.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl.isActive (2 samples, 0.05%)</title><rect x="358.7" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.7" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcCoordinatorImpl.isActive (2 samples, 0.05%)</title><rect x="358.7" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.7" y="990.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.getJdbcSessionContext (1 samples, 0.02%)</title><rect x="359.0" y="963.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.0" y="974.0"></text>
</g>
<g>
<title>org/hibernate/engine/transaction/internal/TransactionImpl.begin (5 samples, 0.12%)</title><rect x="359.3" y="1123.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="362.3" y="1134.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin (5 samples, 0.12%)</title><rect x="359.3" y="1107.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.3" y="1118.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.begin (4 samples, 0.10%)</title><rect x="359.3" y="1091.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.3" y="1102.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor.determineInitialAutoCommitMode (2 samples, 0.05%)</title><rect x="359.6" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.6" y="1086.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyConnection.getAutoCommit (1 samples, 0.02%)</title><rect x="359.8" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.8" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.doConnectionsFromProviderHaveAutoCommitDisabled (1 samples, 0.02%)</title><rect x="360.1" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.1" y="1086.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback (1 samples, 0.02%)</title><rect x="360.4" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.4" y="1102.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcCoordinatorImpl.afterTransactionBegin (1 samples, 0.02%)</title><rect x="360.4" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.4" y="1086.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.afterTransactionBegin (1 samples, 0.02%)</title><rect x="360.4" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.4" y="1070.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="360.4" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.4" y="1054.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/vendor/HibernateJpaDialect.getSession (6 samples, 0.15%)</title><rect x="360.7" y="1123.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.7" y="1134.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.unwrap (6 samples, 0.15%)</title><rect x="360.7" y="1107.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.7" y="1118.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (6 samples, 0.15%)</title><rect x="360.7" y="1091.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="361.3" y="1075.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="361.3" y="1059.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor26.invoke (3 samples, 0.07%)</title><rect x="361.3" y="1043.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.3" y="1054.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.unwrap (3 samples, 0.07%)</title><rect x="361.3" y="1027.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.3" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="361.3" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="364.3" y="1022.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="361.3" y="995.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="364.3" y="1006.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="361.3" y="979.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="364.3" y="990.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (2 samples, 0.05%)</title><rect x="361.6" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="364.6" y="1022.0"></text>
</g>
<g>
<title>jni_IsAssignableFrom (1 samples, 0.02%)</title><rect x="361.6" y="995.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="364.6" y="1006.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (1 samples, 0.02%)</title><rect x="361.8" y="995.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="364.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.02%)</title><rect x="362.1" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.1" y="1070.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.02%)</title><rect x="362.1" y="1043.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="365.1" y="1054.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (1 samples, 0.02%)</title><rect x="362.1" y="1027.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="365.1" y="1038.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="362.1" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="365.1" y="1022.0"></text>
</g>
<g>
<title>VMError::is_error_reported() (1 samples, 0.02%)</title><rect x="362.1" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="365.1" y="1006.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/vendor/HibernateJpaDialect.getJdbcConnection (5 samples, 0.12%)</title><rect x="362.4" y="1139.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.4" y="1150.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/vendor/HibernateJpaDialect.getSession (5 samples, 0.12%)</title><rect x="362.4" y="1123.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.4" y="1134.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.unwrap (4 samples, 0.10%)</title><rect x="362.7" y="1107.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.7" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (2 samples, 0.05%)</title><rect x="363.0" y="1091.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="366.0" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, JavaThread*) (1 samples, 0.02%)</title><rect x="363.0" y="1075.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="366.0" y="1086.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass(int, JavaThread*) (1 samples, 0.02%)</title><rect x="363.0" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="366.0" y="1070.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass(int, JavaThread*) (1 samples, 0.02%)</title><rect x="363.3" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="366.3" y="1086.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (1 samples, 0.02%)</title><rect x="363.6" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="363.6" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="363.6" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.6" y="1070.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="363.6" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.6" y="1054.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.bindResource (1 samples, 0.02%)</title><rect x="363.9" y="1139.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="366.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="363.9" y="1123.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="363.9" y="1107.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="366.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.02%)</title><rect x="363.9" y="1091.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.refersTo (1 samples, 0.02%)</title><rect x="363.9" y="1075.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.refersToImpl (1 samples, 0.02%)</title><rect x="363.9" y="1059.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.9" y="1070.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.determineTransactionManager (4 samples, 0.10%)</title><rect x="364.1" y="1203.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.1" y="1214.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.determineQualifiedTransactionManager (1 samples, 0.02%)</title><rect x="364.4" y="1187.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.4" y="1198.0"></text>
</g>
<g>
<title>org/springframework/beans/factory/annotation/BeanFactoryAnnotationUtils.qualifiedBeanOfType (1 samples, 0.02%)</title><rect x="364.4" y="1171.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.4" y="1182.0"></text>
</g>
<g>
<title>org/springframework/beans/factory/annotation/BeanFactoryAnnotationUtils.qualifiedBeanOfType (1 samples, 0.02%)</title><rect x="364.4" y="1155.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.4" y="1166.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="364.4" y="1139.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="367.4" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 0.02%)</title><rect x="364.4" y="1123.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="367.4" y="1134.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="364.4" y="1107.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="367.4" y="1118.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="364.4" y="1091.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="367.4" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="364.4" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="367.4" y="1086.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(JavaThread*) (1 samples, 0.02%)</title><rect x="364.4" y="1059.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="367.4" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::find_method_handle_type(Symbol*, Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="364.4" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="367.4" y="1054.0"></text>
</g>
<g>
<title>SignatureStream::as_java_mirror(Handle, Handle, SignatureStream::FailureMode, JavaThread*) (1 samples, 0.02%)</title><rect x="364.4" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="367.4" y="1038.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.02%)</title><rect x="364.4" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="367.4" y="1022.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.02%)</title><rect x="364.4" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="367.4" y="1006.0"></text>
</g>
<g>
<title>SymbolTable::lookup_shared(char const*, int, unsigned int) (1 samples, 0.02%)</title><rect x="364.4" y="979.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="367.4" y="990.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.hasText (2 samples, 0.05%)</title><rect x="364.7" y="1187.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.isBlank (2 samples, 0.05%)</title><rect x="364.7" y="1171.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOfNonWhitespace (1 samples, 0.02%)</title><rect x="364.7" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (1 samples, 0.02%)</title><rect x="364.7" y="1139.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="365.0" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.0" y="1166.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionInterceptor$1.proceedWithInvocation (102 samples, 2.48%)</title><rect x="365.3" y="1203.0" width="29.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.3" y="1214.0">or..</text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (102 samples, 2.48%)</title><rect x="365.3" y="1187.0" width="29.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.3" y="1198.0">or..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutorMethodInterceptor.invoke (102 samples, 2.48%)</title><rect x="365.3" y="1171.0" width="29.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.3" y="1182.0">or..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutionResultHandler.postProcessInvocationResult (1 samples, 0.02%)</title><rect x="365.3" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.3" y="1166.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutionResultHandler.processingRequired (1 samples, 0.02%)</title><rect x="365.3" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.3" y="1150.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutorMethodInterceptor.doInvoke (101 samples, 2.45%)</title><rect x="365.6" y="1155.0" width="28.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.6" y="1166.0">or..</text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (101 samples, 2.45%)</title><rect x="365.6" y="1139.0" width="28.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.6" y="1150.0">or..</text>
</g>
<g>
<title>Interpreter (1 samples, 0.02%)</title><rect x="365.6" y="1123.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="368.6" y="1134.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke (100 samples, 2.43%)</title><rect x="365.9" y="1123.0" width="28.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.9" y="1134.0">or..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryComposition.invoke (100 samples, 2.43%)</title><rect x="365.9" y="1107.0" width="28.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.9" y="1118.0">or..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.invoke (98 samples, 2.38%)</title><rect x="366.4" y="1091.0" width="28.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.4" y="1102.0">or..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.invoke (98 samples, 2.38%)</title><rect x="366.4" y="1075.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.4" y="1086.0">or..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.doInvoke (98 samples, 2.38%)</title><rect x="366.4" y="1059.0" width="28.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.4" y="1070.0">or..</text>
</g>
<g>
<title>java/lang/Object.getClass (1 samples, 0.02%)</title><rect x="367.3" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.3" y="1054.0"></text>
</g>
<g>
<title>jni_GetObjectClass (1 samples, 0.02%)</title><rect x="367.3" y="1027.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="370.3" y="1038.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryFragmentMethodInvoker$$Lambda$1949.0x00007f9a5ca3ca20.invoke (91 samples, 2.21%)</title><rect x="367.6" y="1043.0" width="26.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.6" y="1054.0">o..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0 (91 samples, 2.21%)</title><rect x="367.6" y="1027.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.6" y="1038.0">o..</text>
</g>
<g>
<title>org/springframework/aop/support/AopUtils.invokeJoinpointUsingReflection (91 samples, 2.21%)</title><rect x="367.6" y="1011.0" width="26.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.6" y="1022.0">o..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (90 samples, 2.19%)</title><rect x="367.9" y="995.0" width="25.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.9" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (87 samples, 2.11%)</title><rect x="367.9" y="979.0" width="24.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.9" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (87 samples, 2.11%)</title><rect x="367.9" y="963.0" width="24.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.9" y="974.0">j..</text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/SimpleJpaRepository.save (87 samples, 2.11%)</title><rect x="367.9" y="947.0" width="24.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.9" y="958.0">o..</text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.persist (77 samples, 1.87%)</title><rect x="367.9" y="931.0" width="22.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.9" y="942.0">j..</text>
</g>
<g>
<title>org/springframework/orm/jpa/SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke (77 samples, 1.87%)</title><rect x="367.9" y="915.0" width="22.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.9" y="926.0">o..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (75 samples, 1.82%)</title><rect x="368.4" y="899.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.4" y="910.0">j..</text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.02%)</title><rect x="368.4" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.4" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.02%)</title><rect x="368.4" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.4" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.02%)</title><rect x="368.4" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.02%)</title><rect x="368.4" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getClassAccessFlags (1 samples, 0.02%)</title><rect x="368.4" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="371.4" y="830.0"></text>
</g>
<g>
<title>Java_jdk_internal_reflect_Reflection_getClassAccessFlags (1 samples, 0.02%)</title><rect x="368.4" y="803.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="371.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (74 samples, 1.80%)</title><rect x="368.7" y="883.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.7" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor27.invoke (74 samples, 1.80%)</title><rect x="368.7" y="867.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.7" y="878.0">j..</text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.persist (74 samples, 1.80%)</title><rect x="368.7" y="851.0" width="21.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.7" y="862.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.02%)</title><rect x="368.7" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="371.7" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, JavaThread*) (1 samples, 0.02%)</title><rect x="368.7" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="371.7" y="830.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (73 samples, 1.77%)</title><rect x="369.0" y="835.0" width="21.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.0" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (73 samples, 1.77%)</title><rect x="369.0" y="819.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (73 samples, 1.77%)</title><rect x="369.0" y="803.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor27.invoke (73 samples, 1.77%)</title><rect x="369.0" y="787.0" width="21.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.0" y="798.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.persist (73 samples, 1.77%)</title><rect x="369.0" y="771.0" width="21.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.0" y="782.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.firePersist (72 samples, 1.75%)</title><rect x="369.3" y="755.0" width="20.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.3" y="766.0"></text>
</g>
<g>
<title>org/hibernate/event/service/internal/EventListenerGroupImpl.fireEventOnEachListener (67 samples, 1.63%)</title><rect x="369.6" y="739.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.6" y="750.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl$$Lambda$1953.0x00007f9a5ca40888.accept (67 samples, 1.63%)</title><rect x="369.6" y="723.0" width="19.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.6" y="734.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.onPersist (67 samples, 1.63%)</title><rect x="369.6" y="707.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.6" y="718.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.onPersist (67 samples, 1.63%)</title><rect x="369.6" y="691.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.6" y="702.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.persist (67 samples, 1.63%)</title><rect x="369.6" y="675.0" width="19.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.6" y="686.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.entityIsTransient (59 samples, 1.43%)</title><rect x="369.6" y="659.0" width="16.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.6" y="670.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.saveWithGeneratedId (54 samples, 1.31%)</title><rect x="370.7" y="643.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.7" y="654.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.generateId (8 samples, 0.19%)</title><rect x="371.3" y="627.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.3" y="638.0"></text>
</g>
<g>
<title>org/hibernate/id/IdentifierGenerator.generate (8 samples, 0.19%)</title><rect x="371.3" y="611.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.3" y="622.0"></text>
</g>
<g>
<title>org/hibernate/id/enhanced/SequenceStyleGenerator.generate (8 samples, 0.19%)</title><rect x="371.3" y="595.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.3" y="606.0"></text>
</g>
<g>
<title>org/hibernate/id/enhanced/PooledOptimizer.generate (6 samples, 0.15%)</title><rect x="371.3" y="579.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="371.3" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.lock (1 samples, 0.02%)</title><rect x="371.3" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="371.3" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="371.3" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="371.3" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="371.3" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="371.3" y="467.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="374.3" y="478.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="371.3" y="451.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="374.3" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="371.3" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.3" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="371.3" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.3" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="371.3" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.3" y="414.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="371.3" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.3" y="398.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="371.3" y="371.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="374.3" y="382.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="371.3" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="374.3" y="366.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="371.3" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="374.3" y="350.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="371.3" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="371.6" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="371.6" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (1 samples, 0.02%)</title><rect x="371.6" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="371.6" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="371.6" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.6" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="371.6" y="483.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="374.6" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="371.6" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="374.6" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="371.6" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="374.6" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="371.6" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="374.6" y="446.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="371.6" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.6" y="430.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="371.6" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="374.6" y="414.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="371.6" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="374.6" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="371.6" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="374.6" y="382.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="371.6" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="374.6" y="366.0"></text>
</g>
<g>
<title>org/hibernate/id/IdentifierGeneratorHelper$BasicHolder.gt (2 samples, 0.05%)</title><rect x="371.9" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.9" y="574.0"></text>
</g>
<g>
<title>org/hibernate/id/IdentifierGeneratorHelper$BasicHolder.gt (1 samples, 0.02%)</title><rect x="372.2" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.2" y="558.0"></text>
</g>
<g>
<title>org/hibernate/id/enhanced/SequenceStructure$1.getNextValue (2 samples, 0.05%)</title><rect x="372.5" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.5" y="574.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/ResultSetReturnImpl.extract (2 samples, 0.05%)</title><rect x="372.5" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.5" y="558.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.executeQuery (1 samples, 0.02%)</title><rect x="372.5" y="531.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.5" y="542.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyPreparedStatement.executeQuery (1 samples, 0.02%)</title><rect x="372.5" y="515.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.5" y="526.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.executeQuery (1 samples, 0.02%)</title><rect x="372.5" y="499.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="375.5" y="510.0"></text>
</g>
<g>
<title>org/h2/command/Command.executeQuery (1 samples, 0.02%)</title><rect x="372.5" y="483.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.5" y="494.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.query (1 samples, 0.02%)</title><rect x="372.5" y="467.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.5" y="478.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.query (1 samples, 0.02%)</title><rect x="372.5" y="451.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.5" y="462.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.query (1 samples, 0.02%)</title><rect x="372.5" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="375.5" y="446.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.queryWithoutCacheLazyCheck (1 samples, 0.02%)</title><rect x="372.5" y="419.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.5" y="430.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.queryWithoutCache (1 samples, 0.02%)</title><rect x="372.5" y="403.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.5" y="414.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.queryFlat (1 samples, 0.02%)</title><rect x="372.5" y="387.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.5" y="398.0"></text>
</g>
<g>
<title>org/h2/result/FetchedResult.next (1 samples, 0.02%)</title><rect x="372.5" y="371.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.5" y="382.0"></text>
</g>
<g>
<title>org/h2/result/LazyResult.hasNext (1 samples, 0.02%)</title><rect x="372.5" y="355.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.5" y="366.0"></text>
</g>
<g>
<title>org/h2/command/query/Select$LazyResultQueryFlat.fetchNextRow (1 samples, 0.02%)</title><rect x="372.5" y="339.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.5" y="350.0"></text>
</g>
<g>
<title>org/h2/table/TableFilter.next (1 samples, 0.02%)</title><rect x="372.5" y="323.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.5" y="334.0"></text>
</g>
<g>
<title>org/h2/index/IndexCursor.find (1 samples, 0.02%)</title><rect x="372.5" y="307.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.5" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.02%)</title><rect x="372.5" y="291.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="375.5" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*) (1 samples, 0.02%)</title><rect x="372.5" y="275.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="375.5" y="286.0"></text>
</g>
<g>
<title>JvmtiDynamicCodeEventCollector::~JvmtiDynamicCodeEventCollector() (1 samples, 0.02%)</title><rect x="372.5" y="259.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="375.5" y="270.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/ResultSetReturnImpl.postExtract (1 samples, 0.02%)</title><rect x="372.7" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.7" y="542.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.register (1 samples, 0.02%)</title><rect x="372.7" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="372.7" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="372.7" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.7" y="494.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="372.7" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.7" y="478.0"></text>
</g>
<g>
<title>org/hibernate/id/enhanced/SequenceStructure.buildCallback (2 samples, 0.05%)</title><rect x="373.0" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.0" y="590.0"></text>
</g>
<g>
<title>org/hibernate/id/enhanced/SequenceStructure$1.&lt;init&gt; (2 samples, 0.05%)</title><rect x="373.0" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.0" y="574.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.performSave (39 samples, 0.95%)</title><rect x="373.6" y="627.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.6" y="638.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.entityKey (3 samples, 0.07%)</title><rect x="374.5" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.5" y="622.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.generateEntityKey (3 samples, 0.07%)</title><rect x="374.5" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.5" y="606.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/EntityKey.&lt;init&gt; (2 samples, 0.05%)</title><rect x="374.8" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.8" y="590.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/EntityKey.generateHashCode (1 samples, 0.02%)</title><rect x="375.0" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.0" y="574.0"></text>
</g>
<g>
<title>org/hibernate/type/AbstractStandardBasicType.getHashCode (1 samples, 0.02%)</title><rect x="375.0" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.0" y="558.0"></text>
</g>
<g>
<title>org/hibernate/type/AbstractStandardBasicType.getHashCode (1 samples, 0.02%)</title><rect x="375.0" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="378.0" y="542.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.performSaveOrReplicate (32 samples, 0.78%)</title><rect x="375.3" y="611.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.3" y="622.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.addEntry (2 samples, 0.05%)</title><rect x="375.6" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.6" y="606.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext.addEntityEntry (1 samples, 0.02%)</title><rect x="375.9" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.9" y="590.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/EntityEntryContext$ManagedEntityImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="375.9" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.9" y="574.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/EntityKey.getIdentifier (1 samples, 0.02%)</title><rect x="376.2" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.2" y="606.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.addInsertAction (21 samples, 0.51%)</title><rect x="376.5" y="595.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.5" y="606.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityInsertAction.&lt;init&gt; (4 samples, 0.10%)</title><rect x="376.5" y="579.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.5" y="590.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="376.8" y="563.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="379.8" y="574.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="376.8" y="547.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="379.8" y="558.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="376.8" y="531.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="379.8" y="542.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="376.8" y="515.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="379.8" y="526.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;CallPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="376.8" y="499.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="379.8" y="510.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/AbstractEntityInsertAction.&lt;init&gt; (2 samples, 0.05%)</title><rect x="377.0" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.0" y="574.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityAction.&lt;init&gt; (1 samples, 0.02%)</title><rect x="377.3" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.3" y="558.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.addAction (17 samples, 0.41%)</title><rect x="377.6" y="579.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.6" y="590.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityAction.getEntityName (1 samples, 0.02%)</title><rect x="377.9" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.9" y="574.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.addInsertAction (15 samples, 0.36%)</title><rect x="378.2" y="563.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.2" y="574.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/AbstractEntityInsertAction.findNonNullableTransientEntities (3 samples, 0.07%)</title><rect x="378.2" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.2" y="558.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/ForeignKeys.findNonNullableTransientEntities (2 samples, 0.05%)</title><rect x="378.5" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.5" y="542.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.getEntityPersister (1 samples, 0.02%)</title><rect x="378.8" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.8" y="526.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/MappingMetamodelImpl.getEntityDescriptor (1 samples, 0.02%)</title><rect x="378.8" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.8" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.addResolvedEntityInsertAction (12 samples, 0.29%)</title><rect x="379.1" y="547.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.1" y="558.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/AbstractEntityInsertAction.makeEntityManaged (12 samples, 0.29%)</title><rect x="379.1" y="531.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.1" y="542.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/AbstractEntityInsertAction.nullifyTransientReferencesIfNotAlready (6 samples, 0.15%)</title><rect x="379.3" y="515.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.3" y="526.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/ForeignKeys$Nullifier.nullifyTransientReferences (2 samples, 0.05%)</title><rect x="379.6" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.6" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/Nullability.checkNullability (3 samples, 0.07%)</title><rect x="380.2" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.2" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/Nullability.checkNullability (3 samples, 0.07%)</title><rect x="380.2" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.2" y="494.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/Nullability.checkSubElementsNullability (1 samples, 0.02%)</title><rect x="380.8" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.8" y="478.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityInsertAction.getEntityKey (1 samples, 0.02%)</title><rect x="381.1" y="515.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.1" y="526.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.generateEntityKey (1 samples, 0.02%)</title><rect x="381.1" y="499.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.1" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/EntityKey.&lt;init&gt; (1 samples, 0.02%)</title><rect x="381.1" y="483.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.1" y="494.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/EntityKey.generateHashCode (1 samples, 0.02%)</title><rect x="381.1" y="467.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.1" y="478.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.getIdentifierType (1 samples, 0.02%)</title><rect x="381.1" y="451.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.1" y="462.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.addEntity (4 samples, 0.10%)</title><rect x="381.3" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.3" y="526.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.addEntity (3 samples, 0.07%)</title><rect x="381.3" y="499.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.3" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext$EntityHolderImpl.forEntity (1 samples, 0.02%)</title><rect x="381.6" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.6" y="494.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext$EntityHolderImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="381.6" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.6" y="478.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.getOrInitializeEntitiesByKey (1 samples, 0.02%)</title><rect x="381.9" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.9" y="494.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/CollectionHelper.mapOfSize (1 samples, 0.02%)</title><rect x="381.9" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.9" y="478.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/CollectionHelper.determineProperSizing (1 samples, 0.02%)</title><rect x="381.9" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.9" y="462.0"></text>
</g>
<g>
<title>java/lang/Math.max (1 samples, 0.02%)</title><rect x="381.9" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.9" y="446.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.addEntry (1 samples, 0.02%)</title><rect x="382.2" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.2" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/MutableEntityEntryFactory.createEntityEntry (1 samples, 0.02%)</title><rect x="382.2" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.2" y="494.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/MutableEntityEntry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="382.2" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.2" y="478.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/AbstractEntityEntry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="382.2" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.2" y="462.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/AbstractEntityEntry.setCompressedValue (1 samples, 0.02%)</title><rect x="382.2" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.2" y="446.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.cascadeBeforeSave (3 samples, 0.07%)</title><rect x="382.5" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.5" y="606.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/Cascade.cascade (1 samples, 0.02%)</title><rect x="382.8" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="383.1" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="386.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="383.1" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="386.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="383.1" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="386.1" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="383.1" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="386.1" y="542.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="383.1" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="386.1" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="383.1" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="386.1" y="510.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.cloneAndSubstituteValues (3 samples, 0.07%)</title><rect x="383.4" y="595.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.4" y="606.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.getPropertyValuesToInsert (3 samples, 0.07%)</title><rect x="383.4" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.4" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="383.4" y="563.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="386.4" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="383.4" y="547.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="386.4" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="383.4" y="531.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="386.4" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper_internal(methodHandle, frame const&amp;, CompiledMethod*, bool, bool, Handle, CallInfo&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="383.4" y="515.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="386.4" y="526.0"></text>
</g>
<g>
<title>CompiledIC::set_to_monomorphic(CompiledICInfo&amp;) (1 samples, 0.02%)</title><rect x="383.4" y="499.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="386.4" y="510.0"></text>
</g>
<g>
<title>CompiledIC::internal_set_ic_destination(unsigned char*, bool, void*, bool) (1 samples, 0.02%)</title><rect x="383.4" y="483.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="386.4" y="494.0"></text>
</g>
<g>
<title>CompiledIC::is_icholder_entry(unsigned char*) (1 samples, 0.02%)</title><rect x="383.4" y="467.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="386.4" y="478.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/AbstractSingularAttributeMapping.getPropertyAccess (1 samples, 0.02%)</title><rect x="383.6" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.6" y="574.0"></text>
</g>
<g>
<title>org/hibernate/property/access/spi/GetterFieldImpl.getForInsert (1 samples, 0.02%)</title><rect x="383.9" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.9" y="574.0"></text>
</g>
<g>
<title>org/hibernate/property/access/spi/GetterFieldImpl.get (1 samples, 0.02%)</title><rect x="383.9" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.9" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.get (1 samples, 0.02%)</title><rect x="383.9" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeObjectFieldAccessorImpl.get (1 samples, 0.02%)</title><rect x="383.9" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeFieldAccessorImpl.ensureObj (1 samples, 0.02%)</title><rect x="383.9" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.02%)</title><rect x="383.9" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.9" y="494.0"></text>
</g>
<g>
<title>jni_IsAssignableFrom (1 samples, 0.02%)</title><rect x="383.9" y="467.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="386.9" y="478.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.handleGeneratedId (1 samples, 0.02%)</title><rect x="384.2" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.2" y="606.0"></text>
</g>
<g>
<title>org/hibernate/jpa/event/internal/CallbackRegistryImpl.preCreate (1 samples, 0.02%)</title><rect x="384.5" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.5" y="622.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.setIdentifier (5 samples, 0.12%)</title><rect x="384.8" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.8" y="638.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl.setIdentifier (5 samples, 0.12%)</title><rect x="384.8" y="611.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.8" y="622.0"></text>
</g>
<g>
<title>org/hibernate/property/access/spi/SetterFieldImpl.set (3 samples, 0.07%)</title><rect x="385.4" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.4" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (3 samples, 0.07%)</title><rect x="385.4" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeLongFieldAccessorImpl.set (2 samples, 0.05%)</title><rect x="385.7" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putLong (1 samples, 0.02%)</title><rect x="385.9" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.9" y="558.0"></text>
</g>
<g>
<title>Unsafe_PutLong (1 samples, 0.02%)</title><rect x="385.9" y="531.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="388.9" y="542.0"></text>
</g>
<g>
<title>org/jboss/logging/DelegatingBasicLogger.trace (1 samples, 0.02%)</title><rect x="386.2" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.2" y="654.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.trace (1 samples, 0.02%)</title><rect x="386.2" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.2" y="638.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.doLog (1 samples, 0.02%)</title><rect x="386.2" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.2" y="622.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.isEnabled (1 samples, 0.02%)</title><rect x="386.2" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.2" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="386.2" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.2" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="386.2" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.2" y="574.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.entityName (4 samples, 0.10%)</title><rect x="386.5" y="659.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.5" y="670.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.bestGuessEntityName (3 samples, 0.07%)</title><rect x="386.8" y="643.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.8" y="654.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.guessEntityName (2 samples, 0.05%)</title><rect x="386.8" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.8" y="638.0"></text>
</g>
<g>
<title>org/hibernate/internal/CoordinatingEntityNameResolver.resolveEntityName (2 samples, 0.05%)</title><rect x="386.8" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.8" y="622.0"></text>
</g>
<g>
<title>org/hibernate/boot/internal/SessionFactoryOptionsBuilder.getEntityNameResolvers (2 samples, 0.05%)</title><rect x="386.8" y="595.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.8" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.02%)</title><rect x="387.1" y="579.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="390.1" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, JavaThread*) (1 samples, 0.02%)</title><rect x="387.1" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="390.1" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWordImpl**) const (1 samples, 0.02%)</title><rect x="387.1" y="547.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="390.1" y="558.0"></text>
</g>
<g>
<title>org/hibernate/proxy/HibernateProxy.extractLazyInitializer (1 samples, 0.02%)</title><rect x="387.4" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.4" y="638.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.entityState (4 samples, 0.10%)</title><rect x="387.7" y="659.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.7" y="670.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/EntityState.getEntityState (4 samples, 0.10%)</title><rect x="387.7" y="643.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.7" y="654.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/ForeignKeys.isTransient (3 samples, 0.07%)</title><rect x="387.9" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.9" y="638.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.getEntityPersister (2 samples, 0.05%)</title><rect x="388.2" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.2" y="622.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.getSubclassEntityPersister (1 samples, 0.02%)</title><rect x="388.5" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.5" y="606.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.checkNoUnresolvedActionsAfterOperation (2 samples, 0.05%)</title><rect x="388.8" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.8" y="750.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.delayedAfterCompletion (1 samples, 0.02%)</title><rect x="389.1" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.1" y="734.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.checkNoUnresolvedActionsBeforeOperation (2 samples, 0.05%)</title><rect x="389.4" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.4" y="750.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation.isNew (10 samples, 0.24%)</title><rect x="390.0" y="931.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.0" y="942.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/AbstractEntityInformation.isNew (10 samples, 0.24%)</title><rect x="390.0" y="915.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.0" y="926.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/JpaMetamodelEntityInformation.getId (9 samples, 0.22%)</title><rect x="390.2" y="899.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.2" y="910.0"></text>
</g>
<g>
<title>org/hibernate/jpa/internal/PersistenceUnitUtilImpl.getIdentifier (6 samples, 0.15%)</title><rect x="390.8" y="883.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.8" y="894.0"></text>
</g>
<g>
<title>org/hibernate/jpa/internal/PersistenceUnitUtilImpl.getIdentifierFromPersister (3 samples, 0.07%)</title><rect x="391.7" y="867.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.7" y="878.0"></text>
</g>
<g>
<title>org/hibernate/Hibernate.getClass (2 samples, 0.05%)</title><rect x="392.0" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.0" y="862.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/provider/PersistenceProvider.fromMetamodel (1 samples, 0.02%)</title><rect x="392.5" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (3 samples, 0.07%)</title><rect x="392.8" y="979.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.8" y="990.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (3 samples, 0.07%)</title><rect x="392.8" y="963.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="395.8" y="974.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="392.8" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="395.8" y="958.0"></text>
</g>
<g>
<title>Method::validate_bci_from_bcp(unsigned char*) const (1 samples, 0.02%)</title><rect x="393.1" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="396.1" y="958.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool, bool) (1 samples, 0.02%)</title><rect x="393.4" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="396.4" y="958.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="393.4" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="396.4" y="942.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="393.4" y="915.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="396.4" y="926.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.computeInvocationResult (2 samples, 0.05%)</title><rect x="393.7" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.7" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryMethodInvocationCaptor.getDuration (1 samples, 0.02%)</title><rect x="394.0" y="1027.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.0" y="1038.0"></text>
</g>
<g>
<title>org/springframework/data/util/ReactiveWrappers.supports (1 samples, 0.02%)</title><rect x="394.3" y="1043.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.3" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/util/ReactiveWrappers.isAvailable (1 samples, 0.02%)</title><rect x="394.3" y="1027.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.3" y="1038.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.bindResource (1 samples, 0.02%)</title><rect x="394.5" y="1283.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.5" y="1294.0"></text>
</g>
<g>
<title>org/springframework/aop/support/AopUtils.isEqualsMethod (2 samples, 0.05%)</title><rect x="394.8" y="1347.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.8" y="1358.0"></text>
</g>
<g>
<title>org/springframework/util/ReflectionUtils.isEqualsMethod (2 samples, 0.05%)</title><rect x="394.8" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.8" y="1342.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/service/Md5Hasher.hash (8 samples, 0.19%)</title><rect x="395.4" y="1379.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.02%)</title><rect x="395.7" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="396.0" y="1363.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.0" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="396.0" y="1347.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.0" y="1358.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (3 samples, 0.07%)</title><rect x="396.3" y="1363.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.3" y="1374.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (3 samples, 0.07%)</title><rect x="396.3" y="1347.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.3" y="1358.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (3 samples, 0.07%)</title><rect x="396.3" y="1331.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.3" y="1342.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (3 samples, 0.07%)</title><rect x="396.3" y="1315.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.3" y="1326.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (3 samples, 0.07%)</title><rect x="396.3" y="1299.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.3" y="1310.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implDigest (3 samples, 0.07%)</title><rect x="396.3" y="1283.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.3" y="1294.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bLittle (1 samples, 0.02%)</title><rect x="396.3" y="1267.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.3" y="1278.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implCompress (2 samples, 0.05%)</title><rect x="396.5" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.5" y="1278.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implCompress0 (2 samples, 0.05%)</title><rect x="396.5" y="1251.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.5" y="1262.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.FF (1 samples, 0.02%)</title><rect x="396.8" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.8" y="1246.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (2 samples, 0.05%)</title><rect x="397.1" y="1363.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.1" y="1374.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (2 samples, 0.05%)</title><rect x="397.1" y="1347.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.1" y="1358.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (1 samples, 0.02%)</title><rect x="397.1" y="1331.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.1" y="1342.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (1 samples, 0.02%)</title><rect x="397.1" y="1315.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.1" y="1326.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstanceUtil (1 samples, 0.02%)</title><rect x="397.1" y="1299.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.1" y="1310.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstanceOf (1 samples, 0.02%)</title><rect x="397.1" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.02%)</title><rect x="397.1" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (1 samples, 0.02%)</title><rect x="397.1" y="1251.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.02%)</title><rect x="397.1" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor40.newInstance (1 samples, 0.02%)</title><rect x="397.1" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.1" y="1230.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (1 samples, 0.02%)</title><rect x="397.4" y="1331.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.4" y="1342.0"></text>
</g>
<g>
<title>java/security/Provider.getService (1 samples, 0.02%)</title><rect x="397.4" y="1315.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.4" y="1326.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (18 samples, 0.44%)</title><rect x="397.7" y="1443.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.7" y="1454.0"></text>
</g>
<g>
<title>java/security/SecureRandom.nextBytes (18 samples, 0.44%)</title><rect x="397.7" y="1427.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.7" y="1438.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG.engineNextBytes (18 samples, 0.44%)</title><rect x="397.7" y="1411.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.7" y="1422.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.implNextBytes (18 samples, 0.44%)</title><rect x="397.7" y="1395.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.7" y="1406.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.ensureBufferValid (1 samples, 0.02%)</title><rect x="397.7" y="1379.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="400.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/System.currentTimeMillis (1 samples, 0.02%)</title><rect x="397.7" y="1363.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.7" y="1374.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.engineNextBytes (17 samples, 0.41%)</title><rect x="398.0" y="1379.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.0" y="1390.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (10 samples, 0.24%)</title><rect x="398.3" y="1363.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.3" y="1374.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (10 samples, 0.24%)</title><rect x="398.3" y="1347.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.3" y="1358.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (10 samples, 0.24%)</title><rect x="398.3" y="1331.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.3" y="1342.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (10 samples, 0.24%)</title><rect x="398.3" y="1315.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="401.3" y="1326.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="398.3" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.3" y="1310.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implDigest (9 samples, 0.22%)</title><rect x="398.6" y="1299.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.6" y="1310.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="398.6" y="1283.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.6" y="1294.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig4 (1 samples, 0.02%)</title><rect x="398.8" y="1283.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_V (1 samples, 0.02%)</title><rect x="398.8" y="1267.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.8" y="1278.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompress (7 samples, 0.17%)</title><rect x="399.1" y="1283.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.1" y="1294.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompress0 (6 samples, 0.15%)</title><rect x="399.1" y="1267.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.1" y="1278.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (2 samples, 0.05%)</title><rect x="400.3" y="1251.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_I (1 samples, 0.02%)</title><rect x="400.6" y="1235.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="403.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.02%)</title><rect x="400.6" y="1219.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleByteArrayAsInts$ArrayHandle.get (1 samples, 0.02%)</title><rect x="400.6" y="1203.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.6" y="1214.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompressCheck (1 samples, 0.02%)</title><rect x="400.8" y="1267.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.8" y="1278.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (4 samples, 0.10%)</title><rect x="401.1" y="1363.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.1" y="1374.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineUpdate (4 samples, 0.10%)</title><rect x="401.1" y="1347.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.1" y="1358.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (4 samples, 0.10%)</title><rect x="401.1" y="1331.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.1" y="1342.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.02%)</title><rect x="401.4" y="1315.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.4" y="1326.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineReset (2 samples, 0.05%)</title><rect x="401.7" y="1315.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.7" y="1326.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="401.7" y="1299.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.7" y="1310.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.02%)</title><rect x="402.0" y="1299.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.0" y="1310.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.updateState (2 samples, 0.05%)</title><rect x="402.3" y="1363.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.3" y="1374.0"></text>
</g>
<g>
<title>java/util/UUID.toString (2 samples, 0.05%)</title><rect x="402.9" y="1443.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/System$2.fastUUID (1 samples, 0.02%)</title><rect x="403.1" y="1427.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/Long.fastUUID (1 samples, 0.02%)</title><rect x="403.1" y="1411.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.1" y="1422.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy116.findByUserNameAndPassword (1,006 samples, 24.45%)</title><rect x="403.4" y="1443.0" width="288.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.4" y="1454.0">jdk/proxy2/$Proxy116.findByUserNameAndP..</text>
</g>
<g>
<title>org/springframework/aop/framework/JdkDynamicAopProxy.invoke (1,006 samples, 24.45%)</title><rect x="403.4" y="1427.0" width="288.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.4" y="1438.0">org/springframework/aop/framework/JdkDy..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="404.0" y="1411.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.0" y="1422.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (1,002 samples, 24.35%)</title><rect x="404.3" y="1411.0" width="287.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.3" y="1422.0">org/springframework/aop/framework/Refle..</text>
</g>
<g>
<title>org/springframework/aop/interceptor/ExposeInvocationInterceptor.invoke (1,002 samples, 24.35%)</title><rect x="404.3" y="1395.0" width="287.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.3" y="1406.0">org/springframework/aop/interceptor/Exp..</text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="404.6" y="1379.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.6" y="1390.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.02%)</title><rect x="404.6" y="1363.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.6" y="1374.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (1,000 samples, 24.30%)</title><rect x="404.9" y="1379.0" width="286.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.9" y="1390.0">org/springframework/aop/framework/Refl..</text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke (1,000 samples, 24.30%)</title><rect x="404.9" y="1363.0" width="286.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.9" y="1374.0">org/springframework/data/jpa/repositor..</text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (1,000 samples, 24.30%)</title><rect x="404.9" y="1347.0" width="286.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.9" y="1358.0">org/springframework/aop/framework/Refl..</text>
</g>
<g>
<title>org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.invoke (1,000 samples, 24.30%)</title><rect x="404.9" y="1331.0" width="286.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.9" y="1342.0">org/springframework/dao/support/Persis..</text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (1,000 samples, 24.30%)</title><rect x="404.9" y="1315.0" width="286.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.9" y="1326.0">org/springframework/aop/framework/Refl..</text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionInterceptor.invoke (1,000 samples, 24.30%)</title><rect x="404.9" y="1299.0" width="286.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.9" y="1310.0">org/springframework/transaction/interc..</text>
</g>
<g>
<title>org/springframework/aop/support/AopUtils.getTargetClass (1 samples, 0.02%)</title><rect x="404.9" y="1283.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.9" y="1294.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.invokeWithinTransaction (999 samples, 24.28%)</title><rect x="405.1" y="1283.0" width="286.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.1" y="1294.0">org/springframework/transaction/interc..</text>
</g>
<g>
<title>org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.getTransactionAttribute (1 samples, 0.02%)</title><rect x="405.1" y="1267.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="405.1" y="1251.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.1" y="1262.0"></text>
</g>
<g>
<title>org/springframework/core/MethodClassKey.equals (1 samples, 0.02%)</title><rect x="405.1" y="1235.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.1" y="1246.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.cleanupTransactionInfo (1 samples, 0.02%)</title><rect x="405.4" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.4" y="1278.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.restoreThreadLocalStatus (1 samples, 0.02%)</title><rect x="405.4" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="405.4" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.4" y="1246.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="405.4" y="1219.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="408.4" y="1230.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.methodIdentification (1 samples, 0.02%)</title><rect x="405.7" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.7" y="1278.0"></text>
</g>
<g>
<title>org/springframework/util/ClassUtils.getQualifiedMethodName (1 samples, 0.02%)</title><rect x="405.7" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="405.7" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c00a000.invoke (1 samples, 0.02%)</title><rect x="405.7" y="1219.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.02%)</title><rect x="405.7" y="1203.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.7" y="1214.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionInterceptor$1.proceedWithInvocation (996 samples, 24.20%)</title><rect x="406.0" y="1267.0" width="285.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.0" y="1278.0">org/springframework/transaction/interc..</text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (996 samples, 24.20%)</title><rect x="406.0" y="1251.0" width="285.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.0" y="1262.0">org/springframework/aop/framework/Refl..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutorMethodInterceptor.invoke (996 samples, 24.20%)</title><rect x="406.0" y="1235.0" width="285.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.0" y="1246.0">org/springframework/data/repository/co..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutionResultHandler.postProcessInvocationResult (10 samples, 0.24%)</title><rect x="406.3" y="1219.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.3" y="1230.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutionResultHandler.getOrCreateReturnTypeDescriptor (1 samples, 0.02%)</title><rect x="406.3" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.3" y="1214.0"></text>
</g>
<g>
<title>java/util/Collections$SingletonMap.get (1 samples, 0.02%)</title><rect x="406.3" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.3" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections.eq (1 samples, 0.02%)</title><rect x="406.3" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.3" y="1182.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutionResultHandler.postProcessInvocationResult (9 samples, 0.22%)</title><rect x="406.6" y="1203.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.6" y="1214.0"></text>
</g>
<g>
<title>org/springframework/core/convert/ConversionService.convert (1 samples, 0.02%)</title><rect x="406.9" y="1187.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.9" y="1198.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService.convert (1 samples, 0.02%)</title><rect x="406.9" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.9" y="1182.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService.getConverter (1 samples, 0.02%)</title><rect x="406.9" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="409.9" y="1166.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.get (1 samples, 0.02%)</title><rect x="406.9" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.9" y="1150.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.getReference (1 samples, 0.02%)</title><rect x="406.9" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.9" y="1134.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.getReference (1 samples, 0.02%)</title><rect x="406.9" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.9" y="1118.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.findInChain (1 samples, 0.02%)</title><rect x="406.9" y="1091.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.9" y="1102.0"></text>
</g>
<g>
<title>org/springframework/util/ObjectUtils.nullSafeEquals (1 samples, 0.02%)</title><rect x="406.9" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.9" y="1086.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService$ConverterCacheKey.equals (1 samples, 0.02%)</title><rect x="406.9" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.9" y="1070.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.equals (1 samples, 0.02%)</title><rect x="406.9" y="1043.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.9" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutionResultHandler.conversionRequired (3 samples, 0.07%)</title><rect x="407.2" y="1187.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.2" y="1198.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService.canConvert (2 samples, 0.05%)</title><rect x="407.4" y="1171.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.4" y="1182.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService.getConverter (2 samples, 0.05%)</title><rect x="407.4" y="1155.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.4" y="1166.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="407.4" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.4" y="1150.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.get (1 samples, 0.02%)</title><rect x="407.7" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.7" y="1150.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.getReference (1 samples, 0.02%)</title><rect x="407.7" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="410.7" y="1134.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.getReference (1 samples, 0.02%)</title><rect x="407.7" y="1107.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.7" y="1118.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.findInChain (1 samples, 0.02%)</title><rect x="407.7" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.7" y="1102.0"></text>
</g>
<g>
<title>org/springframework/util/ObjectUtils.nullSafeEquals (1 samples, 0.02%)</title><rect x="407.7" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.7" y="1086.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService$ConverterCacheKey.equals (1 samples, 0.02%)</title><rect x="407.7" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.7" y="1070.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.equals (1 samples, 0.02%)</title><rect x="407.7" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.7" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutionResultHandler.postProcessInvocationResult (1 samples, 0.02%)</title><rect x="408.0" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.0" y="1198.0"></text>
</g>
<g>
<title>org/springframework/data/repository/util/QueryExecutionConverters.supports (3 samples, 0.07%)</title><rect x="408.3" y="1187.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="408.3" y="1171.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="408.3" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="408.3" y="1139.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="408.3" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.3" y="1134.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="408.3" y="1107.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="411.3" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2646116ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 2646116ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="408.3" y="1091.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="411.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="408.6" y="1171.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.6" y="1182.0"></text>
</g>
<g>
<title>org/springframework/util/Assert.notNull (1 samples, 0.02%)</title><rect x="408.9" y="1171.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.9" y="1182.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutorMethodInterceptor.doInvoke (985 samples, 23.94%)</title><rect x="409.2" y="1219.0" width="282.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.2" y="1230.0">org/springframework/data/repository/co..</text>
</g>
<g>
<title>org/springframework/data/repository/core/RepositoryInformationSupport.getRepositoryInterface (1 samples, 0.02%)</title><rect x="409.2" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="412.2" y="1214.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/RepositoryInformationSupport.getMetadata (1 samples, 0.02%)</title><rect x="409.2" y="1187.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="412.2" y="1198.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutorMethodInterceptor.hasQueryFor (1 samples, 0.02%)</title><rect x="409.5" y="1203.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.5" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.02%)</title><rect x="409.5" y="1187.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.5" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="409.5" y="1171.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.equals (1 samples, 0.02%)</title><rect x="409.5" y="1155.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.5" y="1166.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.invoke (983 samples, 23.89%)</title><rect x="409.7" y="1203.0" width="281.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.7" y="1214.0">org/springframework/data/repository/co..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.doInvoke (983 samples, 23.89%)</title><rect x="409.7" y="1187.0" width="281.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.7" y="1198.0">org/springframework/data/repository/co..</text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryMethodInvocationCaptor.captureInvocationOn (1 samples, 0.02%)</title><rect x="410.0" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.0" y="1182.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryMethodInvocationCaptor.&lt;init&gt; (1 samples, 0.02%)</title><rect x="410.0" y="1155.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.0" y="1166.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryMethodInvocationCaptor.success (2 samples, 0.05%)</title><rect x="410.3" y="1171.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="410.6" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.6" y="1166.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryQueryMethodInvoker$$Lambda$1653.0x00007f9a5c9c54a0.invoke (978 samples, 23.77%)</title><rect x="410.9" y="1171.0" width="280.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.9" y="1182.0">org/springframework/data/repository/co..</text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.execute (978 samples, 23.77%)</title><rect x="410.9" y="1155.0" width="280.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.9" y="1166.0">org/springframework/data/jpa/repositor..</text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.doExecute (975 samples, 23.69%)</title><rect x="410.9" y="1139.0" width="279.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.9" y="1150.0">org/springframework/data/jpa/reposito..</text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.obtainParameterAccessor (1 samples, 0.02%)</title><rect x="411.2" y="1123.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.2" y="1134.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaParametersParameterAccessor.&lt;init&gt; (1 samples, 0.02%)</title><rect x="411.2" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.2" y="1118.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/ParametersParameterAccessor.&lt;init&gt; (1 samples, 0.02%)</title><rect x="411.2" y="1091.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.2" y="1102.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/ParametersParameterAccessor.requiresUnwrapping (1 samples, 0.02%)</title><rect x="411.2" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.2" y="1086.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaQueryExecution.execute (972 samples, 23.62%)</title><rect x="411.5" y="1123.0" width="278.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.5" y="1134.0">org/springframework/data/jpa/reposito..</text>
</g>
<g>
<title>InterpreterRuntime::exception_handler_for_exception(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="411.5" y="1107.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="414.5" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::set_bcp_and_mdp(unsigned char*, JavaThread*) (1 samples, 0.02%)</title><rect x="411.5" y="1091.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="414.5" y="1102.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="411.5" y="1075.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="414.5" y="1086.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="411.5" y="1059.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="414.5" y="1070.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaQueryExecution$SingleEntityExecution.doExecute (971 samples, 23.60%)</title><rect x="411.7" y="1107.0" width="278.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.7" y="1118.0">org/springframework/data/jpa/reposito..</text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.getSingleResult (848 samples, 20.61%)</title><rect x="411.7" y="1091.0" width="243.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.7" y="1102.0">org/hibernate/query/spi/Abstract..</text>
</g>
<g>
<title>InterpreterRuntime::exception_handler_for_exception(JavaThread*, oopDesc*) (2 samples, 0.05%)</title><rect x="411.7" y="1075.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="414.7" y="1086.0"></text>
</g>
<g>
<title>Method::fast_exception_handler_bci_for(methodHandle const&amp;, Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="412.0" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="415.0" y="1070.0"></text>
</g>
<g>
<title>jakarta/persistence/NoResultException.&lt;init&gt; (21 samples, 0.51%)</title><rect x="412.3" y="1075.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.3" y="1086.0"></text>
</g>
<g>
<title>jakarta/persistence/PersistenceException.&lt;init&gt; (21 samples, 0.51%)</title><rect x="412.3" y="1059.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (21 samples, 0.51%)</title><rect x="412.3" y="1043.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (21 samples, 0.51%)</title><rect x="412.3" y="1027.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (21 samples, 0.51%)</title><rect x="412.3" y="1011.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (20 samples, 0.49%)</title><rect x="412.6" y="995.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (18 samples, 0.44%)</title><rect x="413.2" y="979.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.2" y="990.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (18 samples, 0.44%)</title><rect x="413.2" y="963.0" width="5.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="416.2" y="974.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (18 samples, 0.44%)</title><rect x="413.2" y="947.0" width="5.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="416.2" y="958.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (18 samples, 0.44%)</title><rect x="413.2" y="931.0" width="5.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="416.2" y="942.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, JavaThread*) (18 samples, 0.44%)</title><rect x="413.2" y="915.0" width="5.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="416.2" y="926.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(JavaThread*) (2 samples, 0.05%)</title><rect x="416.3" y="899.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="419.3" y="910.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, JavaThread*) (1 samples, 0.02%)</title><rect x="416.6" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="419.6" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="416.6" y="867.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="419.6" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.12%)</title><rect x="416.9" y="899.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="419.9" y="910.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.02%)</title><rect x="416.9" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="419.9" y="894.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (3 samples, 0.07%)</title><rect x="417.2" y="883.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="420.2" y="894.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="417.5" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="420.5" y="878.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="417.8" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="420.8" y="878.0"></text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 0.02%)</title><rect x="418.1" y="883.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="421.1" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="418.1" y="867.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="421.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.format (8 samples, 0.19%)</title><rect x="418.3" y="1075.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.3" y="1086.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.6" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.6" y="1070.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="418.9" y="1059.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.9" y="1070.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.12%)</title><rect x="418.9" y="1043.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.9" y="1054.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (1 samples, 0.02%)</title><rect x="419.2" y="1027.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.2" y="1038.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printString (1 samples, 0.02%)</title><rect x="419.2" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.2" y="1022.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (1 samples, 0.02%)</title><rect x="419.2" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.2" y="1006.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.appendJustified (1 samples, 0.02%)</title><rect x="419.2" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.2" y="990.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="419.2" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.2" y="974.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.07%)</title><rect x="419.5" y="1027.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.5" y="1038.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="419.8" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.8" y="1022.0"></text>
</g>
<g>
<title>java/util/Formatter$FixedString.&lt;init&gt; (1 samples, 0.02%)</title><rect x="420.1" y="1011.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.1" y="1022.0"></text>
</g>
<g>
<title>java/util/Formatter.toString (1 samples, 0.02%)</title><rect x="420.3" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.3" y="1070.0"></text>
</g>
<g>
<title>java/util/Formatter.ensureOpen (1 samples, 0.02%)</title><rect x="420.3" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.3" y="1054.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.list (817 samples, 19.85%)</title><rect x="420.6" y="1075.0" width="234.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.6" y="1086.0">org/hibernate/query/spi/Abstrac..</text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.afterQueryHandlingFetchProfiles (6 samples, 0.15%)</title><rect x="421.2" y="1059.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.2" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.afterQuery (6 samples, 0.15%)</title><rect x="421.2" y="1043.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.2" y="1054.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.isTransactionInProgress (2 samples, 0.05%)</title><rect x="421.2" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.2" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/spi/TransactionCoordinator.isTransactionActive (1 samples, 0.02%)</title><rect x="421.5" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.5" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.afterTransaction (4 samples, 0.10%)</title><rect x="421.8" y="1027.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.8" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor.afterTransaction (3 samples, 0.07%)</title><rect x="421.8" y="1011.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.8" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.releaseResources (2 samples, 0.05%)</title><rect x="422.1" y="995.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.1" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/internal/JdbcObserverImpl.jdbcReleaseRegistryResourcesStart (2 samples, 0.05%)</title><rect x="422.1" y="979.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.1" y="990.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract$$Lambda$1224.0x00007f9a5c8d8ff0.run (1 samples, 0.02%)</title><rect x="422.4" y="963.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.4" y="974.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.lambda$createJdbcSessionContext$0 (1 samples, 0.02%)</title><rect x="422.4" y="947.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.4" y="958.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.getReleaseMode (1 samples, 0.02%)</title><rect x="422.6" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.6" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.beforeQueryHandlingFetchProfiles (10 samples, 0.24%)</title><rect x="422.9" y="1059.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.9" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/LoadQueryInfluencers.adjustFetchProfiles (2 samples, 0.05%)</title><rect x="422.9" y="1043.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.9" y="1054.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="423.2" y="1027.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="426.2" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="423.2" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="426.2" y="1022.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="423.2" y="995.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="426.2" y="1006.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="423.2" y="979.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="426.2" y="990.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 0.02%)</title><rect x="423.2" y="963.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="426.2" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.beforeQuery (8 samples, 0.19%)</title><rect x="423.5" y="1043.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.5" y="1054.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="423.5" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.5" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.prepareForQueryExecution (1 samples, 0.02%)</title><rect x="423.8" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.8" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/SharedSessionContractImplementor.checkOpen (1 samples, 0.02%)</title><rect x="423.8" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.8" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingsImpl.validate (2 samples, 0.05%)</title><rect x="424.1" y="1027.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.1" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/ParameterMetadataImplementor.visitRegistrations (2 samples, 0.05%)</title><rect x="424.1" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.1" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/ParameterMetadataImpl.visitParameters (2 samples, 0.05%)</title><rect x="424.1" y="995.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.1" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (2 samples, 0.05%)</title><rect x="424.1" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.1" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="424.1" y="963.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.1" y="974.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="424.1" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.1" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingsImpl$$Lambda$1690.0x00007f9a5c9f0f78.accept (1 samples, 0.02%)</title><rect x="424.4" y="947.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.4" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingsImpl.lambda$validate$0 (1 samples, 0.02%)</title><rect x="424.4" y="931.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.4" y="942.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractCommonQueryContract.getHibernateFlushMode (1 samples, 0.02%)</title><rect x="424.6" y="1027.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.6" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.getCacheMode (1 samples, 0.02%)</title><rect x="424.9" y="1027.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.9" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.requiresTxn (2 samples, 0.05%)</title><rect x="425.2" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.2" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/LockMode.greaterThan (1 samples, 0.02%)</title><rect x="425.5" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.5" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.doList (799 samples, 19.42%)</title><rect x="425.8" y="1059.0" width="229.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.8" y="1070.0">org/hibernate/query/sqm/intern..</text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.hasLimit (1 samples, 0.02%)</title><rect x="425.8" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.8" y="1054.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/QueryOptions.hasLimit (1 samples, 0.02%)</title><rect x="425.8" y="1027.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.8" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.performList (772 samples, 18.76%)</title><rect x="426.1" y="1043.0" width="221.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.1" y="1054.0">org/hibernate/query/sqm/inter..</text>
</g>
<g>
<title>org/hibernate/query/spi/QueryOptions.getEffectiveLimit (1 samples, 0.02%)</title><rect x="426.4" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="429.4" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation (770 samples, 18.71%)</title><rect x="426.7" y="1027.0" width="220.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.7" y="1038.0">org/hibernate/query/sqm/inter..</text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan$$Lambda$1704.0x00007f9a5c9f8228.interpret (473 samples, 11.49%)</title><rect x="426.7" y="1011.0" width="135.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.7" y="1022.0">org/hibernate/que..</text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.lambda$new$2 (473 samples, 11.49%)</title><rect x="426.7" y="995.0" width="135.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.7" y="1006.0">org/hibernate/que..</text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.getBatchFetchQueue (1 samples, 0.02%)</title><rect x="426.7" y="979.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.7" y="990.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/BatchFetchQueue.&lt;init&gt; (1 samples, 0.02%)</title><rect x="426.7" y="963.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.7" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="426.7" y="947.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.7" y="958.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="426.7" y="931.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="429.7" y="942.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="426.7" y="915.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="429.7" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="426.7" y="899.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="429.7" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="426.7" y="883.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="429.7" y="894.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.autoFlushIfRequired (2 samples, 0.05%)</title><rect x="426.9" y="979.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.9" y="990.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/SharedSessionContractImplementor.checkOpen (1 samples, 0.02%)</title><rect x="426.9" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.9" y="974.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.isTransactionInProgress (1 samples, 0.02%)</title><rect x="427.2" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.2" y="974.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/spi/TransactionCoordinator.isTransactionActive (1 samples, 0.02%)</title><rect x="427.2" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.2" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.listInterpreterExecutionContext (2 samples, 0.05%)</title><rect x="427.5" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.5" y="990.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan$MySqmJdbcExecutionContextAdapter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="427.5" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="430.5" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmJdbcExecutionContextAdapter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="427.5" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.5" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/SqlOmittingQueryOptions.omitSqlQueryOptions (1 samples, 0.02%)</title><rect x="427.5" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.5" y="942.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/SqlOmittingQueryOptions.omitSqlQueryOptions (1 samples, 0.02%)</title><rect x="427.5" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.5" y="926.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmJdbcExecutionContextAdapter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="427.8" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.8" y="942.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="427.8" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.8" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcSelectExecutor.list (468 samples, 11.37%)</title><rect x="428.1" y="979.0" width="134.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.1" y="990.0">org/hibernate/sql..</text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcSelectExecutor.list (468 samples, 11.37%)</title><rect x="428.1" y="963.0" width="134.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.1" y="974.0">org/hibernate/sql..</text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/JdbcSelectExecutorStandardImpl.executeQuery (467 samples, 11.35%)</title><rect x="428.4" y="947.0" width="133.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.4" y="958.0">org/hibernate/sql..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="428.4" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="431.4" y="942.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/JdbcSelectExecutorStandardImpl.doExecuteQuery (466 samples, 11.32%)</title><rect x="428.7" y="931.0" width="133.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.7" y="942.0">org/hibernate/sql..</text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan$MySqmJdbcExecutionContextAdapter.getQueryIdentifier (1 samples, 0.02%)</title><rect x="429.5" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="429.5" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c010c00.invoke (1 samples, 0.02%)</title><rect x="429.5" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.5" y="894.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/JdbcSelectExecutorStandardImpl$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="429.8" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.8" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource (3 samples, 0.07%)</title><rect x="430.1" y="915.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.1" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesMappingProducerStandard.resolve (1 samples, 0.02%)</title><rect x="430.4" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.4" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesResultSetImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="430.7" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.7" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/ResultsHelper.createRowReader (10 samples, 0.24%)</title><rect x="431.0" y="915.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="434.0" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/ResultsHelper.createRowReader (10 samples, 0.24%)</title><rect x="431.0" y="899.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="434.0" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/InitializersList$Builder.build (1 samples, 0.02%)</title><rect x="431.0" y="883.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.0" y="894.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/InitializersList$Builder.toArray (1 samples, 0.02%)</title><rect x="431.0" y="867.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="434.0" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/StandardJdbcValuesMapping.resolveAssemblers (9 samples, 0.22%)</title><rect x="431.2" y="883.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.2" y="894.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/internal/EntityResultImpl.createResultAssembler (9 samples, 0.22%)</title><rect x="431.2" y="867.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.2" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/AbstractEntityResultGraphNode.getResultJavaType (1 samples, 0.02%)</title><rect x="431.5" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.5" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/ResultsHelper$1.resolveInitializer (7 samples, 0.17%)</title><rect x="431.8" y="851.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.8" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/internal/EntityResultImpl$$Lambda$1878.0x00007f9a5ca2a580.get (4 samples, 0.10%)</title><rect x="431.8" y="835.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.8" y="846.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/internal/EntityResultImpl.lambda$createResultAssembler$0 (4 samples, 0.10%)</title><rect x="431.8" y="819.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.8" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/internal/EntityResultInitializer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="432.1" y="803.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="435.1" y="814.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/AbstractEntityInitializer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="432.1" y="787.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.1" y="798.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/EntityMappingType.getSubclassId (1 samples, 0.02%)</title><rect x="432.1" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.1" y="782.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.getSubMappingTypes (1 samples, 0.02%)</title><rect x="432.4" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.4" y="782.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="432.4" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="435.4" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="432.4" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="435.4" y="750.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="432.4" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="435.4" y="734.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="432.4" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="435.4" y="718.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;LoopPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="432.4" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="435.4" y="702.0"></text>
</g>
<g>
<title>LoopPredicate::apply(methodHandle const&amp;, CompLevel, int, int) [clone .isra.0] (1 samples, 0.02%)</title><rect x="432.4" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="435.4" y="686.0"></text>
</g>
<g>
<title>CodeCache::reverse_free_ratio() (1 samples, 0.02%)</title><rect x="432.4" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="435.4" y="670.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/AbstractFetchParent.findFetch (1 samples, 0.02%)</title><rect x="432.7" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.7" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/InitializersList$Builder.addInitializer (1 samples, 0.02%)</title><rect x="433.0" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.0" y="846.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/InitializersList$Builder.initializeFirst (1 samples, 0.02%)</title><rect x="433.0" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.0" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/NavigablePathMapToInitializer.put (2 samples, 0.05%)</title><rect x="433.3" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.3" y="846.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/RowProcessingStateStandardImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="433.8" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.8" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesSourceProcessingStateStandardImpl.getSession (1 samples, 0.02%)</title><rect x="433.8" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.8" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.&lt;init&gt; (4 samples, 0.10%)</title><rect x="434.1" y="915.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.1" y="926.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcServicesImpl.getSqlStatementLogger (1 samples, 0.02%)</title><rect x="434.7" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.7" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/AbstractResultSetAccess.&lt;init&gt; (1 samples, 0.02%)</title><rect x="435.0" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.0" y="910.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcServicesImpl.getDialect (1 samples, 0.02%)</title><rect x="435.0" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.0" y="894.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesSourceProcessingStateStandardImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="435.3" y="915.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.3" y="926.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.asEventSource (1 samples, 0.02%)</title><rect x="435.3" y="899.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.3" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/spi/ListResultsConsumer.consume (442 samples, 10.74%)</title><rect x="435.5" y="915.0" width="126.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.5" y="926.0">org/hibernate/sq..</text>
</g>
<g>
<title>org/hibernate/sql/results/spi/ListResultsConsumer.consume (442 samples, 10.74%)</title><rect x="435.5" y="899.0" width="126.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="438.5" y="910.0">org/hibernate/sq..</text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.afterLoad (1 samples, 0.02%)</title><rect x="436.1" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.1" y="894.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.initializeNonLazyCollections (1 samples, 0.02%)</title><rect x="436.4" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="436.4" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.4" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.02%)</title><rect x="436.4" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.4" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/RowProcessingStateStandardImpl.next (431 samples, 10.47%)</title><rect x="436.7" y="883.0" width="123.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.7" y="894.0">org/hibernate/s..</text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/AbstractJdbcValues.next (431 samples, 10.47%)</title><rect x="436.7" y="867.0" width="123.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.7" y="878.0">org/hibernate/s..</text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesResultSetImpl.processNext (431 samples, 10.47%)</title><rect x="436.7" y="851.0" width="123.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.7" y="862.0">org/hibernate/s..</text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesResultSetImpl.advanceNext (431 samples, 10.47%)</title><rect x="436.7" y="835.0" width="123.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.7" y="846.0">org/hibernate/s..</text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyResultSet.next (1 samples, 0.02%)</title><rect x="436.7" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="439.7" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.getResultSet (430 samples, 10.45%)</title><rect x="437.0" y="819.0" width="123.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.0" y="830.0">org/hibernate/s..</text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.executeQuery (430 samples, 10.45%)</title><rect x="437.0" y="803.0" width="123.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.0" y="814.0">org/hibernate/s..</text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.executeQuery (374 samples, 9.09%)</title><rect x="438.4" y="787.0" width="107.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.4" y="798.0">com/zaxxer/hi..</text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyPreparedStatement.executeQuery (374 samples, 9.09%)</title><rect x="438.4" y="771.0" width="107.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.4" y="782.0">com/zaxxer/hi..</text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.executeQuery (374 samples, 9.09%)</title><rect x="438.4" y="755.0" width="107.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.4" y="766.0">org/h2/jdbc/J..</text>
</g>
<g>
<title>org/h2/command/Command.executeQuery (372 samples, 9.04%)</title><rect x="438.4" y="739.0" width="106.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.4" y="750.0">org/h2/comman..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="438.7" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.7" y="734.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.query (331 samples, 8.04%)</title><rect x="439.0" y="723.0" width="94.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.0" y="734.0">org/h2/comm..</text>
</g>
<g>
<title>org/h2/command/Prepared.checkParameters (1 samples, 0.02%)</title><rect x="439.3" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.3" y="718.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.query (329 samples, 8.00%)</title><rect x="439.6" y="707.0" width="94.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.6" y="718.0">org/h2/comm..</text>
</g>
<g>
<title>org/h2/command/query/Query.query (329 samples, 8.00%)</title><rect x="439.6" y="691.0" width="94.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.6" y="702.0">org/h2/comm..</text>
</g>
<g>
<title>org/h2/command/query/Query.getParameterValues (1 samples, 0.02%)</title><rect x="439.6" y="675.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.6" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.02%)</title><rect x="439.6" y="659.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.6" y="670.0"></text>
</g>
<g>
<title>java/util/Objects.checkIndex (1 samples, 0.02%)</title><rect x="439.6" y="643.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/util/Preconditions.checkIndex (1 samples, 0.02%)</title><rect x="439.6" y="627.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.6" y="638.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.queryWithoutCacheLazyCheck (323 samples, 7.85%)</title><rect x="439.8" y="675.0" width="92.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.8" y="686.0">org/h2/comm..</text>
</g>
<g>
<title>org/h2/command/query/Select.queryWithoutCache (322 samples, 7.83%)</title><rect x="440.1" y="659.0" width="92.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.1" y="670.0">org/h2/comm..</text>
</g>
<g>
<title>org/h2/command/query/Query.finishResult (1 samples, 0.02%)</title><rect x="440.7" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.7" y="654.0"></text>
</g>
<g>
<title>org/h2/result/LocalResult.done (1 samples, 0.02%)</title><rect x="440.7" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.7" y="638.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.queryFlat (317 samples, 7.70%)</title><rect x="441.0" y="643.0" width="90.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.0" y="654.0">org/h2/com..</text>
</g>
<g>
<title>org/h2/command/query/Select$LazyResultQueryFlat.&lt;init&gt; (1 samples, 0.02%)</title><rect x="441.6" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.6" y="638.0"></text>
</g>
<g>
<title>org/h2/command/query/Select$LazyResultSelect.&lt;init&gt; (1 samples, 0.02%)</title><rect x="441.6" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.6" y="622.0"></text>
</g>
<g>
<title>org/h2/result/LazyResult.&lt;init&gt; (1 samples, 0.02%)</title><rect x="441.6" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.6" y="606.0"></text>
</g>
<g>
<title>org/h2/result/FetchedResult.&lt;init&gt; (1 samples, 0.02%)</title><rect x="441.6" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="444.6" y="590.0"></text>
</g>
<g>
<title>org/h2/result/FetchedResult.next (314 samples, 7.63%)</title><rect x="441.9" y="627.0" width="90.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.9" y="638.0">org/h2/res..</text>
</g>
<g>
<title>java/util/BitSet.clone (1 samples, 0.02%)</title><rect x="441.9" y="611.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.9" y="622.0"></text>
</g>
<g>
<title>org/h2/expression/condition/Comparison.compare (1 samples, 0.02%)</title><rect x="441.9" y="595.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.9" y="606.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.compareWithNull (1 samples, 0.02%)</title><rect x="441.9" y="579.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.9" y="590.0"></text>
</g>
<g>
<title>org/h2/value/Value.compareWithNull (1 samples, 0.02%)</title><rect x="441.9" y="563.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="444.9" y="574.0"></text>
</g>
<g>
<title>org/h2/value/Value.compareToNotNullable (1 samples, 0.02%)</title><rect x="441.9" y="547.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.9" y="558.0"></text>
</g>
<g>
<title>org/h2/value/ValueVarchar.compareTypeSafe (1 samples, 0.02%)</title><rect x="441.9" y="531.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.9" y="542.0"></text>
</g>
<g>
<title>org/h2/value/ValueStringBase.compareTypeSafe (1 samples, 0.02%)</title><rect x="441.9" y="515.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.9" y="526.0"></text>
</g>
<g>
<title>org/h2/result/LazyResult.hasNext (313 samples, 7.61%)</title><rect x="442.1" y="611.0" width="89.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.1" y="622.0">org/h2/res..</text>
</g>
<g>
<title>org/h2/command/query/Select$LazyResultQueryFlat.fetchNextRow (313 samples, 7.61%)</title><rect x="442.1" y="595.0" width="89.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.1" y="606.0">org/h2/com..</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.07%)</title><rect x="447.6" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.6" y="590.0"></text>
</g>
<g>
<title>org/h2/command/Prepared.setCurrentRowNumber (2 samples, 0.05%)</title><rect x="448.4" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.4" y="590.0"></text>
</g>
<g>
<title>org/h2/command/Prepared.setProgress (2 samples, 0.05%)</title><rect x="448.4" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.4" y="574.0"></text>
</g>
<g>
<title>org/h2/command/Prepared.getDatabase (1 samples, 0.02%)</title><rect x="448.7" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.7" y="558.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.isConditionMet (99 samples, 2.41%)</title><rect x="449.0" y="579.0" width="28.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.0" y="590.0">or..</text>
</g>
<g>
<title>org/h2/expression/Expression.getBooleanValue (99 samples, 2.41%)</title><rect x="449.0" y="563.0" width="28.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.0" y="574.0">or..</text>
</g>
<g>
<title>org/h2/expression/condition/ConditionAndOr.getValue (98 samples, 2.38%)</title><rect x="449.0" y="547.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.0" y="558.0">or..</text>
</g>
<g>
<title>org/h2/expression/condition/Comparison.compare (2 samples, 0.05%)</title><rect x="450.5" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.5" y="542.0"></text>
</g>
<g>
<title>org/h2/expression/condition/Comparison.getValue (87 samples, 2.11%)</title><rect x="451.0" y="531.0" width="25.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.0" y="542.0">o..</text>
</g>
<g>
<title>org/h2/expression/ExpressionColumn.getValue (11 samples, 0.27%)</title><rect x="452.2" y="515.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.2" y="526.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.getGroupDataIfCurrent (1 samples, 0.02%)</title><rect x="453.3" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.3" y="510.0"></text>
</g>
<g>
<title>org/h2/table/TableFilter.getSelect (1 samples, 0.02%)</title><rect x="453.6" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.6" y="510.0"></text>
</g>
<g>
<title>org/h2/table/TableFilter.getValue (5 samples, 0.12%)</title><rect x="453.9" y="499.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.9" y="510.0"></text>
</g>
<g>
<title>org/h2/result/DefaultRow.getValue (5 samples, 0.12%)</title><rect x="453.9" y="483.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.9" y="494.0"></text>
</g>
<g>
<title>org/h2/expression/Parameter.getValue (1 samples, 0.02%)</title><rect x="455.3" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.3" y="526.0"></text>
</g>
<g>
<title>org/h2/expression/Parameter.getParamValue (1 samples, 0.02%)</title><rect x="455.3" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.3" y="510.0"></text>
</g>
<g>
<title>org/h2/expression/condition/Comparison.compare (71 samples, 1.73%)</title><rect x="455.6" y="515.0" width="20.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.6" y="526.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.compareWithNull (70 samples, 1.70%)</title><rect x="455.9" y="499.0" width="20.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.9" y="510.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.getCompareMode (1 samples, 0.02%)</title><rect x="462.5" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.5" y="494.0"></text>
</g>
<g>
<title>org/h2/engine/Database.getCompareMode (1 samples, 0.02%)</title><rect x="462.5" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.5" y="478.0"></text>
</g>
<g>
<title>org/h2/value/Value.compareWithNull (46 samples, 1.12%)</title><rect x="462.8" y="483.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.8" y="494.0"></text>
</g>
<g>
<title>org/h2/value/Value.compareToNotNullable (45 samples, 1.09%)</title><rect x="463.1" y="467.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.1" y="478.0"></text>
</g>
<g>
<title>org/h2/value/ValueVarchar.compareTypeSafe (44 samples, 1.07%)</title><rect x="463.4" y="451.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.4" y="462.0"></text>
</g>
<g>
<title>org/h2/value/ValueStringBase.compareTypeSafe (44 samples, 1.07%)</title><rect x="463.4" y="435.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.4" y="446.0"></text>
</g>
<g>
<title>org/h2/value/CompareMode.compareString (42 samples, 1.02%)</title><rect x="463.9" y="419.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (40 samples, 0.97%)</title><rect x="464.5" y="403.0" width="11.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.coder (32 samples, 0.78%)</title><rect x="466.8" y="387.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.8" y="398.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="475.7" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="478.7" y="382.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="475.7" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="478.7" y="366.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="475.7" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="478.7" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="475.7" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="478.7" y="334.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="475.7" y="307.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="478.7" y="318.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="475.7" y="291.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.7" y="302.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="475.7" y="275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="478.7" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="475.7" y="259.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="478.7" y="270.0"></text>
</g>
<g>
<title>org/h2/value/Value.isFalse (4 samples, 0.10%)</title><rect x="476.0" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.0" y="542.0"></text>
</g>
<g>
<title>org/h2/value/Value.isTrue (1 samples, 0.02%)</title><rect x="477.1" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.1" y="558.0"></text>
</g>
<g>
<title>org/h2/table/TableFilter.next (190 samples, 4.62%)</title><rect x="477.4" y="579.0" width="54.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.4" y="590.0">org/h..</text>
</g>
<g>
<title>org/h2/index/IndexCursor.find (19 samples, 0.46%)</title><rect x="480.6" y="563.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.6" y="574.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.22%)</title><rect x="481.4" y="547.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="484.4" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVPrimaryIndex$MVStoreCursor.getSearchRow (5 samples, 0.12%)</title><rect x="484.0" y="547.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.0" y="558.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="485.2" y="531.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="488.2" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="485.2" y="515.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="488.2" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="485.2" y="499.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="488.2" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="485.2" y="483.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="488.2" y="494.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="485.2" y="467.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="488.2" y="478.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="485.2" y="451.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="488.2" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="485.2" y="435.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.2" y="446.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVPrimaryIndex.find (2 samples, 0.05%)</title><rect x="485.4" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.4" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVPrimaryIndex.find (1 samples, 0.02%)</title><rect x="485.7" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.7" y="542.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionMap.entryIterator (1 samples, 0.02%)</title><rect x="485.7" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.7" y="526.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionMap.chooseIterator (1 samples, 0.02%)</title><rect x="485.7" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.7" y="510.0"></text>
</g>
<g>
<title>org/h2/index/IndexCursor.getSearchRow (11 samples, 0.27%)</title><rect x="486.0" y="563.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.0" y="574.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVPrimaryIndex$MVStoreCursor.getSearchRow (10 samples, 0.24%)</title><rect x="486.3" y="547.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.3" y="558.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="487.7" y="531.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="490.7" y="542.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="487.7" y="515.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="490.7" y="526.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="487.7" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="490.7" y="510.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="487.7" y="483.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="490.7" y="494.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 0.02%)</title><rect x="487.7" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="490.7" y="478.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVPrimaryIndex$MVStoreCursor.get (4 samples, 0.10%)</title><rect x="488.0" y="531.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.0" y="542.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.02%)</title><rect x="488.6" y="515.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="491.6" y="526.0"></text>
</g>
<g>
<title>org/h2/result/SearchRow.getKey (1 samples, 0.02%)</title><rect x="488.9" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.9" y="526.0"></text>
</g>
<g>
<title>org/h2/index/IndexCursor.next (149 samples, 3.62%)</title><rect x="489.2" y="563.0" width="42.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.2" y="574.0">org/..</text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="490.3" y="547.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="493.3" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/Cursor.hasNext (1 samples, 0.02%)</title><rect x="491.2" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.2" y="558.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVPrimaryIndex$MVStoreCursor.next (141 samples, 3.43%)</title><rect x="491.5" y="547.0" width="40.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.5" y="558.0">org..</text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionMap$CommittedIterator.fetchNext (134 samples, 3.26%)</title><rect x="493.5" y="531.0" width="38.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.5" y="542.0">org..</text>
</g>
<g>
<title>org/h2/mvstore/Cursor.hasNext (81 samples, 1.97%)</title><rect x="502.9" y="515.0" width="23.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.9" y="526.0">o..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="514.1" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Integer.signum (1 samples, 0.02%)</title><rect x="514.4" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.4" y="510.0"></text>
</g>
<g>
<title>org/h2/mvstore/Cursor.upperBound (4 samples, 0.10%)</title><rect x="514.7" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.7" y="510.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page$Leaf.getValue (2 samples, 0.05%)</title><rect x="515.8" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.8" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="516.1" y="483.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="519.1" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="516.1" y="467.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="519.1" y="478.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="516.1" y="451.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="519.1" y="462.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.02%)</title><rect x="516.1" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="519.1" y="446.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page$NonLeaf.getChildPage (1 samples, 0.02%)</title><rect x="516.4" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.4" y="510.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.getKeyCount (1 samples, 0.02%)</title><rect x="516.7" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.7" y="510.0"></text>
</g>
<g>
<title>org/h2/mvstore/Page.isLeaf (5 samples, 0.12%)</title><rect x="517.0" y="499.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.0" y="510.0"></text>
</g>
<g>
<title>org/h2/mvstore/type/LongDataType.compare (27 samples, 0.66%)</title><rect x="518.4" y="499.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.4" y="510.0"></text>
</g>
<g>
<title>org/h2/mvstore/type/LongDataType.compare (5 samples, 0.12%)</title><rect x="524.7" y="483.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.7" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.compare (3 samples, 0.07%)</title><rect x="525.3" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.3" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="525.9" y="451.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="528.9" y="462.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="525.9" y="435.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="528.9" y="446.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="525.9" y="419.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="528.9" y="430.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="525.9" y="403.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="528.9" y="414.0"></text>
</g>
<g>
<title>org/h2/mvstore/Cursor.next (18 samples, 0.44%)</title><rect x="526.2" y="515.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.2" y="526.0"></text>
</g>
<g>
<title>org/h2/mvstore/Cursor.hasNext (11 samples, 0.27%)</title><rect x="528.2" y="499.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.2" y="510.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionMap$TMIterator.toElement (2 samples, 0.05%)</title><rect x="531.3" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.3" y="526.0"></text>
</g>
<g>
<title>org/h2/table/TableFilter.lock (2 samples, 0.05%)</title><rect x="531.9" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.9" y="654.0"></text>
</g>
<g>
<title>org/h2/mvstore/db/MVTable.lock (1 samples, 0.02%)</title><rect x="532.2" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.2" y="638.0"></text>
</g>
<g>
<title>org/h2/engine/Database.getLockMode (1 samples, 0.02%)</title><rect x="532.2" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.2" y="622.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.fireBeforeSelectTriggers (1 samples, 0.02%)</title><rect x="532.5" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.5" y="686.0"></text>
</g>
<g>
<title>org/h2/table/TableFilter.getTable (1 samples, 0.02%)</title><rect x="532.5" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.5" y="670.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.isEverything (4 samples, 0.10%)</title><rect x="532.8" y="675.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.8" y="686.0"></text>
</g>
<g>
<title>org/h2/expression/condition/ConditionAndOr.isEverything (1 samples, 0.02%)</title><rect x="533.6" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.6" y="670.0"></text>
</g>
<g>
<title>org/h2/expression/condition/Comparison.isEverything (1 samples, 0.02%)</title><rect x="533.6" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="536.6" y="654.0"></text>
</g>
<g>
<title>org/h2/expression/ExpressionColumn.isEverything (1 samples, 0.02%)</title><rect x="533.6" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.6" y="638.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.stop (6 samples, 0.15%)</title><rect x="533.9" y="723.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.9" y="734.0"></text>
</g>
<g>
<title>org/h2/command/Command.stop (6 samples, 0.15%)</title><rect x="533.9" y="707.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.9" y="718.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.commit (6 samples, 0.15%)</title><rect x="533.9" y="691.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.9" y="702.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.markUsedTablesAsUpdated (1 samples, 0.02%)</title><rect x="533.9" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.9" y="686.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.commit (5 samples, 0.12%)</title><rect x="534.2" y="675.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.2" y="686.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.endTransaction (5 samples, 0.12%)</title><rect x="534.2" y="659.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.set (1 samples, 0.02%)</title><rect x="535.0" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.02%)</title><rect x="535.0" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.0" y="638.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/VersionedBitSet.clone (1 samples, 0.02%)</title><rect x="535.3" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.3" y="654.0"></text>
</g>
<g>
<title>java/util/BitSet.clone (1 samples, 0.02%)</title><rect x="535.3" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="535.3" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.3" y="622.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.02%)</title><rect x="535.3" y="595.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="538.3" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="535.3" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="538.3" y="590.0"></text>
</g>
<g>
<title>org/h2/engine/Database.checkPowerOff (1 samples, 0.02%)</title><rect x="535.6" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.6" y="734.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="535.6" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="538.6" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="535.6" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="538.6" y="702.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="535.6" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="538.6" y="686.0"></text>
</g>
<g>
<title>CompilationPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.02%)</title><rect x="535.6" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="538.6" y="670.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, JavaThread*) (1 samples, 0.02%)</title><rect x="535.6" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="538.6" y="654.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, JavaThread*) (1 samples, 0.02%)</title><rect x="535.6" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="538.6" y="638.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="535.6" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="538.6" y="622.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.02%)</title><rect x="535.6" y="595.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="538.6" y="606.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.endStatement (3 samples, 0.07%)</title><rect x="535.9" y="723.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.9" y="734.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.setCurrentCommand (3 samples, 0.07%)</title><rect x="535.9" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.9" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.05%)</title><rect x="535.9" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.9" y="702.0"></text>
</g>
<g>
<title>java/time/Clock.currentInstant (2 samples, 0.05%)</title><rect x="535.9" y="675.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="535.9" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.9" y="670.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="535.9" y="643.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="538.9" y="654.0"></text>
</g>
<g>
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="536.2" y="643.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="539.2" y="654.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.getMode (1 samples, 0.02%)</title><rect x="536.5" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.5" y="702.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.02%)</title><rect x="536.5" y="675.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="539.5" y="686.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.resetThreadLocalSession (2 samples, 0.05%)</title><rect x="536.8" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="539.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 0.05%)</title><rect x="536.8" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (2 samples, 0.05%)</title><rect x="536.8" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.8" y="702.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear (2 samples, 0.05%)</title><rect x="536.8" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.8" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear0 (2 samples, 0.05%)</title><rect x="536.8" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.8" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="536.8" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="539.8" y="654.0"></text>
</g>
<g>
<title>oopDesc::obj_field_put_raw(int, oopDesc*) (1 samples, 0.02%)</title><rect x="537.1" y="643.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="540.1" y="654.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.startStatementWithinTransaction (25 samples, 0.61%)</title><rect x="537.3" y="723.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.3" y="734.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="537.3" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.3" y="718.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.getDependencies (9 samples, 0.22%)</title><rect x="537.6" y="707.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.6" y="718.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.collectDependencies (9 samples, 0.22%)</title><rect x="537.6" y="691.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.6" y="702.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.isEverything (6 samples, 0.15%)</title><rect x="538.2" y="675.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.02%)</title><rect x="538.5" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.5" y="670.0"></text>
</g>
<g>
<title>org/h2/expression/ExpressionVisitor.addDependency (2 samples, 0.05%)</title><rect x="538.8" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.05%)</title><rect x="538.8" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.05%)</title><rect x="538.8" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="538.8" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="539.1" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.1" y="606.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.02%)</title><rect x="539.1" y="579.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="542.1" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="539.1" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="542.1" y="574.0"></text>
</g>
<g>
<title>org/h2/table/Table.addDependencies (2 samples, 0.05%)</title><rect x="539.4" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.4" y="670.0"></text>
</g>
<g>
<title>org/h2/expression/ExpressionVisitor.getDependenciesVisitor (1 samples, 0.02%)</title><rect x="539.9" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.9" y="686.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.addTableToDependencies (1 samples, 0.02%)</title><rect x="540.2" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.2" y="718.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.getTransaction (3 samples, 0.07%)</title><rect x="540.5" y="707.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.5" y="718.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.begin (3 samples, 0.07%)</title><rect x="540.5" y="691.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.5" y="702.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.registerTransaction (3 samples, 0.07%)</title><rect x="540.5" y="675.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.5" y="686.0"></text>
</g>
<g>
<title>java/util/BitSet.nextClearBit (2 samples, 0.05%)</title><rect x="540.5" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Long.numberOfTrailingZeros (1 samples, 0.02%)</title><rect x="540.8" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.8" y="654.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/VersionedBitSet.clone (1 samples, 0.02%)</title><rect x="541.1" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.1" y="670.0"></text>
</g>
<g>
<title>java/util/BitSet.clone (1 samples, 0.02%)</title><rect x="541.1" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="541.1" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.1" y="638.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.02%)</title><rect x="541.1" y="611.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="544.1" y="622.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.markStatementStart (11 samples, 0.27%)</title><rect x="541.4" y="707.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.isEmpty (1 samples, 0.02%)</title><rect x="541.4" y="691.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="541.6" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.6" y="702.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.markStatementEnd (1 samples, 0.02%)</title><rect x="541.9" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.9" y="702.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.releaseSnapshot (1 samples, 0.02%)</title><rect x="541.9" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.9" y="686.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.openMapX (4 samples, 0.10%)</title><rect x="542.2" y="691.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.2" y="702.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionMap.&lt;init&gt; (4 samples, 0.10%)</title><rect x="542.2" y="675.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="542.2" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="542.2" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.2" y="654.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionMap$$Lambda$833.0x00007f9a5c453160.&lt;init&gt; (1 samples, 0.02%)</title><rect x="542.2" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.2" y="638.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap.getId (1 samples, 0.02%)</title><rect x="542.5" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.5" y="670.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TxDecisionMaker$PutIfAbsentDecisionMaker.&lt;init&gt; (1 samples, 0.02%)</title><rect x="542.8" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.8" y="670.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TxDecisionMaker.&lt;init&gt; (1 samples, 0.02%)</title><rect x="543.1" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.1" y="670.0"></text>
</g>
<g>
<title>org/h2/mvstore/MVMap$DecisionMaker.&lt;init&gt; (1 samples, 0.02%)</title><rect x="543.1" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.1" y="654.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/TransactionStore.collectUndoLogRootReferences (4 samples, 0.10%)</title><rect x="543.4" y="691.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.4" y="702.0"></text>
</g>
<g>
<title>java/util/BitSet.length (1 samples, 0.02%)</title><rect x="543.4" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.4" y="686.0"></text>
</g>
<g>
<title>java/util/BitSet.nextSetBit (3 samples, 0.07%)</title><rect x="543.7" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.7" y="686.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="544.2" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.2" y="670.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.waitIfExclusiveModeEnabled (2 samples, 0.05%)</title><rect x="544.5" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.5" y="734.0"></text>
</g>
<g>
<title>org/h2/engine/Database.getExclusiveSession (1 samples, 0.02%)</title><rect x="544.8" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.8" y="718.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcStatement.setExecutingStatement (2 samples, 0.05%)</title><rect x="545.1" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.1" y="750.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="545.4" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.4" y="734.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/SessionEventListenerManagerImpl.jdbcExecuteStatementStart (1 samples, 0.02%)</title><rect x="545.7" y="787.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.7" y="798.0"></text>
</g>
<g>
<title>__mmap (1 samples, 0.02%)</title><rect x="545.7" y="771.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="548.7" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="545.7" y="755.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="548.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="545.7" y="739.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="545.7" y="723.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="548.7" y="734.0"></text>
</g>
<g>
<title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="545.7" y="707.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.7" y="718.0"></text>
</g>
<g>
<title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="545.7" y="691.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.7" y="702.0"></text>
</g>
<g>
<title>do_mmap (1 samples, 0.02%)</title><rect x="545.7" y="675.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="548.7" y="686.0"></text>
</g>
<g>
<title>mmap_region (1 samples, 0.02%)</title><rect x="545.7" y="659.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.7" y="670.0"></text>
</g>
<g>
<title>khugepaged_enter_vma_merge (1 samples, 0.02%)</title><rect x="545.7" y="643.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="548.7" y="654.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/spi/SqlStatementLogger.logSlowQuery (2 samples, 0.05%)</title><rect x="545.9" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.9" y="798.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/spi/SqlStatementLogger.logSlowQuery (1 samples, 0.02%)</title><rect x="546.2" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.getEventListenerManager (1 samples, 0.02%)</title><rect x="546.5" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.5" y="798.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.afterStatement (1 samples, 0.02%)</title><rect x="546.8" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.8" y="798.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.register (2 samples, 0.05%)</title><rect x="547.1" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="550.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="547.4" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="547.4" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.4" y="766.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/AbstractJdbcParameter.bindParameterValue (1 samples, 0.02%)</title><rect x="547.7" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.7" y="798.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcSelectExecutor$$Lambda$1869.0x00007f9a5ca22ce8.apply (30 samples, 0.73%)</title><rect x="548.0" y="787.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.0" y="798.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcSelectExecutor.lambda$list$0 (29 samples, 0.70%)</title><rect x="548.2" y="771.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl.prepareQueryStatement (29 samples, 0.70%)</title><rect x="548.2" y="755.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.2" y="766.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$5.&lt;init&gt; (2 samples, 0.05%)</title><rect x="548.5" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.5" y="750.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$QueryStatementPreparationTemplate.&lt;init&gt; (2 samples, 0.05%)</title><rect x="548.5" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.5" y="734.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$StatementPreparationTemplate.&lt;init&gt; (2 samples, 0.05%)</title><rect x="548.5" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.5" y="718.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$StatementPreparationTemplate.prepareStatement (26 samples, 0.63%)</title><rect x="549.1" y="739.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.1" y="750.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$5.doPrepare (20 samples, 0.49%)</title><rect x="549.1" y="723.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.1" y="734.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyConnection.prepareStatement (6 samples, 0.15%)</title><rect x="549.1" y="707.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.1" y="718.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyConnection.prepareStatement (6 samples, 0.15%)</title><rect x="549.1" y="691.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.1" y="702.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyConnection.trackStatement (1 samples, 0.02%)</title><rect x="549.1" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.1" y="686.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/util/FastList.add (1 samples, 0.02%)</title><rect x="549.1" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.1" y="670.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.prepareStatement (5 samples, 0.12%)</title><rect x="549.4" y="675.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.4" y="686.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.&lt;init&gt; (4 samples, 0.10%)</title><rect x="549.4" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.4" y="670.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.prepareCommand (3 samples, 0.07%)</title><rect x="549.7" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.7" y="654.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.prepareCommand (3 samples, 0.07%)</title><rect x="549.7" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.7" y="638.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.prepareLocal (3 samples, 0.07%)</title><rect x="549.7" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.7" y="622.0"></text>
</g>
<g>
<title>org/h2/command/Command.reuse (2 samples, 0.05%)</title><rect x="550.0" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="553.0" y="606.0"></text>
</g>
<g>
<title>org/h2/message/TraceObject.isDebugEnabled (1 samples, 0.02%)</title><rect x="550.5" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.5" y="670.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl.connection (14 samples, 0.34%)</title><rect x="550.8" y="707.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.8" y="718.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.getPhysicalConnection (14 samples, 0.34%)</title><rect x="550.8" y="691.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.8" y="702.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl.acquireConnectionIfNeeded (14 samples, 0.34%)</title><rect x="550.8" y="675.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.8" y="686.0"></text>
</g>
<g>
<title>org/hibernate/internal/NonContextualJdbcConnectionAccess.obtainConnection (14 samples, 0.34%)</title><rect x="550.8" y="659.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.8" y="670.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/connections/internal/DatasourceConnectionProviderImpl.getConnection (13 samples, 0.32%)</title><rect x="551.1" y="643.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.1" y="654.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/HikariDataSource.getConnection (12 samples, 0.29%)</title><rect x="551.4" y="627.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.4" y="638.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/HikariDataSource.isClosed (1 samples, 0.02%)</title><rect x="551.4" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.4" y="622.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariPool.getConnection (11 samples, 0.27%)</title><rect x="551.7" y="611.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.7" y="622.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariPool.getConnection (11 samples, 0.27%)</title><rect x="551.7" y="595.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.7" y="606.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/util/ClockSource.currentTime (1 samples, 0.02%)</title><rect x="552.3" y="579.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.3" y="590.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/util/ClockSource$NanosecondClockSource.currentTime0 (1 samples, 0.02%)</title><rect x="552.3" y="563.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.3" y="574.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/util/ConcurrentBag.borrow (8 samples, 0.19%)</title><rect x="552.5" y="579.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.5" y="590.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="552.8" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.8" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="553.1" y="563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="556.1" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="553.1" y="547.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="556.1" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="553.1" y="531.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="556.1" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="553.1" y="515.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="556.1" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="553.1" y="499.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="556.1" y="510.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(JavaThread*) (1 samples, 0.02%)</title><rect x="553.1" y="483.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="556.1" y="494.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="553.1" y="467.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="556.1" y="478.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, JavaThread*) (1 samples, 0.02%)</title><rect x="553.1" y="451.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="556.1" y="462.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariPool.addBagItem (2 samples, 0.05%)</title><rect x="553.4" y="563.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (1 samples, 0.02%)</title><rect x="553.4" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="553.4" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="553.4" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.02%)</title><rect x="553.4" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="553.4" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="553.4" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (1 samples, 0.02%)</title><rect x="553.4" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="553.4" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="553.4" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.4" y="430.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="553.4" y="403.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="556.4" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="553.4" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="556.4" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="553.4" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="556.4" y="382.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="553.4" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="556.4" y="366.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="553.4" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.4" y="350.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="553.4" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="556.4" y="334.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="553.4" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.4" y="318.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="553.4" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.4" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="553.4" y="275.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="556.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.02%)</title><rect x="553.7" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.7" y="558.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/PoolEntry.compareAndSet (1 samples, 0.02%)</title><rect x="554.0" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet (1 samples, 0.02%)</title><rect x="554.0" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck (1 samples, 0.02%)</title><rect x="554.0" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.0" y="542.0"></text>
</g>
<g>
<title>Runtime1::is_instance_of(oopDesc*, oopDesc*) (1 samples, 0.02%)</title><rect x="554.0" y="515.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="557.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (2 samples, 0.05%)</title><rect x="554.3" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferQueue.transfer (2 samples, 0.05%)</title><rect x="554.3" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.3" y="558.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="554.3" y="531.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferQueue.advanceHead (1 samples, 0.02%)</title><rect x="554.5" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.5" y="542.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$QueryStatementPreparationTemplate.postProcess (2 samples, 0.05%)</title><rect x="554.8" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.8" y="734.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$StatementPreparationTemplate.postProcess (1 samples, 0.02%)</title><rect x="554.8" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.8" y="718.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.register (1 samples, 0.02%)</title><rect x="554.8" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.8" y="702.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl.setStatementFetchSize (1 samples, 0.02%)</title><rect x="555.1" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.1" y="718.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$StatementPreparationTemplate.setStatementTimeout (1 samples, 0.02%)</title><rect x="555.4" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.4" y="734.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/spi/SqlStatementLogger.logStatement (1 samples, 0.02%)</title><rect x="555.7" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.7" y="734.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/spi/SqlStatementLogger.logStatement (1 samples, 0.02%)</title><rect x="555.7" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.7" y="718.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.isDebugEnabled (1 samples, 0.02%)</title><rect x="555.7" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.7" y="702.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.isEnabled (1 samples, 0.02%)</title><rect x="555.7" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.7" y="686.0"></text>
</g>
<g>
<title>org/hibernate/internal/JdbcObserverImpl.jdbcPrepareStatementEnd (1 samples, 0.02%)</title><rect x="556.0" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.0" y="734.0"></text>
</g>
<g>
<title>org/hibernate/internal/JdbcObserverImpl.jdbcPrepareStatementStart (1 samples, 0.02%)</title><rect x="556.3" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.3" y="734.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.bindParameters (9 samples, 0.22%)</title><rect x="556.6" y="787.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.6" y="798.0"></text>
</g>
<g>
<title>org/hibernate/dialect/pagination/AbstractLimitHandler.bindLimitParametersAtEndOfQuery (1 samples, 0.02%)</title><rect x="556.8" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.8" y="782.0"></text>
</g>
<g>
<title>org/hibernate/dialect/pagination/AbstractLimitHandler.bindLimitParametersFirst (1 samples, 0.02%)</title><rect x="556.8" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.8" y="766.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/AbstractJdbcParameter.bindParameterValue (7 samples, 0.17%)</title><rect x="557.1" y="771.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.1" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/AbstractJdbcParameter.bindParameterValue (6 samples, 0.15%)</title><rect x="557.4" y="755.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.4" y="766.0"></text>
</g>
<g>
<title>org/hibernate/type/descriptor/jdbc/BasicBinder.bind (5 samples, 0.12%)</title><rect x="557.7" y="739.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.7" y="750.0"></text>
</g>
<g>
<title>org/hibernate/type/descriptor/jdbc/VarcharJdbcType$1.doBind (4 samples, 0.10%)</title><rect x="557.7" y="723.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.7" y="734.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.setString (3 samples, 0.07%)</title><rect x="557.7" y="707.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.7" y="718.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.setString (3 samples, 0.07%)</title><rect x="557.7" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.7" y="702.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.setParameter (1 samples, 0.02%)</title><rect x="557.7" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.7" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.02%)</title><rect x="557.7" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.7" y="670.0"></text>
</g>
<g>
<title>java/util/Objects.checkIndex (1 samples, 0.02%)</title><rect x="557.7" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/util/Preconditions.checkIndex (1 samples, 0.02%)</title><rect x="557.7" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.7" y="638.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.02%)</title><rect x="557.7" y="611.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="560.7" y="622.0"></text>
</g>
<g>
<title>org/h2/value/ValueVarchar.get (2 samples, 0.05%)</title><rect x="558.0" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.0" y="686.0"></text>
</g>
<g>
<title>org/h2/value/Value.cache (2 samples, 0.05%)</title><rect x="558.0" y="659.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.0" y="670.0"></text>
</g>
<g>
<title>org/hibernate/type/descriptor/java/StringJavaType.unwrap (1 samples, 0.02%)</title><rect x="558.6" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.6" y="718.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="558.9" y="723.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.9" y="734.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.isEnabled (1 samples, 0.02%)</title><rect x="558.9" y="707.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.9" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="558.9" y="691.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.9" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="558.9" y="675.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.9" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.context (1 samples, 0.02%)</title><rect x="559.1" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.1" y="798.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcCoordinatorImpl.getJdbcSessionOwner (1 samples, 0.02%)</title><rect x="559.1" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.1" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.skipRows (3 samples, 0.07%)</title><rect x="559.4" y="787.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.4" y="798.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesResultSetImpl.finishUp (6 samples, 0.15%)</title><rect x="560.3" y="883.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.3" y="894.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.release (6 samples, 0.15%)</title><rect x="560.3" y="867.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.3" y="878.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.release (6 samples, 0.15%)</title><rect x="560.3" y="851.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.3" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="561.1" y="835.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="564.1" y="846.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl.close (2 samples, 0.05%)</title><rect x="561.4" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.4" y="846.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.getMaxRows (1 samples, 0.02%)</title><rect x="561.4" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.4" y="830.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcStatement.getMaxRows (1 samples, 0.02%)</title><rect x="561.4" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.4" y="814.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.getQueryTimeout (1 samples, 0.02%)</title><rect x="561.7" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.7" y="830.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcStatement.getQueryTimeout (1 samples, 0.02%)</title><rect x="561.7" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.7" y="814.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.getQueryTimeout (1 samples, 0.02%)</title><rect x="561.7" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.7" y="798.0"></text>
</g>
<g>
<title>org/h2/command/Command.executeQuery (1 samples, 0.02%)</title><rect x="561.7" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.7" y="782.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.query (1 samples, 0.02%)</title><rect x="561.7" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.7" y="766.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.query (1 samples, 0.02%)</title><rect x="561.7" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.7" y="750.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.query (1 samples, 0.02%)</title><rect x="561.7" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.7" y="734.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.queryWithoutCacheLazyCheck (1 samples, 0.02%)</title><rect x="561.7" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.7" y="718.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.queryWithoutCache (1 samples, 0.02%)</title><rect x="561.7" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.7" y="702.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.queryFlat (1 samples, 0.02%)</title><rect x="561.7" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.7" y="686.0"></text>
</g>
<g>
<title>org/h2/result/FetchedResult.next (1 samples, 0.02%)</title><rect x="561.7" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.7" y="670.0"></text>
</g>
<g>
<title>org/h2/result/LazyResult.hasNext (1 samples, 0.02%)</title><rect x="561.7" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.7" y="654.0"></text>
</g>
<g>
<title>org/h2/command/query/Select$LazyResultQueryFlat.fetchNextRow (1 samples, 0.02%)</title><rect x="561.7" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.7" y="638.0"></text>
</g>
<g>
<title>org/h2/table/TableFilter.next (1 samples, 0.02%)</title><rect x="561.7" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.7" y="622.0"></text>
</g>
<g>
<title>org/h2/index/IndexCursor.find (1 samples, 0.02%)</title><rect x="561.7" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.7" y="606.0"></text>
</g>
<g>
<title>org/h2/index/MetaIndex.find (1 samples, 0.02%)</title><rect x="561.7" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.7" y="590.0"></text>
</g>
<g>
<title>org/h2/table/InformationSchemaTable.generateRows (1 samples, 0.02%)</title><rect x="561.7" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.7" y="574.0"></text>
</g>
<g>
<title>org/h2/table/InformationSchemaTable.settings (1 samples, 0.02%)</title><rect x="561.7" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.7" y="558.0"></text>
</g>
<g>
<title>org/h2/engine/SettingsBase.getSortedSettings (1 samples, 0.02%)</title><rect x="561.7" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.7" y="542.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="561.7" y="515.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="564.7" y="526.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="499.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="564.7" y="510.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="483.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="564.7" y="494.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="467.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="564.7" y="478.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="451.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="564.7" y="462.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="435.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="564.7" y="446.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="419.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="564.7" y="430.0"></text>
</g>
<g>
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="403.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="564.7" y="414.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, int, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="387.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="564.7" y="398.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="371.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="564.7" y="382.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="355.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="564.7" y="366.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="561.7" y="339.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="564.7" y="350.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.02%)</title><rect x="561.7" y="323.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="564.7" y="334.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesSourceProcessingStateStandardImpl.finishUp (1 samples, 0.02%)</title><rect x="562.0" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.0" y="894.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.buildCacheableSqmInterpretation (297 samples, 7.22%)</title><rect x="562.3" y="1011.0" width="85.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.3" y="1022.0">org/hibern..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="563.2" y="995.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.2" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionFactoryImpl.getQueryEngine (1 samples, 0.02%)</title><rect x="563.4" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.4" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan$CacheableSqmInterpretation.&lt;init&gt; (1 samples, 0.02%)</title><rect x="563.7" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.7" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil.createJdbcParameterBindings (17 samples, 0.41%)</title><rect x="564.0" y="995.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.0" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="564.3" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.3" y="990.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.hasNext (1 samples, 0.02%)</title><rect x="564.6" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.6" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedHashIterator.hasNext (1 samples, 0.02%)</title><rect x="564.6" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.6" y="974.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/LinkedIdentityHashMap.entrySet (5 samples, 0.12%)</title><rect x="564.9" y="979.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (5 samples, 0.12%)</title><rect x="564.9" y="963.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.10%)</title><rect x="564.9" y="947.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.9" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 0.10%)</title><rect x="564.9" y="931.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.9" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.10%)</title><rect x="564.9" y="915.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.9" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.10%)</title><rect x="564.9" y="899.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.9" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.07%)</title><rect x="564.9" y="883.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.05%)</title><rect x="565.2" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.2" y="878.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/LinkedIdentityHashMap$$Lambda$1851.0x00007f9a5ca1a678.apply (2 samples, 0.05%)</title><rect x="565.2" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.2" y="862.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/LinkedIdentityHashMap.lambda$entrySet$0 (2 samples, 0.05%)</title><rect x="565.2" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.2" y="846.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="565.4" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.4" y="830.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.02%)</title><rect x="565.7" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (1 samples, 0.02%)</title><rect x="566.0" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.0" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingsImpl.getBinding (1 samples, 0.02%)</title><rect x="566.3" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="566.3" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.3" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/JpaCriteriaParameter.hashCode (1 samples, 0.02%)</title><rect x="566.3" y="947.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.3" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan$2.getResolvedMappingModelType (1 samples, 0.02%)</title><rect x="566.6" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.6" y="990.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="566.6" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.6" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil.createValueBindings (6 samples, 0.15%)</title><rect x="566.9" y="979.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.9" y="990.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcParameterBindings.registerParametersForEachJdbcValue (6 samples, 0.15%)</title><rect x="566.9" y="963.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.9" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcParameterBindings.registerParametersForEachJdbcValue (5 samples, 0.12%)</title><rect x="567.2" y="947.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.2" y="958.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/Bindable.forEachJdbcValue (5 samples, 0.12%)</title><rect x="567.2" y="931.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.2" y="942.0"></text>
</g>
<g>
<title>org/hibernate/type/BasicType.forEachDisassembledJdbcValue (4 samples, 0.10%)</title><rect x="567.5" y="915.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.5" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcParameterBindings$$Lambda$1863.0x00007f9a5ca19978.consume (3 samples, 0.07%)</title><rect x="567.7" y="899.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.7" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcParameterBindings.createAndAddBinding (3 samples, 0.07%)</title><rect x="567.7" y="883.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.7" y="894.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/BindingTypeHelper.resolveBindType (1 samples, 0.02%)</title><rect x="568.0" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.0" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/JdbcParameterBindingImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="568.3" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.3" y="878.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil.determineParameterType (1 samples, 0.02%)</title><rect x="568.6" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.6" y="990.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil.asBindable (1 samples, 0.02%)</title><rect x="568.6" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.6" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil.generateJdbcParamsXref (24 samples, 0.58%)</title><rect x="568.9" y="995.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="569.7" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (2 samples, 0.05%)</title><rect x="569.7" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.7" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil$$Lambda$1858.0x00007f9a5ca1b620.&lt;init&gt; (1 samples, 0.02%)</title><rect x="570.0" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.0" y="958.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.hasNext (1 samples, 0.02%)</title><rect x="570.3" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.3" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedHashIterator.hasNext (1 samples, 0.02%)</title><rect x="570.3" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.3" y="974.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (1 samples, 0.02%)</title><rect x="570.6" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.6" y="990.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil$$Lambda$1858.0x00007f9a5ca1b620.apply (1 samples, 0.02%)</title><rect x="570.6" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.6" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil.lambda$generateJdbcParamsXref$0 (1 samples, 0.02%)</title><rect x="570.6" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.6" y="958.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="570.6" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.6" y="942.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/LinkedIdentityHashMap.entrySet (13 samples, 0.32%)</title><rect x="570.9" y="979.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="571.2" y="963.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.2" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (2 samples, 0.05%)</title><rect x="571.2" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.2" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="571.5" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toCollection (1 samples, 0.02%)</title><rect x="571.8" y="963.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="571.8" y="947.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.8" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (9 samples, 0.22%)</title><rect x="572.0" y="963.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.22%)</title><rect x="572.0" y="947.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.0" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (9 samples, 0.22%)</title><rect x="572.0" y="931.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.0" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.22%)</title><rect x="572.0" y="915.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.0" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (9 samples, 0.22%)</title><rect x="572.0" y="899.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.0" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (6 samples, 0.15%)</title><rect x="572.0" y="883.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.12%)</title><rect x="572.3" y="867.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (4 samples, 0.10%)</title><rect x="572.3" y="851.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$8.0x00007f9a5c043310.accept (4 samples, 0.10%)</title><rect x="572.3" y="835.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.07%)</title><rect x="572.6" y="819.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.07%)</title><rect x="572.6" y="803.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="572.6" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.6" y="798.0"></text>
</g>
<g>
<title>java/util/KeyValueHolder.hashCode (2 samples, 0.05%)</title><rect x="572.6" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.6" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/JpaCriteriaParameter.hashCode (1 samples, 0.02%)</title><rect x="572.9" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="573.2" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.2" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.02%)</title><rect x="573.2" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.2" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.linkNodeLast (1 samples, 0.02%)</title><rect x="573.2" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.2" y="766.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/LinkedIdentityHashMap$$Lambda$1851.0x00007f9a5ca1a678.apply (1 samples, 0.02%)</title><rect x="573.5" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.5" y="862.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/LinkedIdentityHashMap.lambda$entrySet$0 (1 samples, 0.02%)</title><rect x="573.5" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.5" y="846.0"></text>
</g>
<g>
<title>java/util/Map.entry (1 samples, 0.02%)</title><rect x="573.5" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.5" y="830.0"></text>
</g>
<g>
<title>java/util/KeyValueHolder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="573.5" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.5" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="573.5" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="576.5" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="573.5" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="576.5" y="782.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="573.5" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="576.5" y="766.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="573.5" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.5" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="573.5" y="723.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="576.5" y="734.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.02%)</title><rect x="573.8" y="883.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.8" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.estimateSize (1 samples, 0.02%)</title><rect x="573.8" y="867.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (2 samples, 0.05%)</title><rect x="574.0" y="883.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (2 samples, 0.05%)</title><rect x="574.0" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.0" y="878.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/LinkedIdentityHashMap$$Lambda$1855.0x00007f9a5ca1af98.get (2 samples, 0.05%)</title><rect x="574.0" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.0" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedHashSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="574.3" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.3" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil.convert (4 samples, 0.10%)</title><rect x="574.6" y="979.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.6" y="990.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcParametersList.fromList (3 samples, 0.07%)</title><rect x="574.9" y="963.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.9" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcParametersList$Builder.build (1 samples, 0.02%)</title><rect x="575.2" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.2" y="958.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcParametersList.singleton (1 samples, 0.02%)</title><rect x="575.2" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.2" y="942.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcParametersList$JdbcParametersListSingleton.&lt;init&gt; (1 samples, 0.02%)</title><rect x="575.2" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.2" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcParametersList.newBuilder (1 samples, 0.02%)</title><rect x="575.5" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.5" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.translate (180 samples, 4.37%)</title><rect x="575.8" y="995.0" width="51.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.8" y="1006.0">org/h..</text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqlAstProcessingStateImpl.getSqlExpressionResolver (1 samples, 0.02%)</title><rect x="575.8" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.8" y="990.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.accept (179 samples, 4.35%)</title><rect x="576.1" y="979.0" width="51.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="579.1" y="990.0">org/h..</text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitSelectStatement (179 samples, 4.35%)</title><rect x="576.1" y="963.0" width="51.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.1" y="974.0">org/h..</text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitSelectStatement (179 samples, 4.35%)</title><rect x="576.1" y="947.0" width="51.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.1" y="958.0">org/h..</text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitQueryPart (176 samples, 4.28%)</title><rect x="576.3" y="931.0" width="50.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="579.3" y="942.0">org/h..</text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitQueryPart (176 samples, 4.28%)</title><rect x="576.3" y="915.0" width="50.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.3" y="926.0">org/h..</text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.accept (176 samples, 4.28%)</title><rect x="576.3" y="899.0" width="50.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.3" y="910.0">org/h..</text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitQuerySpec (176 samples, 4.28%)</title><rect x="576.3" y="883.0" width="50.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.3" y="894.0">org/h..</text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitQuerySpec (176 samples, 4.28%)</title><rect x="576.3" y="867.0" width="50.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="579.3" y="878.0">org/h..</text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.popProcessingStateStack (1 samples, 0.02%)</title><rect x="577.8" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.8" y="862.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.pushProcessingState (2 samples, 0.05%)</title><rect x="578.1" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.1" y="862.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.pushProcessingState (1 samples, 0.02%)</title><rect x="578.3" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.3" y="846.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/StandardStack.push (1 samples, 0.02%)</title><rect x="578.3" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.3" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitFromClause (33 samples, 0.80%)</title><rect x="578.6" y="851.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.6" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="579.2" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="579.2" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.2" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1752.0x00007f9a5ca05f40.&lt;init&gt; (1 samples, 0.02%)</title><rect x="579.2" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.2" y="814.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="579.2" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.2" y="798.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/StandardStack.push (1 samples, 0.02%)</title><rect x="579.5" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.5" y="846.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/StandardStack.init (1 samples, 0.02%)</title><rect x="579.5" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.5" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.02%)</title><rect x="579.5" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.5" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.02%)</title><rect x="579.5" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.5" y="798.0"></text>
</g>
<g>
<title>JVM_NewArray (1 samples, 0.02%)</title><rect x="579.5" y="771.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="582.5" y="782.0"></text>
</g>
<g>
<title>Reflection::reflect_new_array(oopDesc*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="579.5" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="582.5" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/from/SqmFromClause.visitRoots (29 samples, 0.70%)</title><rect x="579.8" y="835.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.8" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (29 samples, 0.70%)</title><rect x="579.8" y="819.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.8" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1741.0x00007f9a5ca046d8.accept (2 samples, 0.05%)</title><rect x="579.8" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.8" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeFromClauseCorrelatedRoot (2 samples, 0.05%)</title><rect x="579.8" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.8" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.currentQuerySpec (1 samples, 0.02%)</title><rect x="579.8" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.8" y="782.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.02%)</title><rect x="580.1" y="771.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="583.1" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1752.0x00007f9a5ca05f40.accept (27 samples, 0.66%)</title><rect x="580.4" y="803.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.4" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeFromClauseRoot (27 samples, 0.66%)</title><rect x="580.4" y="787.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.4" y="798.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.applyBaseRestrictions (2 samples, 0.05%)</title><rect x="581.2" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.createRootTableGroup (15 samples, 0.36%)</title><rect x="581.8" y="771.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="582.7" y="755.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x00007f9a5c185000.newInvokeSpecial (1 samples, 0.02%)</title><rect x="582.7" y="739.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.7" y="750.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlAliasBase.from (1 samples, 0.02%)</title><rect x="582.9" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.9" y="766.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlAliasBaseManager.createSqlAliasBase (1 samples, 0.02%)</title><rect x="582.9" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="582.9" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.02%)</title><rect x="582.9" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="582.9" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.simpleConcat (1 samples, 0.02%)</title><rect x="582.9" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (1 samples, 0.02%)</title><rect x="582.9" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="582.9" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.9" y="654.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlAliasBaseImpl.generateNewAlias (10 samples, 0.24%)</title><rect x="583.2" y="755.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.19%)</title><rect x="583.8" y="739.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c2f5800.invoke (8 samples, 0.19%)</title><rect x="583.8" y="723.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.8" y="734.0"></text>
</g>
<g>
<title>_invokeBasic (2 samples, 0.05%)</title><rect x="584.7" y="707.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="587.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c008400.invoke (1 samples, 0.02%)</title><rect x="585.2" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="588.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c100000.invoke (1 samples, 0.02%)</title><rect x="585.5" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c100c00.invoke (1 samples, 0.02%)</title><rect x="585.8" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="585.8" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="588.8" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeJoins (1 samples, 0.02%)</title><rect x="586.1" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.1" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeExplicitJoins (1 samples, 0.02%)</title><rect x="586.1" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.1" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.registerSqmFromTableGroup (3 samples, 0.07%)</title><rect x="586.4" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.4" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/FromClauseIndex.register (2 samples, 0.05%)</title><rect x="586.4" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.4" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/FromClauseIndex.register (2 samples, 0.05%)</title><rect x="586.4" y="739.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.4" y="750.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SimpleFromClauseAccessImpl.registerTableGroup (1 samples, 0.02%)</title><rect x="586.7" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="589.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="586.7" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="586.7" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.02%)</title><rect x="586.7" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.7" y="686.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmFrom.getSqmTreats (1 samples, 0.02%)</title><rect x="587.0" y="755.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.0" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmPath.getNavigablePath (1 samples, 0.02%)</title><rect x="587.2" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/from/SqmRoot.getModel (1 samples, 0.02%)</title><rect x="587.5" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.5" y="782.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.tracef (1 samples, 0.02%)</title><rect x="587.8" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.8" y="782.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.isEnabled (1 samples, 0.02%)</title><rect x="587.8" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.8" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="587.8" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="590.8" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="587.8" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.8" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (1 samples, 0.02%)</title><rect x="587.8" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.8" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitOrderByOffsetAndFetch (2 samples, 0.05%)</title><rect x="588.1" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.1" y="862.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitSelectClause (67 samples, 1.63%)</title><rect x="588.7" y="851.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.7" y="862.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/StandardStack.pop (1 samples, 0.02%)</title><rect x="588.7" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.7" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitSelection (66 samples, 1.60%)</title><rect x="589.0" y="835.0" width="18.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="589.5" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="589.5" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="589.5" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.02%)</title><rect x="589.5" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.5" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$SingletonList.forEach (40 samples, 0.97%)</title><rect x="589.8" y="819.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.8" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1784.0x00007f9a5ca0e910.accept (40 samples, 0.97%)</title><rect x="589.8" y="803.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.8" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.lambda$visitSelection$23 (40 samples, 0.97%)</title><rect x="589.8" y="787.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.8" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/AbstractSqmPathInterpretation.createDomainResult (40 samples, 0.97%)</title><rect x="589.8" y="771.0" width="11.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.8" y="782.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.createDomainResult (40 samples, 0.97%)</title><rect x="589.8" y="755.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.8" y="766.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/AbstractEntityResultGraphNode.afterInitialize (40 samples, 0.97%)</title><rect x="589.8" y="739.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.8" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitIdentifierFetch (14 samples, 0.34%)</title><rect x="589.8" y="723.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.8" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.createFetch (12 samples, 0.29%)</title><rect x="590.1" y="707.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.1" y="718.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl.getTiming (1 samples, 0.02%)</title><rect x="590.4" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.4" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.buildFetch (10 samples, 0.24%)</title><rect x="590.7" y="691.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.7" y="702.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/FetchParent.generateFetchableFetch (10 samples, 0.24%)</title><rect x="590.7" y="675.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.7" y="686.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl.generateFetch (10 samples, 0.24%)</title><rect x="590.7" y="659.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.7" y="670.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl.resolveSqlSelection (6 samples, 0.15%)</title><rect x="591.0" y="643.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.0" y="654.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/JdbcMapping.getJdbcJavaType (1 samples, 0.02%)</title><rect x="591.5" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.5" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$SqmAliasedNodePositionTracker.resolveSqlSelection (2 samples, 0.05%)</title><rect x="591.8" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.8" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqlAstQueryPartProcessingStateImpl.resolveSqlSelection (2 samples, 0.05%)</title><rect x="591.8" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="591.8" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="591.8" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.8" y="590.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.hashCode (1 samples, 0.02%)</title><rect x="591.8" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.8" y="574.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/Expression.createDomainResultSqlSelection (1 samples, 0.02%)</title><rect x="592.1" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.1" y="606.0"></text>
</g>
<g>
<title>org/hibernate/type/AbstractStandardBasicType.getJdbcType (1 samples, 0.02%)</title><rect x="592.1" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.1" y="590.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/from/ColumnReferenceQualifier.resolveTableReference (1 samples, 0.02%)</title><rect x="592.4" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.4" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="592.4" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="595.4" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="592.4" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="595.4" y="606.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="592.4" y="579.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="595.4" y="590.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="592.4" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="595.4" y="574.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="592.4" y="547.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="595.4" y="558.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="592.4" y="531.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="595.4" y="542.0"></text>
</g>
<g>
<title>MethodData::initialize() (1 samples, 0.02%)</title><rect x="592.4" y="515.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="595.4" y="526.0"></text>
</g>
<g>
<title>BranchData::post_initialize(BytecodeStream*, MethodData*) (1 samples, 0.02%)</title><rect x="592.4" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="595.4" y="510.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/basic/BasicFetch.&lt;init&gt; (3 samples, 0.07%)</title><rect x="592.7" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.7" y="654.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/basic/BasicFetch.&lt;init&gt; (2 samples, 0.05%)</title><rect x="593.0" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.0" y="638.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl.getJavaType (1 samples, 0.02%)</title><rect x="593.3" y="611.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.3" y="622.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl$$Lambda$1104.0x00007f9a5c853540.getMappedJavaType (1 samples, 0.02%)</title><rect x="593.3" y="595.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.3" y="606.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/AbstractEntityResultGraphNode.getReferencedMappingContainer (1 samples, 0.02%)</title><rect x="593.5" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.5" y="718.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/EntityPersister.getEntityMappingType (1 samples, 0.02%)</title><rect x="593.5" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.5" y="702.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/AbstractFetchParent.afterInitialize (24 samples, 0.58%)</title><rect x="593.8" y="723.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.8" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitFetches (21 samples, 0.51%)</title><rect x="594.1" y="707.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.1" y="718.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.getFetchable (1 samples, 0.02%)</title><rect x="594.7" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.7" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.createFetch (18 samples, 0.44%)</title><rect x="595.0" y="691.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.0" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.buildFetch (8 samples, 0.19%)</title><rect x="595.0" y="675.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.0" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/FetchParent.generateFetchableFetch (8 samples, 0.19%)</title><rect x="595.0" y="659.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.0" y="670.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicAttributeMapping.generateFetch (8 samples, 0.19%)</title><rect x="595.0" y="643.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.0" y="654.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicAttributeMapping.resolveSqlSelection (7 samples, 0.17%)</title><rect x="595.0" y="627.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.0" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$SqmAliasedNodePositionTracker.resolveSqlSelection (1 samples, 0.02%)</title><rect x="595.0" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.0" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqlAstQueryPartProcessingStateImpl.resolveSqlSelection (1 samples, 0.02%)</title><rect x="595.0" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.0" y="606.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.getCreationContext (1 samples, 0.02%)</title><rect x="595.3" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.3" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.getSqlAstCreationState (1 samples, 0.02%)</title><rect x="595.6" y="611.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.6" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="595.6" y="595.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="598.6" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="595.6" y="579.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="598.6" y="590.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="595.6" y="563.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="598.6" y="574.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver.resolveSqlExpression (3 samples, 0.07%)</title><rect x="595.8" y="611.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="595.8" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="595.8" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="598.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="595.8" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="595.8" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.8" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::check_valid_for_instantiation(bool, JavaThread*) (1 samples, 0.02%)</title><rect x="595.8" y="531.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="598.8" y="542.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$SqmAliasedNodePositionTracker.resolveSqlExpression (2 samples, 0.05%)</title><rect x="596.1" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.1" y="606.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqlAstProcessingStateImpl.resolveSqlExpression (2 samples, 0.05%)</title><rect x="596.1" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="596.1" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="596.1" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.1" y="558.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver$ColumnReferenceKey.hashCode (1 samples, 0.02%)</title><rect x="596.1" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.1" y="542.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver$$Lambda$1157.0x00007f9a5c88cd58.apply (1 samples, 0.02%)</title><rect x="596.4" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.4" y="574.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver.lambda$resolveSqlExpression$0 (1 samples, 0.02%)</title><rect x="596.4" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.4" y="558.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="596.4" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.4" y="542.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicAttributeMapping.getSelectionExpression (1 samples, 0.02%)</title><rect x="596.4" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.4" y="526.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/from/ColumnReferenceQualifier.resolveTableReference (1 samples, 0.02%)</title><rect x="596.7" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.7" y="622.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/from/ColumnReferenceQualifier.getTableReference (1 samples, 0.02%)</title><rect x="596.7" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.7" y="606.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/from/StandardTableGroup.getTableReference (1 samples, 0.02%)</title><rect x="596.7" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.7" y="590.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/FromClauseAccess.getTableGroup (1 samples, 0.02%)</title><rect x="597.0" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.0" y="638.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SimpleFromClauseAccessImpl.findTableGroup (1 samples, 0.02%)</title><rect x="597.0" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.0" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.getCreationContext (1 samples, 0.02%)</title><rect x="597.3" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.3" y="686.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="597.3" y="659.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="600.3" y="670.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/internal/EntityResultImpl.resolveNavigablePath (9 samples, 0.22%)</title><rect x="597.6" y="675.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.6" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/FetchParent.resolveNavigablePath (9 samples, 0.22%)</title><rect x="597.6" y="659.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.6" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="597.6" y="643.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="600.6" y="654.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/AttributeMapping.findContainingEntityMapping (2 samples, 0.05%)</title><rect x="597.8" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.8" y="654.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/AbstractAttributeMapping.getDeclaringType (1 samples, 0.02%)</title><rect x="598.1" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.1" y="638.0"></text>
</g>
<g>
<title>org/hibernate/spi/NavigablePath.append (6 samples, 0.15%)</title><rect x="598.4" y="643.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.4" y="654.0"></text>
</g>
<g>
<title>org/hibernate/spi/NavigablePath.&lt;init&gt; (3 samples, 0.07%)</title><rect x="599.3" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.3" y="638.0"></text>
</g>
<g>
<title>org/hibernate/spi/NavigablePath.&lt;init&gt; (3 samples, 0.07%)</title><rect x="599.3" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="599.6" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c00a000.invoke (2 samples, 0.05%)</title><rect x="599.6" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="599.9" y="563.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (1 samples, 0.02%)</title><rect x="599.9" y="547.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.9" y="558.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/AbstractFetchParent.resetFetches (2 samples, 0.05%)</title><rect x="600.1" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.1" y="718.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/FetchList.containsCollectionFetches (1 samples, 0.02%)</title><rect x="600.1" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.1" y="702.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/FetchList.hasJoinFetches (1 samples, 0.02%)</title><rect x="600.4" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.4" y="702.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="600.4" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.4" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/DomainResultCreationState.visitDiscriminatorFetch (2 samples, 0.05%)</title><rect x="600.7" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.7" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.prepareForSelection (5 samples, 0.12%)</title><rect x="601.3" y="819.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.3" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.registerEntityNameProjectionUsage (4 samples, 0.10%)</title><rect x="601.3" y="803.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.3" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.registerEntityNameUsage (2 samples, 0.05%)</title><rect x="601.9" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.9" y="798.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.isPolymorphic (1 samples, 0.02%)</title><rect x="602.2" y="771.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SimpleFromClauseAccessImpl.findTableGroupForGetOrCreate (1 samples, 0.02%)</title><rect x="602.4" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.4" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="602.4" y="787.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="605.4" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="602.4" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="605.4" y="782.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="602.4" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="605.4" y="766.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="602.4" y="739.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="605.4" y="750.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;LoopPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="602.4" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="605.4" y="734.0"></text>
</g>
<g>
<title>LoopPredicate::apply(methodHandle const&amp;, CompLevel, int, int) [clone .isra.0] (1 samples, 0.02%)</title><rect x="602.4" y="707.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="605.4" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/from/SqmRoot.accept (18 samples, 0.44%)</title><rect x="602.7" y="819.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.7" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitRootPath (18 samples, 0.44%)</title><rect x="602.7" y="803.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.7" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitRootPath (18 samples, 0.44%)</title><rect x="602.7" y="787.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.7" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitTableGroup (17 samples, 0.41%)</title><rect x="603.0" y="771.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.0" y="782.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.getIdentifierMapping (1 samples, 0.02%)</title><rect x="603.3" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.3" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/EntityValuedPathInterpretation.from (15 samples, 0.36%)</title><rect x="603.6" y="755.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.6" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/EntityValuedPathInterpretation.&lt;init&gt; (1 samples, 0.02%)</title><rect x="604.4" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.4" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/AbstractSqmPathInterpretation.&lt;init&gt; (1 samples, 0.02%)</title><rect x="604.4" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.4" y="734.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver.resolveSqlExpression (11 samples, 0.27%)</title><rect x="604.7" y="739.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="604.7" y="723.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (3 samples, 0.07%)</title><rect x="604.7" y="707.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (3 samples, 0.07%)</title><rect x="604.7" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (3 samples, 0.07%)</title><rect x="604.7" y="675.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.7" y="686.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (2 samples, 0.05%)</title><rect x="604.7" y="659.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="607.7" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.02%)</title><rect x="604.7" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="607.7" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="604.7" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="607.7" y="638.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWordImpl**) const (1 samples, 0.02%)</title><rect x="604.7" y="611.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="607.7" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::check_valid_for_instantiation(bool, JavaThread*) (1 samples, 0.02%)</title><rect x="605.0" y="643.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="608.0" y="654.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (1 samples, 0.02%)</title><rect x="605.3" y="659.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="608.3" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$SqmAliasedNodePositionTracker.resolveSqlExpression (4 samples, 0.10%)</title><rect x="605.6" y="723.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.6" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqlAstProcessingStateImpl.resolveSqlExpression (4 samples, 0.10%)</title><rect x="605.6" y="707.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="605.6" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="605.9" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="605.9" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.9" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver$ColumnReferenceKey.hashCode (1 samples, 0.02%)</title><rect x="605.9" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.9" y="670.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver$$Lambda$1157.0x00007f9a5c88cd58.apply (2 samples, 0.05%)</title><rect x="606.2" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.2" y="702.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver.lambda$resolveSqlExpression$0 (2 samples, 0.05%)</title><rect x="606.2" y="675.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.2" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.&lt;init&gt; (2 samples, 0.05%)</title><rect x="606.2" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.2" y="670.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/SelectableMapping.getSelectablePath (2 samples, 0.05%)</title><rect x="606.2" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.2" y="654.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/SelectableMapping.getSelectableName (1 samples, 0.02%)</title><rect x="606.2" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.2" y="638.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/BasicEntityIdentifierMappingImpl.getSelectionExpression (1 samples, 0.02%)</title><rect x="606.2" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.2" y="622.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/SelectablePath.&lt;init&gt; (1 samples, 0.02%)</title><rect x="606.5" y="627.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.02%)</title><rect x="606.5" y="611.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.5" y="622.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.02%)</title><rect x="606.5" y="595.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="609.5" y="606.0"></text>
</g>
<g>
<title>java_lang_String::as_unicode_string(oopDesc*, int&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="606.5" y="579.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="609.5" y="590.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver.createColumnReferenceKey (4 samples, 0.10%)</title><rect x="606.7" y="723.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.7" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="606.7" y="707.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="609.7" y="718.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/SelectableMapping.getSelectablePath (3 samples, 0.07%)</title><rect x="607.0" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.0" y="718.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/SelectablePath.&lt;init&gt; (3 samples, 0.07%)</title><rect x="607.0" y="691.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.intern (2 samples, 0.05%)</title><rect x="607.3" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.3" y="686.0"></text>
</g>
<g>
<title>JVM_InternString (2 samples, 0.05%)</title><rect x="607.3" y="659.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="610.3" y="670.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, JavaThread*) (2 samples, 0.05%)</title><rect x="607.3" y="643.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="610.3" y="654.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short const*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="607.3" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="610.3" y="638.0"></text>
</g>
<g>
<title>java_lang_String::as_unicode_string(oopDesc*, int&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="607.6" y="627.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="610.6" y="638.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="607.6" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="610.6" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitWhereClause (64 samples, 1.56%)</title><rect x="607.9" y="851.0" width="18.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.9" y="862.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmJunctionPredicate.accept (62 samples, 1.51%)</title><rect x="608.5" y="835.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.5" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitJunctionPredicate (62 samples, 1.51%)</title><rect x="608.5" y="819.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.5" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitJunctionPredicate (62 samples, 1.51%)</title><rect x="608.5" y="803.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.5" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmComparisonPredicate.accept (61 samples, 1.48%)</title><rect x="608.7" y="787.0" width="17.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.7" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitComparisonPredicate (60 samples, 1.46%)</title><rect x="609.0" y="771.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.0" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitComparisonPredicate (60 samples, 1.46%)</title><rect x="609.0" y="755.0" width="17.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="609.0" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (2 samples, 0.05%)</title><rect x="609.3" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="609.3" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="609.3" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.3" y="702.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="609.3" y="675.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="612.3" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.02%)</title><rect x="609.3" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="612.3" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="609.3" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="612.3" y="654.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="609.3" y="627.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="612.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.constructorMethod (1 samples, 0.02%)</title><rect x="609.6" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="609.6" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.6" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.getBooleanType (1 samples, 0.02%)</title><rect x="609.9" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.9" y="750.0"></text>
</g>
<g>
<title>org/hibernate/type/spi/TypeConfiguration.getBasicTypeForJavaType (1 samples, 0.02%)</title><rect x="609.9" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.9" y="734.0"></text>
</g>
<g>
<title>org/hibernate/type/spi/TypeConfiguration.getBasicTypeForJavaType (1 samples, 0.02%)</title><rect x="609.9" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="609.9" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.9" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.accept (24 samples, 0.58%)</title><rect x="610.2" y="739.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.2" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitBasicValuedPath (24 samples, 0.58%)</title><rect x="610.2" y="723.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.2" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitBasicValuedPath (24 samples, 0.58%)</title><rect x="610.2" y="707.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.2" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.prepareReusablePath (20 samples, 0.49%)</title><rect x="610.2" y="691.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.2" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.prepareReusablePath (20 samples, 0.49%)</title><rect x="610.2" y="675.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="610.2" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.2" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1801.0x00007f9a5ca116d0.get (12 samples, 0.29%)</title><rect x="610.5" y="659.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.5" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.lambda$visitBasicValuedPath$50 (12 samples, 0.29%)</title><rect x="610.5" y="643.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/BasicValuedPathInterpretation.from (12 samples, 0.29%)</title><rect x="610.5" y="627.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.5" y="638.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.findSubPart (3 samples, 0.07%)</title><rect x="611.6" y="611.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.6" y="622.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/EntityDiscriminatorMapping.matchesRoleName (2 samples, 0.05%)</title><rect x="611.9" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="611.9" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="612.2" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.2" y="574.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.getSqlExpressionResolver (1 samples, 0.02%)</title><rect x="612.5" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.5" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.getCurrentProcessingState (1 samples, 0.02%)</title><rect x="612.5" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.5" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="612.5" y="579.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="615.5" y="590.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="612.5" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="615.5" y="574.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver.resolveSqlExpression (4 samples, 0.10%)</title><rect x="612.8" y="611.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="612.8" y="595.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="612.8" y="579.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="612.8" y="563.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="612.8" y="547.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.8" y="558.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="612.8" y="531.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="615.8" y="542.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="612.8" y="515.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="615.8" y="526.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$SqmAliasedNodePositionTracker.resolveSqlExpression (1 samples, 0.02%)</title><rect x="613.0" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.0" y="606.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqlAstProcessingStateImpl.resolveSqlExpression (1 samples, 0.02%)</title><rect x="613.0" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.0" y="590.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver.createColumnReferenceKey (2 samples, 0.05%)</title><rect x="613.3" y="595.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.3" y="606.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/SqlExpressionResolver.createColumnReferenceKey (1 samples, 0.02%)</title><rect x="613.6" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.6" y="590.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/from/AbstractTableReference.getIdentificationVariable (1 samples, 0.02%)</title><rect x="613.6" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.6" y="574.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.getCurrentClauseStack (1 samples, 0.02%)</title><rect x="613.9" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.9" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.prepareReusablePath (6 samples, 0.15%)</title><rect x="614.2" y="659.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.2" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="614.2" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="617.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="614.2" y="627.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="617.2" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="614.2" y="611.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="617.2" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="614.2" y="595.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="617.2" y="606.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="614.2" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="617.2" y="590.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(JavaThread*) (1 samples, 0.02%)</title><rect x="614.2" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="617.2" y="574.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="614.2" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="617.2" y="558.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, JavaThread*) (1 samples, 0.02%)</title><rect x="614.2" y="531.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="617.2" y="542.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.registerPathAttributeEntityNameUsage (5 samples, 0.12%)</title><rect x="614.5" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.findAttributeMapping (1 samples, 0.02%)</title><rect x="615.1" y="627.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.1" y="638.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/ImmutableAttributeMappingsMap.get (1 samples, 0.02%)</title><rect x="615.1" y="611.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="615.1" y="595.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="615.1" y="579.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="615.1" y="563.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.1" y="574.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.registerEntityNameUsage (1 samples, 0.02%)</title><rect x="615.3" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.3" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.registerEntityNameUsage (1 samples, 0.02%)</title><rect x="615.3" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.3" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmPath.getResolvedModel (1 samples, 0.02%)</title><rect x="615.6" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.6" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmSimplePath.getModel (1 samples, 0.02%)</title><rect x="615.6" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.6" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getNodeType (2 samples, 0.05%)</title><rect x="615.9" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.9" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getReferencedPathSource (2 samples, 0.05%)</title><rect x="615.9" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.9" y="686.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmSimplePath.getReferencedPathSource (2 samples, 0.05%)</title><rect x="615.9" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.9" y="670.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/SingularAttributeImpl.getPathSource (1 samples, 0.02%)</title><rect x="615.9" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.9" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmPath.getNodeType (1 samples, 0.02%)</title><rect x="616.2" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.2" y="654.0"></text>
</g>
<g>
<title>org/hibernate/type/spi/TypeConfiguration.isDuration (2 samples, 0.05%)</title><rect x="616.5" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.5" y="702.0"></text>
</g>
<g>
<title>org/hibernate/type/spi/TypeConfiguration.matchesJavaType (2 samples, 0.05%)</title><rect x="616.5" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.02%)</title><rect x="616.8" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.8" y="670.0"></text>
</g>
<g>
<title>jni_IsAssignableFrom (1 samples, 0.02%)</title><rect x="616.8" y="643.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="619.8" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/JpaCriteriaParameter.accept (30 samples, 0.73%)</title><rect x="617.1" y="739.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.1" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitJpaCriteriaParameter (30 samples, 0.73%)</title><rect x="617.1" y="723.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.1" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeSqmParameter (30 samples, 0.73%)</title><rect x="617.1" y="707.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.1" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeSingleSqmParameter (29 samples, 0.70%)</title><rect x="617.1" y="691.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.1" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeSqmParameter (21 samples, 0.51%)</title><rect x="617.1" y="675.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="617.9" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="617.9" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="617.9" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="617.9" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="617.9" y="595.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="620.9" y="606.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2 samples, 0.05%)</title><rect x="618.2" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.2" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.get (1 samples, 0.02%)</title><rect x="618.2" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.2" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1833.0x00007f9a5ca1cd50.apply (1 samples, 0.02%)</title><rect x="618.5" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingImpl.setType (2 samples, 0.05%)</title><rect x="618.8" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.8" y="670.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="619.1" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="622.1" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="619.1" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="622.1" y="638.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="619.1" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="622.1" y="622.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="619.1" y="595.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="622.1" y="606.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;CallPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="619.1" y="579.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="622.1" y="590.0"></text>
</g>
<g>
<title>CallPredicate::apply(methodHandle const&amp;, CompLevel, int, int) (1 samples, 0.02%)</title><rect x="619.1" y="563.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="622.1" y="574.0"></text>
</g>
<g>
<title>CodeHeap::max_capacity() const (1 samples, 0.02%)</title><rect x="619.1" y="547.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="622.1" y="558.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.replaceJdbcParametersType (3 samples, 0.07%)</title><rect x="619.4" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.4" y="670.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/BasicValuedModelPart.getSingleJdbcMapping (3 samples, 0.07%)</title><rect x="619.4" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.4" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.05%)</title><rect x="619.4" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="622.4" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (2 samples, 0.05%)</title><rect x="619.4" y="611.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="622.4" y="622.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="619.6" y="595.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="622.6" y="606.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="619.6" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="622.6" y="590.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/BasicValuedMapping.getSingleJdbcMapping (1 samples, 0.02%)</title><rect x="619.9" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.9" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="619.9" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="622.9" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="619.9" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="622.9" y="606.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="619.9" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="622.9" y="590.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="619.9" y="563.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="622.9" y="574.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 0.02%)</title><rect x="619.9" y="547.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="622.9" y="558.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.resolveSqmParameter (7 samples, 0.17%)</title><rect x="620.2" y="659.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="620.5" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="620.5" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="620.5" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="620.5" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.5" y="606.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="620.5" y="579.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="623.5" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.02%)</title><rect x="620.5" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="623.5" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="620.5" y="547.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="623.5" y="558.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/BasicValuedModelPart.forEachSelectable (5 samples, 0.12%)</title><rect x="620.8" y="643.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.8" y="654.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/BasicValuedModelPart.getJdbcTypeCount (1 samples, 0.02%)</title><rect x="620.8" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.8" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1830.0x00007f9a5ca1c8c0.accept (4 samples, 0.10%)</title><rect x="621.1" y="627.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.1" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.lambda$resolveSqmParameter$83 (4 samples, 0.10%)</title><rect x="621.1" y="611.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.1" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1813.0x00007f9a5ca164b0.accept (1 samples, 0.02%)</title><rect x="621.4" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.4" y="606.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.lambda$consumeSqmParameter$80 (1 samples, 0.02%)</title><rect x="621.4" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.4" y="590.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1810.0x00007f9a5ca15e10.accept (1 samples, 0.02%)</title><rect x="621.4" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.4" y="574.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/SqlTypedMappingJdbcParameter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="621.7" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.7" y="606.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqmParameterInterpretation.&lt;init&gt; (1 samples, 0.02%)</title><rect x="622.2" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.2" y="670.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/JdbcParametersImpl.addParameters (2 samples, 0.05%)</title><rect x="622.5" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.5" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.02%)</title><rect x="622.8" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.8" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="622.8" y="627.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="625.8" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.determineValueMapping (8 samples, 0.19%)</title><rect x="623.1" y="675.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.1" y="686.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingsImpl.getBinding (1 samples, 0.02%)</title><rect x="624.2" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="624.2" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.2" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/JpaCriteriaParameter.hashCode (1 samples, 0.02%)</title><rect x="624.2" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.2" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.determineValueMapping (3 samples, 0.07%)</title><rect x="624.5" y="659.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.5" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.determineValueMapping (3 samples, 0.07%)</title><rect x="624.5" y="643.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmMappingModelHelper.resolveMappingModelExpressible (3 samples, 0.07%)</title><rect x="624.5" y="627.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.5" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmMappingModelHelper.resolveSqmPath (3 samples, 0.07%)</title><rect x="624.5" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.5" y="622.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.findSubPart (2 samples, 0.05%)</title><rect x="624.8" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.8" y="606.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/internal/ImmutableAttributeMappingsMap.get (1 samples, 0.02%)</title><rect x="624.8" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.8" y="590.0"></text>
</g>
<g>
<title>org/jboss/logging/DelegatingBasicLogger.tracef (1 samples, 0.02%)</title><rect x="625.1" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.1" y="590.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.logf (1 samples, 0.02%)</title><rect x="625.1" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.1" y="574.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.isEnabled (1 samples, 0.02%)</title><rect x="625.1" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.1" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="625.1" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.1" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.02%)</title><rect x="625.1" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.1" y="526.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/SqmJpaCriteriaParameterWrapper.allowMultiValuedBinding (1 samples, 0.02%)</title><rect x="625.4" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.4" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmComparisonPredicate.getSqmOperator (1 samples, 0.02%)</title><rect x="625.7" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.7" y="750.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/predicate/ComparisonPredicate.&lt;init&gt; (1 samples, 0.02%)</title><rect x="626.0" y="739.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.0" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqlAstQueryPartProcessingStateImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="626.2" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.2" y="862.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqlAstProcessingStateImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="626.2" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.2" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1724.0x00007f9a5ca01650.apply (1 samples, 0.02%)</title><rect x="626.2" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.2" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.getQuerySource (1 samples, 0.02%)</title><rect x="626.5" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.5" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/select/SelectStatement.&lt;init&gt; (2 samples, 0.05%)</title><rect x="626.8" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.8" y="942.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/AbstractStatement.&lt;init&gt; (1 samples, 0.02%)</title><rect x="627.1" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.1" y="926.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/StandardSqmTranslation.getSqlAst (1 samples, 0.02%)</title><rect x="627.4" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.4" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/StandardSqmTranslation.getSqmParameterMappingModelTypeResolutions (1 samples, 0.02%)</title><rect x="627.7" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.7" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/StandardSqmTranslatorFactory.createSelectTranslator (10 samples, 0.24%)</title><rect x="628.0" y="995.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.0" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/StandardSqmTranslator.&lt;init&gt; (10 samples, 0.24%)</title><rect x="628.0" y="979.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.0" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="628.0" y="963.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="631.0" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.&lt;init&gt; (9 samples, 0.22%)</title><rect x="628.2" y="963.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.2" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="630.0" y="947.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="633.0" y="958.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/StandardStack.push (2 samples, 0.05%)</title><rect x="630.3" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.3" y="958.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/StandardStack.init (2 samples, 0.05%)</title><rect x="630.3" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.3" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.02%)</title><rect x="630.5" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.5" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.02%)</title><rect x="630.5" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.5" y="910.0"></text>
</g>
<g>
<title>JVM_NewArray (1 samples, 0.02%)</title><rect x="630.5" y="883.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="633.5" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, JavaThread*) (1 samples, 0.02%)</title><rect x="630.5" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="633.5" y="878.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWordImpl**) const (1 samples, 0.02%)</title><rect x="630.5" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="633.5" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.translate (52 samples, 1.26%)</title><rect x="630.8" y="995.0" width="14.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.8" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/LockOptions.makeCopy (1 samples, 0.02%)</title><rect x="631.4" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.4" y="990.0"></text>
</g>
<g>
<title>org/hibernate/LockOptions.copy (1 samples, 0.02%)</title><rect x="631.4" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.4" y="974.0"></text>
</g>
<g>
<title>org/hibernate/LockOptions.setFollowOnLocking (1 samples, 0.02%)</title><rect x="631.4" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.4" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/Limit.makeCopy (1 samples, 0.02%)</title><rect x="631.7" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.7" y="990.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/Limit.&lt;init&gt; (1 samples, 0.02%)</title><rect x="631.7" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.7" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.translateSelect (48 samples, 1.17%)</title><rect x="632.0" y="979.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.0" y="990.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="632.0" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.0" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.buildJdbcValuesMappingProducer (2 samples, 0.05%)</title><rect x="632.3" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.3" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesMappingProducerProviderStandard.buildMappingProducer (1 samples, 0.02%)</title><rect x="632.5" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.5" y="958.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesMappingProducerStandard.&lt;init&gt; (1 samples, 0.02%)</title><rect x="632.5" y="931.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.5" y="942.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/StandardJdbcValuesMapping.&lt;init&gt; (1 samples, 0.02%)</title><rect x="632.5" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.5" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="632.5" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.5" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.getRowsToSkip (2 samples, 0.05%)</title><rect x="632.8" y="963.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.8" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.hasLimit (1 samples, 0.02%)</title><rect x="632.8" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.8" y="958.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/select/SelectStatement.getQueryPart (1 samples, 0.02%)</title><rect x="633.1" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.1" y="958.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitSelectStatement (41 samples, 1.00%)</title><rect x="633.4" y="963.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.4" y="974.0"></text>
</g>
<g>
<title>org/hibernate/dialect/H2SqlAstTranslator.visitCteContainer (5 samples, 0.12%)</title><rect x="633.4" y="947.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.4" y="958.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.withParameterRenderingMode (4 samples, 0.10%)</title><rect x="633.7" y="931.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.7" y="942.0"></text>
</g>
<g>
<title>org/hibernate/dialect/H2SqlAstTranslator$$Lambda$1161.0x00007f9a5c897290.run (3 samples, 0.07%)</title><rect x="634.0" y="915.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.0" y="926.0"></text>
</g>
<g>
<title>org/hibernate/dialect/H2SqlAstTranslator.lambda$visitCteContainer$2 (2 samples, 0.05%)</title><rect x="634.3" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.3" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitCteContainer (2 samples, 0.05%)</title><rect x="634.3" y="883.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.3" y="894.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="634.3" y="867.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.3" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.02%)</title><rect x="634.6" y="867.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.6" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/select/QuerySpec.accept (35 samples, 0.85%)</title><rect x="634.8" y="947.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.8" y="958.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitQuerySpec (35 samples, 0.85%)</title><rect x="634.8" y="931.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.8" y="942.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitFromClause (9 samples, 0.22%)</title><rect x="636.3" y="915.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.3" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderFromClauseRoot (8 samples, 0.19%)</title><rect x="636.6" y="899.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.6" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderRootTableGroup (7 samples, 0.17%)</title><rect x="636.8" y="883.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.8" y="894.0"></text>
</g>
<g>
<title>org/hibernate/dialect/H2SqlAstTranslator.renderPrimaryTableReference (5 samples, 0.12%)</title><rect x="637.1" y="867.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.1" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderPrimaryTableReference (5 samples, 0.12%)</title><rect x="637.1" y="851.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.1" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderNamedTableReference (5 samples, 0.12%)</title><rect x="637.1" y="835.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.1" y="846.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.registerAffectedTable (1 samples, 0.02%)</title><rect x="637.4" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.4" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderTableReferenceIdentificationVariable (3 samples, 0.07%)</title><rect x="637.7" y="819.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.7" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.append (1 samples, 0.02%)</title><rect x="638.3" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.3" y="814.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.processNestedTableGroupJoins (1 samples, 0.02%)</title><rect x="638.6" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.6" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitHavingClause (1 samples, 0.02%)</title><rect x="638.9" y="915.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.9" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitSelectClause (10 samples, 0.24%)</title><rect x="639.1" y="915.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.1" y="926.0"></text>
</g>
<g>
<title>org/hibernate/dialect/H2SqlAstTranslator.visitSqlSelections (10 samples, 0.24%)</title><rect x="639.1" y="899.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.1" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitSqlSelections (10 samples, 0.24%)</title><rect x="639.1" y="883.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.1" y="894.0"></text>
</g>
<g>
<title>org/hibernate/dialect/H2Dialect.getGroupBySelectItemReferenceStrategy (1 samples, 0.02%)</title><rect x="639.7" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.7" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitSqlSelection (7 samples, 0.17%)</title><rect x="640.0" y="867.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.0" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitSqlSelectExpression (7 samples, 0.17%)</title><rect x="640.0" y="851.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.0" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderSelectExpression (7 samples, 0.17%)</title><rect x="640.0" y="835.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.0" y="846.0"></text>
</g>
<g>
<title>org/hibernate/dialect/H2SqlAstTranslator.renderExpressionAsClauseItem (6 samples, 0.15%)</title><rect x="640.3" y="819.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.3" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.accept (6 samples, 0.15%)</title><rect x="640.3" y="803.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.3" y="814.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitColumnReference (6 samples, 0.15%)</title><rect x="640.3" y="787.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.3" y="798.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.getDmlTargetTableAlias (1 samples, 0.02%)</title><rect x="640.3" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.3" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.appendReadExpression (5 samples, 0.12%)</title><rect x="640.6" y="771.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.6" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.appendReadExpression (5 samples, 0.12%)</title><rect x="640.6" y="755.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.6" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="640.6" y="739.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="643.6" y="750.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="640.6" y="723.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="643.6" y="734.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="640.6" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="643.6" y="718.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="640.6" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="643.6" y="702.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 0.02%)</title><rect x="640.6" y="675.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="643.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="640.9" y="739.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="640.9" y="723.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="640.9" y="707.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="640.9" y="691.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.9" y="702.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="640.9" y="675.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="643.9" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.appendReadExpression (3 samples, 0.07%)</title><rect x="641.1" y="739.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.1" y="750.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/StringHelper.replace (1 samples, 0.02%)</title><rect x="641.7" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.7" y="734.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/StringHelper.replace (1 samples, 0.02%)</title><rect x="641.7" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.7" y="718.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/StringHelper.replace (1 samples, 0.02%)</title><rect x="641.7" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.7" y="702.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/StringHelper.indexOfPlaceHolder (1 samples, 0.02%)</title><rect x="641.7" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.7" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitWhereClause (10 samples, 0.24%)</title><rect x="642.0" y="915.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.0" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/predicate/Junction.accept (9 samples, 0.22%)</title><rect x="642.0" y="899.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.0" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitJunction (9 samples, 0.22%)</title><rect x="642.0" y="883.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.0" y="894.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.appendSql (1 samples, 0.02%)</title><rect x="642.0" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.0" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitJunctionPredicate (8 samples, 0.19%)</title><rect x="642.3" y="867.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.3" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/predicate/ComparisonPredicate.accept (8 samples, 0.19%)</title><rect x="642.3" y="851.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.3" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitRelationalPredicate (8 samples, 0.19%)</title><rect x="642.3" y="835.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.3" y="846.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderComparison (7 samples, 0.17%)</title><rect x="642.3" y="819.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.3" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderComparisonStandard (7 samples, 0.17%)</title><rect x="642.3" y="803.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.3" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/BasicValuedPathInterpretation.accept (3 samples, 0.07%)</title><rect x="642.3" y="787.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.3" y="798.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.accept (3 samples, 0.07%)</title><rect x="642.3" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.3" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitColumnReference (2 samples, 0.05%)</title><rect x="642.6" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.6" y="766.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.appendReadExpression (2 samples, 0.05%)</title><rect x="642.6" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.6" y="750.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.appendReadExpression (2 samples, 0.05%)</title><rect x="642.6" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="642.6" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="642.6" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="642.6" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="642.6" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.6" y="670.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="642.6" y="643.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="645.6" y="654.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/ColumnReference.appendReadExpression (1 samples, 0.02%)</title><rect x="642.9" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.9" y="718.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/StringHelper.replace (1 samples, 0.02%)</title><rect x="642.9" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.9" y="702.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/StringHelper.replace (1 samples, 0.02%)</title><rect x="642.9" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.9" y="686.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/StringHelper.replace (1 samples, 0.02%)</title><rect x="642.9" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.9" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqmParameterInterpretation.accept (2 samples, 0.05%)</title><rect x="643.2" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.2" y="798.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/AbstractJdbcParameter.accept (2 samples, 0.05%)</title><rect x="643.2" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitParameter (2 samples, 0.05%)</title><rect x="643.2" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.2" y="766.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitParameterAsParameter (2 samples, 0.05%)</title><rect x="643.2" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.2" y="750.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderParameterAsParameter (2 samples, 0.05%)</title><rect x="643.2" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.2" y="734.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderParameterAsParameter (1 samples, 0.02%)</title><rect x="643.2" y="707.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.2" y="718.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/AbstractJdbcParameter.getExpressionType (1 samples, 0.02%)</title><rect x="643.4" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.4" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqmParameterInterpretation.getSqlTuple (1 samples, 0.02%)</title><rect x="643.7" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.7" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqmParameterInterpretation.getResolvedExpression (1 samples, 0.02%)</title><rect x="643.7" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.7" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqmParameterInterpretation.determineResolvedExpression (1 samples, 0.02%)</title><rect x="643.7" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.7" y="766.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitParameter (1 samples, 0.02%)</title><rect x="643.7" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.7" y="750.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitParameterAsParameter (1 samples, 0.02%)</title><rect x="643.7" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.7" y="734.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/JdbcParametersImpl.addParameter (1 samples, 0.02%)</title><rect x="643.7" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.7" y="718.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.renderParameterAsParameter (1 samples, 0.02%)</title><rect x="643.7" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.7" y="702.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator$$Lambda$1162.0x00007f9a5c897af0.apply (1 samples, 0.02%)</title><rect x="643.7" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.7" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.matchMutationStatementNoInsertSelect (1 samples, 0.02%)</title><rect x="643.7" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.7" y="670.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.02%)</title><rect x="643.7" y="643.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="646.7" y="654.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.appendSql (1 samples, 0.02%)</title><rect x="644.0" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.0" y="798.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/SqlTupleContainer.getSqlTuple (1 samples, 0.02%)</title><rect x="644.3" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.3" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqmParameterInterpretation.getSqlTuple (1 samples, 0.02%)</title><rect x="644.3" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.3" y="814.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/predicate/Junction.isEmpty (1 samples, 0.02%)</title><rect x="644.6" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.6" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/select/SelectStatement.getQueryPart (1 samples, 0.02%)</title><rect x="644.9" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.9" y="958.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcOperationQuerySelect.&lt;init&gt; (1 samples, 0.02%)</title><rect x="645.2" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.2" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/DomainResultGraphPrinter.logDomainResultGraph (1 samples, 0.02%)</title><rect x="645.5" y="963.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.5" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/DomainResultGraphPrinter.logDomainResultGraph (1 samples, 0.02%)</title><rect x="645.5" y="947.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.5" y="958.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.isDebugEnabled (1 samples, 0.02%)</title><rect x="645.5" y="931.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.5" y="942.0"></text>
</g>
<g>
<title>org/jboss/logging/Slf4jLocationAwareLogger.isEnabled (1 samples, 0.02%)</title><rect x="645.5" y="915.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.5" y="926.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (1 samples, 0.02%)</title><rect x="645.5" y="899.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.5" y="910.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (1 samples, 0.02%)</title><rect x="645.5" y="883.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.5" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (1 samples, 0.02%)</title><rect x="645.5" y="867.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.5" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (1 samples, 0.02%)</title><rect x="645.5" y="851.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (1 samples, 0.02%)</title><rect x="645.5" y="835.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.getArray (1 samples, 0.02%)</title><rect x="645.5" y="819.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.5" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/StandardSqlAstTranslatorFactory.buildSelectTranslator (6 samples, 0.15%)</title><rect x="645.7" y="995.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.7" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/dialect/H2Dialect$1.buildTranslator (6 samples, 0.15%)</title><rect x="645.7" y="979.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.7" y="990.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="646.0" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.0" y="974.0"></text>
</g>
<g>
<title>org/hibernate/dialect/H2SqlAstTranslator.&lt;init&gt; (4 samples, 0.10%)</title><rect x="646.3" y="963.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.3" y="974.0"></text>
</g>
<g>
<title>org/hibernate/dialect/SqlAstTranslatorWithMerge.&lt;init&gt; (3 samples, 0.07%)</title><rect x="646.6" y="947.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.6" y="958.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.&lt;init&gt; (3 samples, 0.07%)</title><rect x="646.6" y="931.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.6" y="942.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="647.2" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.2" y="926.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.resolveSelectQueryPlan (24 samples, 0.58%)</title><rect x="647.5" y="1043.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="650.5" y="1054.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.buildSelectQueryPlan (22 samples, 0.53%)</title><rect x="647.5" y="1027.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.5" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/query/hql/internal/QuerySplitter.split (17 samples, 0.41%)</title><rect x="647.5" y="1011.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.5" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/query/hql/internal/QuerySplitter.findUnmappedPolymorphicReference (17 samples, 0.41%)</title><rect x="647.5" y="995.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.5" y="1006.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.12%)</title><rect x="647.5" y="979.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (2 samples, 0.05%)</title><rect x="647.5" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="647.7" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="647.7" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.7" y="942.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.07%)</title><rect x="648.0" y="963.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.05%)</title><rect x="648.3" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.3" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (10 samples, 0.24%)</title><rect x="648.9" y="979.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.24%)</title><rect x="648.9" y="963.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.02%)</title><rect x="649.2" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.2" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="649.2" y="931.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="652.2" y="942.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (8 samples, 0.19%)</title><rect x="649.5" y="947.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.5" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="649.5" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="652.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.17%)</title><rect x="649.8" y="931.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.8" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.17%)</title><rect x="649.8" y="915.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (7 samples, 0.17%)</title><rect x="649.8" y="899.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.8" y="910.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.05%)</title><rect x="649.8" y="883.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (2 samples, 0.05%)</title><rect x="649.8" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.getFence (2 samples, 0.05%)</title><rect x="649.8" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.02%)</title><rect x="650.3" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.02%)</title><rect x="650.3" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.10%)</title><rect x="650.6" y="883.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.6" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.tryAdvance (3 samples, 0.07%)</title><rect x="650.6" y="867.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.05%)</title><rect x="650.9" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.9" y="862.0"></text>
</g>
<g>
<title>org/hibernate/query/hql/internal/QuerySplitter$$Lambda$1696.0x00007f9a5c9f22d8.test (2 samples, 0.05%)</title><rect x="650.9" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.9" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/hql/internal/QuerySplitter.lambda$findUnmappedPolymorphicReference$0 (2 samples, 0.05%)</title><rect x="650.9" y="819.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.9" y="830.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="651.2" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1 samples, 0.02%)</title><rect x="651.5" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.5" y="878.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.getRoots (2 samples, 0.05%)</title><rect x="651.8" y="979.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="651.8" y="963.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.8" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.02%)</title><rect x="651.8" y="947.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.8" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="651.8" y="931.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.8" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="651.8" y="915.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="651.8" y="899.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.02%)</title><rect x="651.8" y="883.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="652.0" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.0" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.buildConcreteSelectQueryPlan (5 samples, 0.12%)</title><rect x="652.3" y="1011.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.3" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.&lt;init&gt; (5 samples, 0.12%)</title><rect x="652.3" y="995.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="652.6" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.6" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="652.6" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.6" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="652.6" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="652.6" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.6" y="942.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="652.6" y="915.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="655.6" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2646116ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 2646116ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="652.6" y="899.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="655.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x00007f9a5c12c000.newInvokeSpecial (1 samples, 0.02%)</title><rect x="652.9" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.9" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.determineRowTransformer (2 samples, 0.05%)</title><rect x="653.2" y="979.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.2" y="990.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.singleSelection (1 samples, 0.02%)</title><rect x="653.5" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.5" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (1 samples, 0.02%)</title><rect x="653.5" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.5" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (1 samples, 0.02%)</title><rect x="653.5" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.5" y="942.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmInterpretationsKey.createInterpretationsKey (2 samples, 0.05%)</title><rect x="653.8" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.8" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmInterpretationsKey.isCacheable (2 samples, 0.05%)</title><rect x="653.8" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.8" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.isQueryPlanCacheable (1 samples, 0.02%)</title><rect x="654.1" y="995.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.1" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.containsCollectionFetches (2 samples, 0.05%)</title><rect x="654.3" y="1043.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.3" y="1054.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.containsCollectionFetches (2 samples, 0.05%)</title><rect x="654.3" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.3" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.containsCollectionFetches (1 samples, 0.02%)</title><rect x="654.6" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.6" y="1022.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.createQuery (123 samples, 2.99%)</title><rect x="654.9" y="1091.0" width="35.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.9" y="1102.0">org..</text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.applyHints (2 samples, 0.05%)</title><rect x="654.9" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.9" y="1086.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaQueryMethod.hasQueryMetaAttributes (2 samples, 0.05%)</title><rect x="654.9" y="1059.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.9" y="1070.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaQueryMethod.getMetaAnnotation (2 samples, 0.05%)</title><rect x="654.9" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.9" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaQueryMethod.doFindAnnotation (2 samples, 0.05%)</title><rect x="654.9" y="1027.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="654.9" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="654.9" y="995.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.9" y="1006.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaQueryMethod$$Lambda$1680.0x00007f9a5c9c9200.&lt;init&gt; (1 samples, 0.02%)</title><rect x="654.9" y="979.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.9" y="990.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="654.9" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="655.2" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.2" y="1022.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery.doCreateQuery (121 samples, 2.94%)</title><rect x="655.5" y="1075.0" width="34.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.5" y="1086.0">or..</text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery$QueryPreparer.createQuery (121 samples, 2.94%)</title><rect x="655.5" y="1059.0" width="34.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.5" y="1070.0">or..</text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery$QueryPreparer.createQuery (98 samples, 2.38%)</title><rect x="656.3" y="1043.0" width="28.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.3" y="1054.0">or..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.02%)</title><rect x="656.6" y="1027.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="659.6" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="656.6" y="1011.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="659.6" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="656.6" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="659.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="656.9" y="1027.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="659.9" y="1038.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="656.9" y="1011.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="659.9" y="1022.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.createQuery (95 samples, 2.31%)</title><rect x="657.2" y="1027.0" width="27.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.2" y="1038.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.02%)</title><rect x="657.2" y="1011.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="660.2" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, JavaThread*) (1 samples, 0.02%)</title><rect x="657.2" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="660.2" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="657.2" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="660.2" y="990.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke (94 samples, 2.28%)</title><rect x="657.5" y="1011.0" width="26.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.5" y="1022.0">o..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (87 samples, 2.11%)</title><rect x="657.8" y="995.0" width="24.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.8" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (87 samples, 2.11%)</title><rect x="657.8" y="979.0" width="24.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.8" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor23.invoke (87 samples, 2.11%)</title><rect x="657.8" y="963.0" width="24.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.8" y="974.0">j..</text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.createQuery (87 samples, 2.11%)</title><rect x="657.8" y="947.0" width="24.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.8" y="958.0">j..</text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (86 samples, 2.09%)</title><rect x="658.1" y="931.0" width="24.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.1" y="942.0">o..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (86 samples, 2.09%)</title><rect x="658.1" y="915.0" width="24.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.1" y="926.0">j..</text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.02%)</title><rect x="658.1" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.1" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.02%)</title><rect x="658.1" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.refersTo0 (1 samples, 0.02%)</title><rect x="658.1" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (85 samples, 2.07%)</title><rect x="658.4" y="899.0" width="24.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.4" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor23.invoke (85 samples, 2.07%)</title><rect x="658.4" y="883.0" width="24.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.4" y="894.0">j..</text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.createQuery (85 samples, 2.07%)</title><rect x="658.4" y="867.0" width="24.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.4" y="878.0">o..</text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.createQuery (85 samples, 2.07%)</title><rect x="658.4" y="851.0" width="24.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.4" y="862.0">o..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="658.6" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.6" y="846.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.createCriteriaQuery (83 samples, 2.02%)</title><rect x="658.9" y="835.0" width="23.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.9" y="846.0">o..</text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.applyQuerySettingsAndHints (3 samples, 0.07%)</title><rect x="659.2" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.2" y="830.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.applyQuerySettingsAndHints (2 samples, 0.05%)</title><rect x="659.5" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.5" y="814.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.applyLockOptionsHint (2 samples, 0.05%)</title><rect x="659.5" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.5" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.&lt;init&gt; (79 samples, 1.92%)</title><rect x="660.1" y="819.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.1" y="830.0">o..</text>
</g>
<g>
<title>org/hibernate/query/internal/ParameterMetadataImpl.&lt;init&gt; (2 samples, 0.05%)</title><rect x="661.2" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="664.2" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 0.02%)</title><rect x="661.5" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.5" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="661.5" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.5" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="661.5" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.5" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingsImpl.from (1 samples, 0.02%)</title><rect x="661.8" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.8" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.&lt;init&gt; (3 samples, 0.07%)</title><rect x="662.1" y="803.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.1" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractCommonQueryContract.&lt;init&gt; (3 samples, 0.07%)</title><rect x="662.1" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="662.1" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.1" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryOptionsImpl.&lt;init&gt; (2 samples, 0.05%)</title><rect x="662.4" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.4" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/Limit.&lt;init&gt; (1 samples, 0.02%)</title><rect x="662.7" y="755.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.7" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.visitQueryReturnType (2 samples, 0.05%)</title><rect x="662.9" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.9" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.checkQueryReturnType (2 samples, 0.05%)</title><rect x="662.9" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.9" y="798.0"></text>
</g>
<g>
<title>org/hibernate/boot/internal/SessionFactoryOptionsBuilder.getJpaCompliance (1 samples, 0.02%)</title><rect x="663.2" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/DomainParameterXref.from (31 samples, 0.75%)</title><rect x="663.5" y="803.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.5" y="814.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="664.4" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="664.7" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.7" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.computeIfAbsent (5 samples, 0.12%)</title><rect x="665.0" y="787.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.0" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.addEntry (2 samples, 0.05%)</title><rect x="665.0" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.0" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="665.2" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.addEntryToEmptyMap (2 samples, 0.05%)</title><rect x="665.5" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="665.8" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.8" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/SqmJpaCriteriaParameterWrapper.compareTo (1 samples, 0.02%)</title><rect x="665.8" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.8" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/SqmJpaCriteriaParameterWrapper.compareTo (1 samples, 0.02%)</title><rect x="665.8" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.callMappingFunctionWithCheck (1 samples, 0.02%)</title><rect x="666.1" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.1" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/DomainParameterXref$$Lambda$1668.0x00007f9a5c9df8d8.apply (1 samples, 0.02%)</title><rect x="666.1" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.1" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/DomainParameterXref.lambda$from$0 (1 samples, 0.02%)</title><rect x="666.1" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="750.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/LinkedIdentityHashMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="666.4" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.4" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/SqmJpaCriteriaParameterWrapper.allowMultiValuedBinding (1 samples, 0.02%)</title><rect x="666.7" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.7" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.resolveParameters (19 samples, 0.46%)</title><rect x="667.0" y="787.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.0" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil.resolveParameters (19 samples, 0.46%)</title><rect x="667.0" y="771.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.0" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil$CriteriaParameterCollector.makeResolution (3 samples, 0.07%)</title><rect x="667.0" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.0" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil$ParameterResolutionsImpl.&lt;init&gt; (2 samples, 0.05%)</title><rect x="667.2" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.2" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap$EntryIterator.next (1 samples, 0.02%)</title><rect x="667.5" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.5" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/jpa/ParameterCollector.collectParameters (16 samples, 0.39%)</title><rect x="667.8" y="755.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.8" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/jpa/ParameterCollector.&lt;init&gt; (1 samples, 0.02%)</title><rect x="668.1" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.1" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.accept (14 samples, 0.34%)</title><rect x="668.4" y="739.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.4" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitSelectStatement (14 samples, 0.34%)</title><rect x="668.4" y="723.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.4" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitCteContainer (1 samples, 0.02%)</title><rect x="668.7" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.7" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedValues.iterator (1 samples, 0.02%)</title><rect x="668.7" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.7" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedValueIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="668.7" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.7" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedHashIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="668.7" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.7" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitQueryPart (12 samples, 0.29%)</title><rect x="669.0" y="707.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.0" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.accept (12 samples, 0.29%)</title><rect x="669.0" y="691.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.0" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitQuerySpec (12 samples, 0.29%)</title><rect x="669.0" y="675.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.0" y="686.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitFromClause (1 samples, 0.02%)</title><rect x="669.3" y="659.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="669.3" y="643.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.3" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitGroupByClause (1 samples, 0.02%)</title><rect x="669.5" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="669.5" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitSelectClause (3 samples, 0.07%)</title><rect x="669.8" y="659.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.8" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (3 samples, 0.07%)</title><rect x="669.8" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="670.1" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="673.1" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker$$Lambda$1665.0x00007f9a5c9d76f8.accept (2 samples, 0.05%)</title><rect x="670.1" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.1" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitSelection (2 samples, 0.05%)</title><rect x="670.1" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.1" y="606.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="670.4" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.4" y="590.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitWhereClause (6 samples, 0.15%)</title><rect x="670.7" y="659.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.7" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmJunctionPredicate.accept (6 samples, 0.15%)</title><rect x="670.7" y="643.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.7" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitJunctionPredicate (6 samples, 0.15%)</title><rect x="670.7" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.7" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmComparisonPredicate.accept (5 samples, 0.12%)</title><rect x="671.0" y="611.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.0" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/jpa/ParameterCollector.visitComparisonPredicate (5 samples, 0.12%)</title><rect x="671.0" y="595.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.0" y="606.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/jpa/ParameterCollector.withTypeInference (5 samples, 0.12%)</title><rect x="671.0" y="579.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.0" y="590.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/JpaCriteriaParameter.accept (5 samples, 0.12%)</title><rect x="671.0" y="563.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.0" y="574.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/jpa/ParameterCollector.visitJpaCriteriaParameter (4 samples, 0.10%)</title><rect x="671.3" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.3" y="558.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/jpa/ParameterCollector.visitJpaCriteriaParameter (4 samples, 0.10%)</title><rect x="671.3" y="531.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.3" y="542.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/SqmJpaCriteriaParameterWrapper.&lt;init&gt; (2 samples, 0.05%)</title><rect x="671.3" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.3" y="526.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/AbstractSqmExpression.&lt;init&gt; (1 samples, 0.02%)</title><rect x="671.3" y="499.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="674.3" y="510.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/SqmExpressionHelper.toSqmType (1 samples, 0.02%)</title><rect x="671.5" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.5" y="510.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmCriteriaNodeBuilder.getSessionFactory (1 samples, 0.02%)</title><rect x="671.5" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.5" y="494.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/jpa/ParameterCollector.getInferredParameterType (1 samples, 0.02%)</title><rect x="671.8" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.8" y="526.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/jpa/ParameterCollector.visitParameter (1 samples, 0.02%)</title><rect x="672.1" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.1" y="526.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil$$Lambda$1662.0x00007f9a5c9d6180.accept (1 samples, 0.02%)</title><rect x="672.1" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.1" y="510.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.setComment (1 samples, 0.02%)</title><rect x="672.4" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.4" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.setComment (1 samples, 0.02%)</title><rect x="672.4" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.4" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractCommonQueryContract.setComment (1 samples, 0.02%)</title><rect x="672.4" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.4" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.validateQueryStructureAndFetchOwners (1 samples, 0.02%)</title><rect x="672.7" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.7" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.validateFetchOwners (1 samples, 0.02%)</title><rect x="672.7" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.7" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.validateFetchOwners (1 samples, 0.02%)</title><rect x="672.7" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.7" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.copy (34 samples, 0.83%)</title><rect x="673.0" y="803.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.0" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.copy (34 samples, 0.83%)</title><rect x="673.0" y="787.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.0" y="798.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="673.3" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.3" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.copy (32 samples, 0.78%)</title><rect x="673.6" y="771.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.6" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.copy (32 samples, 0.78%)</title><rect x="673.6" y="755.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.6" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="673.8" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="676.8" y="750.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="673.8" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="676.8" y="734.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="673.8" y="707.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="676.8" y="718.0"></text>
</g>
<g>
<title>CompilationPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="673.8" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="676.8" y="702.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="673.8" y="675.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="676.8" y="686.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="673.8" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="676.8" y="670.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, JavaThread*) (1 samples, 0.02%)</title><rect x="673.8" y="643.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="676.8" y="654.0"></text>
</g>
<g>
<title>metaspace::MetaspaceArena::allocate(unsigned long) (1 samples, 0.02%)</title><rect x="673.8" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="676.8" y="638.0"></text>
</g>
<g>
<title>metaspace::chunklevel::level_fitting_word_size(unsigned long) (1 samples, 0.02%)</title><rect x="673.8" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="676.8" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/from/SqmFromClause.copy (8 samples, 0.19%)</title><rect x="674.1" y="739.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.1" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/from/SqmFromClause.&lt;init&gt; (8 samples, 0.19%)</title><rect x="674.1" y="723.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.1" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.02%)</title><rect x="674.7" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.7" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/from/SqmRoot.copy (5 samples, 0.12%)</title><rect x="675.0" y="707.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.0" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SimpleSqmCopyContext.getCopy (1 samples, 0.02%)</title><rect x="675.0" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.0" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/AbstractSqmExpression.nodeBuilder (1 samples, 0.02%)</title><rect x="675.3" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.3" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/from/SqmRoot.copyTo (3 samples, 0.07%)</title><rect x="675.6" y="691.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.6" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmFrom.copyTo (3 samples, 0.07%)</title><rect x="675.6" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.6" y="686.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmPath.copyTo (3 samples, 0.07%)</title><rect x="675.6" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.iterator (1 samples, 0.02%)</title><rect x="675.6" y="643.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$EntryIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="675.6" y="627.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="675.6" y="611.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.6" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.copy (2 samples, 0.05%)</title><rect x="675.8" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.8" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.copy (2 samples, 0.05%)</title><rect x="675.8" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.8" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmPath.getNavigablePathCopy (1 samples, 0.02%)</title><rect x="676.1" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.1" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmWhereClause.copy (19 samples, 0.46%)</title><rect x="676.4" y="739.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.4" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmJunctionPredicate.copy (19 samples, 0.46%)</title><rect x="676.4" y="723.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.4" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmJunctionPredicate.copy (18 samples, 0.44%)</title><rect x="676.7" y="707.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.7" y="718.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="677.3" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.3" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmComparisonPredicate.copy (15 samples, 0.36%)</title><rect x="677.6" y="691.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.6" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmComparisonPredicate.copy (15 samples, 0.36%)</title><rect x="677.6" y="675.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.6" y="686.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmComparisonPredicate.&lt;init&gt; (15 samples, 0.36%)</title><rect x="677.6" y="659.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.6" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryHelper.highestPrecedenceType (2 samples, 0.05%)</title><rect x="677.9" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.9" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryHelper.highestPrecedenceType2 (2 samples, 0.05%)</title><rect x="677.9" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.9" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getExpressibleJavaType (1 samples, 0.02%)</title><rect x="677.9" y="611.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.9" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getJavaTypeDescriptor (1 samples, 0.02%)</title><rect x="677.9" y="595.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.9" y="606.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/AbstractSqmExpression.getJavaTypeDescriptor (1 samples, 0.02%)</title><rect x="677.9" y="579.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.9" y="590.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/AbstractSqmPathSource.getExpressibleJavaType (1 samples, 0.02%)</title><rect x="677.9" y="563.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.9" y="574.0"></text>
</g>
<g>
<title>org/hibernate/type/BasicType.getExpressibleJavaType (1 samples, 0.02%)</title><rect x="677.9" y="547.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.9" y="558.0"></text>
</g>
<g>
<title>org/hibernate/type/descriptor/java/StringJavaType.isWider (1 samples, 0.02%)</title><rect x="678.1" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.1" y="622.0"></text>
</g>
<g>
<title>org/hibernate/type/descriptor/java/AbstractClassJavaType.getJavaType (1 samples, 0.02%)</title><rect x="678.1" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.1" y="606.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmCriteriaNodeBuilder.getSessionFactory (2 samples, 0.05%)</title><rect x="678.4" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.4" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/TypecheckUtil.assertComparable (9 samples, 0.22%)</title><rect x="679.0" y="643.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.0" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/TypecheckUtil.areTypesComparable (6 samples, 0.15%)</title><rect x="679.3" y="627.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.3" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getSqmType (5 samples, 0.12%)</title><rect x="679.6" y="611.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.6" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/SqmPathSource.getSqmType (3 samples, 0.07%)</title><rect x="679.9" y="595.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.9" y="606.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/SingularAttributeImpl.getSqmPathType (3 samples, 0.07%)</title><rect x="679.9" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.9" y="590.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/SingularAttributeImpl.getSqmPathType (2 samples, 0.05%)</title><rect x="680.1" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.1" y="574.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmPath.getResolvedModel (1 samples, 0.02%)</title><rect x="680.7" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="683.7" y="606.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/BasicSqmPathSource.isGeneric (1 samples, 0.02%)</title><rect x="680.7" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.7" y="590.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectableNode.getTupleLength (2 samples, 0.05%)</title><rect x="681.0" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.0" y="638.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/BasicSqmPathSource.getSqmType (2 samples, 0.05%)</title><rect x="681.0" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.0" y="622.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/BasicSqmPathSource.getSqmPathType (1 samples, 0.02%)</title><rect x="681.3" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.3" y="606.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.02%)</title><rect x="681.3" y="579.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="684.3" y="590.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/SqmTypedNode.getExpressible (1 samples, 0.02%)</title><rect x="681.6" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.6" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.&lt;init&gt; (1 samples, 0.02%)</title><rect x="681.9" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.9" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectClause.copy (2 samples, 0.05%)</title><rect x="682.2" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.2" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="682.2" y="723.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.2" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelection.copy (1 samples, 0.02%)</title><rect x="682.4" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.4" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="682.4" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.4" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmFrom.alias (1 samples, 0.02%)</title><rect x="682.4" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.4" y="702.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/EntityManagerFactoryUtils.applyTransactionTimeout (3 samples, 0.07%)</title><rect x="682.7" y="995.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.7" y="1006.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.getResource (3 samples, 0.07%)</title><rect x="682.7" y="979.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.7" y="990.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.doGetResource (2 samples, 0.05%)</title><rect x="682.7" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.7" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="682.7" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="683.0" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="683.0" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="683.0" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.0" y="926.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationUtils.unwrapResourceIfNecessary (1 samples, 0.02%)</title><rect x="683.3" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.3" y="974.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/EntityManagerFactoryUtils.doGetTransactionalEntityManager (3 samples, 0.07%)</title><rect x="683.6" y="995.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.6" y="1006.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/ResourceHolderSupport.requested (1 samples, 0.02%)</title><rect x="683.6" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.6" y="990.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.getResource (1 samples, 0.02%)</title><rect x="683.9" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.9" y="990.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.doGetResource (1 samples, 0.02%)</title><rect x="683.9" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.9" y="974.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive (1 samples, 0.02%)</title><rect x="684.2" y="979.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.2" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="684.2" y="963.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.2" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="684.2" y="947.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.2" y="958.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="684.2" y="931.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.2" y="942.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.02%)</title><rect x="684.2" y="915.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="687.2" y="926.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery$QueryPreparer.invokeBinding (18 samples, 0.44%)</title><rect x="684.4" y="1043.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.4" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/ParameterBinder.bindAndPrepare (18 samples, 0.44%)</title><rect x="684.4" y="1027.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.4" y="1038.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaParameters.hasLimitingParameters (2 samples, 0.05%)</title><rect x="684.7" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.7" y="1022.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/Parameters.hasLimitParameter (2 samples, 0.05%)</title><rect x="684.7" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.7" y="1006.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/Parameters.getLimitIndex (2 samples, 0.05%)</title><rect x="684.7" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.7" y="990.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/ParameterBinder.bind (15 samples, 0.36%)</title><rect x="685.3" y="1011.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="688.3" y="1022.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/ParameterBinder.bind (13 samples, 0.32%)</title><rect x="685.3" y="995.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.3" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.02%)</title><rect x="685.6" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.6" y="990.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/QueryParameterSetter$NamedOrIndexedQueryParameterSetter.setParameter (11 samples, 0.27%)</title><rect x="685.9" y="979.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="685.9" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.9" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="685.9" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.9" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="685.9" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="685.9" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.9" y="926.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="685.9" y="899.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="688.9" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.02%)</title><rect x="685.9" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="688.9" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="685.9" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="688.9" y="878.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/QueryParameterSetter$ErrorHandling$1.execute (10 samples, 0.24%)</title><rect x="686.2" y="963.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.2" y="974.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/QueryParameterSetter$NamedOrIndexedQueryParameterSetter$$Lambda$1675.0x00007f9a5c9ca8e8.run (10 samples, 0.24%)</title><rect x="686.2" y="947.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.2" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractCommonQueryContract.setParameter (1 samples, 0.02%)</title><rect x="686.2" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.2" y="942.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/QueryParameterSetter$NamedOrIndexedQueryParameterSetter.lambda$3 (9 samples, 0.22%)</title><rect x="686.5" y="931.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.5" y="942.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/QueryParameterSetter$BindableQuery.setParameter (9 samples, 0.22%)</title><rect x="686.5" y="915.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.5" y="926.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.setParameter (9 samples, 0.22%)</title><rect x="686.5" y="899.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.5" y="910.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.setParameter (8 samples, 0.19%)</title><rect x="686.7" y="883.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.7" y="894.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.setParameter (8 samples, 0.19%)</title><rect x="686.7" y="867.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.7" y="878.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractCommonQueryContract.setParameter (8 samples, 0.19%)</title><rect x="686.7" y="851.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.7" y="862.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingImpl.setBindValue (6 samples, 0.15%)</title><rect x="686.7" y="835.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.7" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingImpl.validate (5 samples, 0.12%)</title><rect x="687.0" y="819.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.0" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/QueryParameterBindingValidator.validate (3 samples, 0.07%)</title><rect x="687.6" y="803.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.6" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/QueryParameterBindingValidator.validate (3 samples, 0.07%)</title><rect x="687.6" y="787.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.6" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getBindableJavaType (3 samples, 0.07%)</title><rect x="687.6" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.6" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getJavaType (3 samples, 0.07%)</title><rect x="687.6" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.6" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getJavaTypeDescriptor (3 samples, 0.07%)</title><rect x="687.6" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.6" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/AbstractSqmExpression.getJavaTypeDescriptor (3 samples, 0.07%)</title><rect x="687.6" y="723.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.6" y="734.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/AbstractSqmPathSource.getExpressibleJavaType (1 samples, 0.02%)</title><rect x="687.6" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.6" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getNodeType (2 samples, 0.05%)</title><rect x="687.9" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.9" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getNodeType (2 samples, 0.05%)</title><rect x="687.9" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.9" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.getReferencedPathSource (2 samples, 0.05%)</title><rect x="687.9" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.9" y="686.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractCommonQueryContract.locateBinding (2 samples, 0.05%)</title><rect x="688.5" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.5" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractCommonQueryContract.locateBinding (2 samples, 0.05%)</title><rect x="688.5" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.5" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractCommonQueryContract.getSession (1 samples, 0.02%)</title><rect x="688.8" y="803.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.8" y="814.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/QueryParameterSetter$QueryMetadata.withQuery (2 samples, 0.05%)</title><rect x="689.0" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.0" y="1006.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/QueryParameterSetter$BindableQuery.&lt;init&gt; (1 samples, 0.02%)</title><rect x="689.3" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.3" y="990.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery$QueryPreparer.restrictMaxResultsIfNecessary (1 samples, 0.02%)</title><rect x="689.6" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.6" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/parser/PartTree.isLimiting (1 samples, 0.02%)</title><rect x="689.6" y="1027.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.6" y="1038.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/parser/PartTree.getMaxResults (1 samples, 0.02%)</title><rect x="689.6" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.6" y="1022.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/parser/PartTree$Subject.getMaxResults (1 samples, 0.02%)</title><rect x="689.6" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.6" y="1006.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/ParametersParameterAccessor.hasBindableNullValue (1 samples, 0.02%)</title><rect x="689.9" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.9" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/ResultProcessor.getReturnedType (1 samples, 0.02%)</title><rect x="690.2" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.2" y="1134.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery.getExecution (3 samples, 0.07%)</title><rect x="690.5" y="1139.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.5" y="1150.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/QueryMethod.isScrollQuery (2 samples, 0.05%)</title><rect x="690.5" y="1123.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.5" y="1134.0"></text>
</g>
<g>
<title>org/springframework/data/repository/query/parser/PartTree.isDelete (1 samples, 0.02%)</title><rect x="691.0" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.0" y="1134.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.computeInvocationResult (1 samples, 0.02%)</title><rect x="691.3" y="1171.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.3" y="1182.0"></text>
</g>
<g>
<title>org/springframework/aop/target/SingletonTargetSource.getTarget (1 samples, 0.02%)</title><rect x="691.6" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.6" y="1422.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/service/Md5Hasher.hash (18 samples, 0.44%)</title><rect x="691.9" y="1443.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.9" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.02%)</title><rect x="692.2" y="1427.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.2" y="1438.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.02%)</title><rect x="692.2" y="1411.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.2" y="1422.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_1 (1 samples, 0.02%)</title><rect x="692.2" y="1395.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.2" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="692.2" y="1379.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="695.2" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="692.2" y="1363.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="695.2" y="1374.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="692.2" y="1347.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="695.2" y="1358.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="692.2" y="1331.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="695.2" y="1342.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;CallPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="692.2" y="1315.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="695.2" y="1326.0"></text>
</g>
<g>
<title>CallPredicate::apply(methodHandle const&amp;, CompLevel, int, int) (1 samples, 0.02%)</title><rect x="692.2" y="1299.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="695.2" y="1310.0"></text>
</g>
<g>
<title>VirtualSpace::reserved_size() const (1 samples, 0.02%)</title><rect x="692.2" y="1283.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="695.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="692.5" y="1427.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.lookupCharset (1 samples, 0.02%)</title><rect x="692.5" y="1411.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.5" y="1422.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.forName (1 samples, 0.02%)</title><rect x="692.5" y="1395.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.5" y="1406.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.lookup (1 samples, 0.02%)</title><rect x="692.5" y="1379.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="692.8" y="1427.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.02%)</title><rect x="693.1" y="1427.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="693.1" y="1411.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="693.1" y="1395.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.1" y="1406.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (5 samples, 0.12%)</title><rect x="693.3" y="1427.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.3" y="1438.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (4 samples, 0.10%)</title><rect x="693.3" y="1411.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.3" y="1422.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (4 samples, 0.10%)</title><rect x="693.3" y="1395.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.3" y="1406.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (4 samples, 0.10%)</title><rect x="693.3" y="1379.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.3" y="1390.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (4 samples, 0.10%)</title><rect x="693.3" y="1363.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.3" y="1374.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implDigest (4 samples, 0.10%)</title><rect x="693.3" y="1347.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.3" y="1358.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bLittle (1 samples, 0.02%)</title><rect x="693.3" y="1331.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.3" y="1342.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implCompress (3 samples, 0.07%)</title><rect x="693.6" y="1331.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.6" y="1342.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implCompress0 (3 samples, 0.07%)</title><rect x="693.6" y="1315.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_I (1 samples, 0.02%)</title><rect x="693.9" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleByteArrayAsInts$ArrayHandle.get (1 samples, 0.02%)</title><rect x="693.9" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleByteArrayAsInts$ArrayHandle.index (1 samples, 0.02%)</title><rect x="693.9" y="1267.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/util/Preconditions.checkIndex (1 samples, 0.02%)</title><rect x="693.9" y="1251.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.9" y="1262.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.HH (1 samples, 0.02%)</title><rect x="694.2" y="1299.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.2" y="1310.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (1 samples, 0.02%)</title><rect x="694.5" y="1411.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.5" y="1422.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineUpdate (1 samples, 0.02%)</title><rect x="694.5" y="1395.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.5" y="1406.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (1 samples, 0.02%)</title><rect x="694.5" y="1379.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.5" y="1390.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (8 samples, 0.19%)</title><rect x="694.8" y="1427.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.8" y="1438.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (6 samples, 0.15%)</title><rect x="695.3" y="1411.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.3" y="1422.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (4 samples, 0.10%)</title><rect x="695.6" y="1395.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.6" y="1406.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (2 samples, 0.05%)</title><rect x="696.2" y="1379.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.2" y="1390.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstanceUtil (2 samples, 0.05%)</title><rect x="696.2" y="1363.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.2" y="1374.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstanceOf (2 samples, 0.05%)</title><rect x="696.2" y="1347.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.02%)</title><rect x="696.2" y="1331.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.02%)</title><rect x="696.2" y="1315.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.2" y="1326.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.02%)</title><rect x="696.2" y="1299.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="699.2" y="1310.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool, bool) (1 samples, 0.02%)</title><rect x="696.2" y="1283.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="699.2" y="1294.0"></text>
</g>
<g>
<title>java/security/Provider$Service.getDefaultConstructor (1 samples, 0.02%)</title><rect x="696.5" y="1331.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.5" y="1342.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (1 samples, 0.02%)</title><rect x="696.8" y="1395.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.8" y="1406.0"></text>
</g>
<g>
<title>java/security/Provider.getService (1 samples, 0.02%)</title><rect x="696.8" y="1379.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.8" y="1390.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/service/WebService.processContent (113 samples, 2.75%)</title><rect x="697.1" y="1443.0" width="32.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.1" y="1454.0">ot..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="697.4" y="1427.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.4" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.lookupCharset (1 samples, 0.02%)</title><rect x="697.4" y="1411.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.4" y="1422.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocateDirect (12 samples, 0.29%)</title><rect x="697.6" y="1427.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.6" y="1438.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 0.27%)</title><rect x="697.9" y="1411.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.9" y="1422.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="697.9" y="1395.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="700.9" y="1406.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="697.9" y="1379.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="700.9" y="1390.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="697.9" y="1363.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="700.9" y="1374.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper_internal(methodHandle, frame const&amp;, CompiledMethod*, bool, bool, Handle, CallInfo&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="697.9" y="1347.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="700.9" y="1358.0"></text>
</g>
<g>
<title>InlineCacheBuffer::contains(unsigned char*) (1 samples, 0.02%)</title><rect x="697.9" y="1331.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="700.9" y="1342.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="698.2" y="1395.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.2" y="1406.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="698.2" y="1379.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.2" y="1390.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="698.2" y="1363.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.2" y="1374.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="698.2" y="1347.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.2" y="1358.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.02%)</title><rect x="698.2" y="1331.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="701.2" y="1342.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.02%)</title><rect x="698.5" y="1331.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateMemory (5 samples, 0.12%)</title><rect x="698.8" y="1395.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.8" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.alignToHeapWordSize (1 samples, 0.02%)</title><rect x="698.8" y="1379.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateMemory0 (4 samples, 0.10%)</title><rect x="699.1" y="1379.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.1" y="1390.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="699.4" y="1363.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="702.4" y="1374.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="699.4" y="1347.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="702.4" y="1358.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="699.4" y="1331.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="702.4" y="1342.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="699.4" y="1315.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="702.4" y="1326.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="699.4" y="1299.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="702.4" y="1310.0"></text>
</g>
<g>
<title>mprotect (1 samples, 0.02%)</title><rect x="699.6" y="1363.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="702.6" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="699.6" y="1347.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="702.6" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="699.6" y="1331.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="702.6" y="1342.0"></text>
</g>
<g>
<title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="699.6" y="1315.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.6" y="1326.0"></text>
</g>
<g>
<title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="699.6" y="1299.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="702.6" y="1310.0"></text>
</g>
<g>
<title>down_write_killable (1 samples, 0.02%)</title><rect x="699.6" y="1283.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="702.6" y="1294.0"></text>
</g>
<g>
<title>rwsem_down_write_slowpath (1 samples, 0.02%)</title><rect x="699.6" y="1267.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="702.6" y="1278.0"></text>
</g>
<g>
<title>sysmalloc (1 samples, 0.02%)</title><rect x="699.9" y="1363.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="702.9" y="1374.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="699.9" y="1347.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="702.9" y="1358.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="699.9" y="1331.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="702.9" y="1342.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="699.9" y="1315.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="702.9" y="1326.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="699.9" y="1299.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="702.9" y="1310.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="699.9" y="1283.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="702.9" y="1294.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="699.9" y="1267.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="702.9" y="1278.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="699.9" y="1251.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="702.9" y="1262.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="699.9" y="1235.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="702.9" y="1246.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="699.9" y="1219.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="702.9" y="1230.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="699.9" y="1203.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="702.9" y="1214.0"></text>
</g>
<g>
<title>rmqueue (1 samples, 0.02%)</title><rect x="699.9" y="1187.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="702.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.setMemory (2 samples, 0.05%)</title><rect x="700.2" y="1395.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.setMemory (2 samples, 0.05%)</title><rect x="700.2" y="1379.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.setMemory0 (2 samples, 0.05%)</title><rect x="700.2" y="1363.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.2" y="1374.0"></text>
</g>
<g>
<title>Copy::fill_to_memory_atomic(void*, unsigned long, unsigned char) (2 samples, 0.05%)</title><rect x="700.2" y="1347.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="703.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/ref/Cleaner.create (1 samples, 0.02%)</title><rect x="700.8" y="1395.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.8" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/ref/Cleaner.add (1 samples, 0.02%)</title><rect x="700.8" y="1379.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.8" y="1390.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.02%)</title><rect x="701.1" y="1427.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.1" y="1438.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="701.1" y="1411.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.1" y="1422.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.putInt (3 samples, 0.07%)</title><rect x="701.4" y="1427.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.4" y="1438.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.putInt (3 samples, 0.07%)</title><rect x="701.4" y="1411.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.4" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.putIntUnaligned (3 samples, 0.07%)</title><rect x="701.4" y="1395.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.4" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.putIntUnalignedInternal (1 samples, 0.02%)</title><rect x="701.9" y="1379.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (1 samples, 0.02%)</title><rect x="702.2" y="1427.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.2" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="702.2" y="1411.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (1 samples, 0.02%)</title><rect x="702.2" y="1395.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.2" y="1406.0"></text>
</g>
<g>
<title>java/util/Random.&lt;init&gt; (2 samples, 0.05%)</title><rect x="702.5" y="1427.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.5" y="1438.0"></text>
</g>
<g>
<title>java/util/Random.&lt;init&gt; (1 samples, 0.02%)</title><rect x="702.5" y="1411.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (1 samples, 0.02%)</title><rect x="702.5" y="1395.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.5" y="1406.0"></text>
</g>
<g>
<title>java/util/Random.seedUniquifier (1 samples, 0.02%)</title><rect x="702.8" y="1411.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.8" y="1422.0"></text>
</g>
<g>
<title>java/util/random/RandomGenerator.nextInt (2 samples, 0.05%)</title><rect x="703.1" y="1427.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.1" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/util/random/RandomSupport.boundedNextInt (2 samples, 0.05%)</title><rect x="703.1" y="1411.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.1" y="1422.0"></text>
</g>
<g>
<title>java/util/Random.nextInt (1 samples, 0.02%)</title><rect x="703.4" y="1395.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.4" y="1406.0"></text>
</g>
<g>
<title>java/util/Random.next (1 samples, 0.02%)</title><rect x="703.4" y="1379.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.4" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.02%)</title><rect x="703.4" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.4" y="1374.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/service/WebService.generateContent (90 samples, 2.19%)</title><rect x="703.7" y="1427.0" width="25.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.7" y="1438.0">o..</text>
</g>
<g>
<title>java/io/InputStream.readAllBytes (64 samples, 1.56%)</title><rect x="703.9" y="1411.0" width="18.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.9" y="1422.0"></text>
</g>
<g>
<title>java/io/InputStream.readNBytes (64 samples, 1.56%)</title><rect x="703.9" y="1395.0" width="18.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.02%)</title><rect x="705.4" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.4" y="1390.0"></text>
</g>
<g>
<title>Copy::conjoint_memory_atomic(void const*, void*, unsigned long) (1 samples, 0.02%)</title><rect x="705.4" y="1363.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="708.4" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="705.7" y="1379.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.7" y="1390.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.read (57 samples, 1.39%)</title><rect x="706.0" y="1379.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.0" y="1390.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/ZipInflaterInputStream.read (49 samples, 1.19%)</title><rect x="706.0" y="1363.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.0" y="1374.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (49 samples, 1.19%)</title><rect x="706.0" y="1347.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.0" y="1358.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (46 samples, 1.12%)</title><rect x="706.0" y="1331.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.0" y="1342.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (46 samples, 1.12%)</title><rect x="706.0" y="1315.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.0" y="1326.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (30 samples, 0.73%)</title><rect x="706.2" y="1299.0" width="8.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="709.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.27%)</title><rect x="714.8" y="1299.0" width="3.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="717.8" y="1310.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (8 samples, 0.19%)</title><rect x="714.8" y="1283.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="717.8" y="1294.0"></text>
</g>
<g>
<title>inflate (3 samples, 0.07%)</title><rect x="717.1" y="1283.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="720.1" y="1294.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="718.0" y="1299.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="721.0" y="1310.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="718.3" y="1299.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="721.3" y="1310.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="718.3" y="1283.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="721.3" y="1294.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="718.3" y="1267.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.3" y="1278.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="718.3" y="1251.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="721.3" y="1262.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="718.3" y="1235.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="721.3" y="1246.0"></text>
</g>
<g>
<title>mprotect (2 samples, 0.05%)</title><rect x="718.6" y="1299.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="721.6" y="1310.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.ensureOpen (1 samples, 0.02%)</title><rect x="719.1" y="1331.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.1" y="1342.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/ZipInflaterInputStream.fill (2 samples, 0.05%)</title><rect x="719.4" y="1331.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.4" y="1342.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.fill (2 samples, 0.05%)</title><rect x="719.4" y="1315.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.4" y="1326.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile$JarEntryInputStream.read (2 samples, 0.05%)</title><rect x="719.4" y="1299.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.4" y="1310.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/FileDataBlock.read (2 samples, 0.05%)</title><rect x="719.4" y="1283.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.4" y="1294.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/FileDataBlock$FileAccess.read (2 samples, 0.05%)</title><rect x="719.4" y="1267.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.4" y="1278.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.05%)</title><rect x="719.4" y="1251.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.4" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (2 samples, 0.05%)</title><rect x="719.4" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.4" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.putBuffer (2 samples, 0.05%)</title><rect x="719.4" y="1219.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemory (2 samples, 0.05%)</title><rect x="719.4" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.copyMemoryInternal (2 samples, 0.05%)</title><rect x="719.4" y="1187.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.05%)</title><rect x="719.4" y="1171.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.4" y="1182.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="719.4" y="1155.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="722.4" y="1166.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.02%)</title><rect x="719.7" y="1155.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="722.7" y="1166.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.in (8 samples, 0.19%)</title><rect x="720.0" y="1363.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.0" y="1374.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection$ConnectionInputStream.getDelegateInputStream (8 samples, 0.19%)</title><rect x="720.0" y="1347.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.0" y="1358.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.getInputStream (8 samples, 0.19%)</title><rect x="720.0" y="1331.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.0" y="1342.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.getInputStream (8 samples, 0.19%)</title><rect x="720.0" y="1315.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.0" y="1326.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.02%)</title><rect x="720.3" y="1299.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="723.3" y="1310.0"></text>
</g>
<g>
<title>SharedRuntime::monitor_enter_helper(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="720.3" y="1283.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="723.3" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="720.3" y="1267.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="723.3" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="720.3" y="1251.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="723.3" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="720.3" y="1235.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="723.3" y="1246.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile$JarEntryInflaterInputStream.&lt;init&gt; (4 samples, 0.10%)</title><rect x="720.6" y="1299.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.6" y="1310.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile$JarEntryInflaterInputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="720.6" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.6" y="1294.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFileResources.createInflatorCleanupAction (1 samples, 0.02%)</title><rect x="720.6" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="720.6" y="1251.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="720.6" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="720.6" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="720.6" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.6" y="1214.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="720.6" y="1187.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="723.6" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.02%)</title><rect x="720.6" y="1171.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="723.6" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="720.6" y="1155.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="723.6" y="1166.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWordImpl**) const (1 samples, 0.02%)</title><rect x="720.6" y="1139.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="723.6" y="1150.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFileResources.getOrCreateInflater (3 samples, 0.07%)</title><rect x="720.9" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.9" y="1294.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.&lt;init&gt; (3 samples, 0.07%)</title><rect x="720.9" y="1267.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.9" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/Inflater$InflaterZStreamRef.&lt;init&gt; (1 samples, 0.02%)</title><rect x="720.9" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.02%)</title><rect x="720.9" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.02%)</title><rect x="720.9" y="1219.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="720.9" y="1203.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="720.9" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="720.9" y="1171.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.9" y="1182.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.init (2 samples, 0.05%)</title><rect x="721.2" y="1251.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.2" y="1262.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.02%)</title><rect x="721.2" y="1235.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="724.2" y="1246.0"></text>
</g>
<g>
<title>mprotect (1 samples, 0.02%)</title><rect x="721.4" y="1235.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="724.4" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="721.4" y="1219.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="724.4" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="721.4" y="1203.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="724.4" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="721.4" y="1187.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="724.4" y="1198.0"></text>
</g>
<g>
<title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="721.4" y="1171.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="724.4" y="1182.0"></text>
</g>
<g>
<title>mprotect_fixup (1 samples, 0.02%)</title><rect x="721.4" y="1155.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="724.4" y="1166.0"></text>
</g>
<g>
<title>vma_merge (1 samples, 0.02%)</title><rect x="721.4" y="1139.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="724.4" y="1150.0"></text>
</g>
<g>
<title>__vma_adjust (1 samples, 0.02%)</title><rect x="721.4" y="1123.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="724.4" y="1134.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile$JarEntryInputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="721.7" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.7" y="1310.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/ZipContent$Entry.openContent (1 samples, 0.02%)</title><rect x="721.7" y="1283.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.7" y="1294.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/FileDataBlock.open (1 samples, 0.02%)</title><rect x="721.7" y="1267.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.7" y="1278.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/FileDataBlock$FileAccess.open (1 samples, 0.02%)</title><rect x="721.7" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.7" y="1262.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFileResources.addInputStream (1 samples, 0.02%)</title><rect x="722.0" y="1299.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/Class.getResourceAsStream (25 samples, 0.61%)</title><rect x="722.3" y="1411.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/Class.resolveName (2 samples, 0.05%)</title><rect x="722.3" y="1395.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.3" y="1406.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="722.6" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.6" y="1390.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (23 samples, 0.56%)</title><rect x="722.9" y="1395.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.9" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.02%)</title><rect x="722.9" y="1379.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="725.9" y="1390.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="722.9" y="1363.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="725.9" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="722.9" y="1347.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="725.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (19 samples, 0.46%)</title><rect x="723.2" y="1379.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.05%)</title><rect x="723.2" y="1363.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.2" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.05%)</title><rect x="723.2" y="1347.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.02%)</title><rect x="723.2" y="1331.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="723.2" y="1315.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (1 samples, 0.02%)</title><rect x="723.4" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.02%)</title><rect x="723.4" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (1 samples, 0.02%)</title><rect x="723.4" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.02%)</title><rect x="723.4" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.4" y="1294.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.02%)</title><rect x="723.4" y="1267.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.4" y="1278.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.02%)</title><rect x="723.4" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.4" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.02%)</title><rect x="723.4" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.4" y="1246.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.findResource (17 samples, 0.41%)</title><rect x="723.7" y="1363.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.7" y="1374.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (15 samples, 0.36%)</title><rect x="724.3" y="1347.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.3" y="1358.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.36%)</title><rect x="724.3" y="1331.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.3" y="1342.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (14 samples, 0.34%)</title><rect x="724.3" y="1315.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.3" y="1326.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (14 samples, 0.34%)</title><rect x="724.3" y="1299.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.3" y="1310.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (14 samples, 0.34%)</title><rect x="724.3" y="1283.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (14 samples, 0.34%)</title><rect x="724.3" y="1267.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (14 samples, 0.34%)</title><rect x="724.3" y="1251.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.3" y="1262.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (2 samples, 0.05%)</title><rect x="724.3" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.3" y="1246.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (2 samples, 0.05%)</title><rect x="724.3" y="1219.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.3" y="1230.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.parseURL (2 samples, 0.05%)</title><rect x="724.3" y="1203.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.3" y="1214.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.setURL (1 samples, 0.02%)</title><rect x="724.3" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.3" y="1198.0"></text>
</g>
<g>
<title>java/net/URL.isBuiltinStreamHandler (1 samples, 0.02%)</title><rect x="724.3" y="1171.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.02%)</title><rect x="724.3" y="1155.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.3" y="1166.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.extractPath (1 samples, 0.02%)</title><rect x="724.6" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.6" y="1198.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.extractRelativePath (1 samples, 0.02%)</title><rect x="724.6" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="724.6" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.02%)</title><rect x="724.6" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="724.6" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.simpleConcat (1 samples, 0.02%)</title><rect x="724.6" y="1107.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.02%)</title><rect x="724.6" y="1091.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.6" y="1102.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (10 samples, 0.24%)</title><rect x="724.9" y="1235.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.9" y="1246.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (10 samples, 0.24%)</title><rect x="724.9" y="1219.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.9" y="1230.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (10 samples, 0.24%)</title><rect x="724.9" y="1203.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="724.9" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.9" y="1198.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.2" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.2" y="1198.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.2" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.2" y="1182.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.2" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.2" y="1166.0"></text>
</g>
<g>
<title>java/net/URL.getURLStreamHandler (1 samples, 0.02%)</title><rect x="725.2" y="1139.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.2" y="1150.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.&lt;init&gt; (7 samples, 0.17%)</title><rect x="725.5" y="1187.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.5" y="1198.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.&lt;init&gt; (2 samples, 0.05%)</title><rect x="725.5" y="1171.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.5" y="1182.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.parseSpecs (2 samples, 0.05%)</title><rect x="725.5" y="1155.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="725.5" y="1139.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="725.5" y="1123.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.5" y="1107.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.5" y="1118.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.7" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.7" y="1150.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.7" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.7" y="1134.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.7" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.7" y="1118.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (5 samples, 0.12%)</title><rect x="726.0" y="1171.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.0" y="1182.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/nested/Handler.openConnection (4 samples, 0.10%)</title><rect x="726.3" y="1155.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="729.3" y="1166.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/nested/NestedUrlConnection.&lt;init&gt; (4 samples, 0.10%)</title><rect x="726.3" y="1139.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.3" y="1150.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/nested/NestedUrlConnection.&lt;init&gt; (4 samples, 0.10%)</title><rect x="726.3" y="1123.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.3" y="1134.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/nested/NestedUrlConnection.parseNestedLocation (3 samples, 0.07%)</title><rect x="726.3" y="1107.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.3" y="1118.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/nested/NestedLocation.parse (3 samples, 0.07%)</title><rect x="726.3" y="1091.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.02%)</title><rect x="726.3" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.02%)</title><rect x="726.3" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.02%)</title><rect x="726.3" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (1 samples, 0.02%)</title><rect x="726.3" y="1027.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (2 samples, 0.05%)</title><rect x="726.6" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="726.6" y="1059.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="726.6" y="1043.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.6" y="1054.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/ref/DefaultCleaner.register (1 samples, 0.02%)</title><rect x="727.2" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.02%)</title><rect x="727.2" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.02%)</title><rect x="727.2" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="727.2" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.2" y="1070.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/UrlJarFiles.cacheIfAbsent (1 samples, 0.02%)</title><rect x="727.5" y="1187.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.5" y="1198.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/UrlJarFiles$Cache.putIfAbsent (1 samples, 0.02%)</title><rect x="727.5" y="1171.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.5" y="1182.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarFileUrlKey.get (1 samples, 0.02%)</title><rect x="727.5" y="1155.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="727.5" y="1139.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.5" y="1150.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.getInputStream (2 samples, 0.05%)</title><rect x="727.7" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.7" y="1246.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/UrlNestedJarFile.getEntry (2 samples, 0.05%)</title><rect x="727.7" y="1219.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.7" y="1230.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/UrlNestedJarFile.getEntry (2 samples, 0.05%)</title><rect x="727.7" y="1203.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.7" y="1214.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/UrlJarEntry.of (2 samples, 0.05%)</title><rect x="727.7" y="1187.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.7" y="1198.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/UrlJarEntry.&lt;init&gt; (2 samples, 0.05%)</title><rect x="727.7" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.7" y="1182.0"></text>
</g>
<g>
<title>java/util/jar/JarEntry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="728.0" y="1155.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.0" y="1166.0"></text>
</g>
<g>
<title>java/util/jar/JarEntry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="728.0" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.02%)</title><rect x="728.3" y="1315.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.3" y="1326.0"></text>
</g>
<g>
<title>SafepointMechanism::process_if_requested_with_exit_check(JavaThread*, bool) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="728.3" y="1299.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="731.3" y="1310.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (2 samples, 0.05%)</title><rect x="728.6" y="1379.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.6" y="1390.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="728.9" y="1363.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.9" y="1374.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="728.9" y="1347.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.9" y="1358.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="728.9" y="1331.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.9" y="1342.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="728.9" y="1315.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.9" y="1326.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="728.9" y="1299.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.9" y="1310.0"></text>
</g>
<g>
<title>java/net/URL.getURLStreamHandler (1 samples, 0.02%)</title><rect x="728.9" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.9" y="1294.0"></text>
</g>
<g>
<title>java/util/Hashtable.get (1 samples, 0.02%)</title><rect x="728.9" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.9" y="1278.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.containsKey (1 samples, 0.02%)</title><rect x="729.2" y="1379.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.2" y="1390.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getEntry (1 samples, 0.02%)</title><rect x="729.2" y="1363.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.2" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (62 samples, 1.51%)</title><rect x="729.5" y="1475.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.5" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (62 samples, 1.51%)</title><rect x="729.5" y="1459.0" width="17.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.5" y="1470.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/web/UserController.login (62 samples, 1.51%)</title><rect x="729.5" y="1443.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.5" y="1454.0"></text>
</g>
<g>
<title>java/util/Optional.orElseGet (21 samples, 0.51%)</title><rect x="729.5" y="1427.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.5" y="1438.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/web/UserController$$Lambda$1897.0x00007f9a5ca334e8.get (21 samples, 0.51%)</title><rect x="729.5" y="1411.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.5" y="1422.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/web/UserController.lambda$login$0 (21 samples, 0.51%)</title><rect x="729.5" y="1395.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.5" y="1406.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/web/UserController.createUser (21 samples, 0.51%)</title><rect x="729.5" y="1379.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.5" y="1390.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy116.save (21 samples, 0.51%)</title><rect x="729.5" y="1363.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.5" y="1374.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/JdkDynamicAopProxy.invoke (21 samples, 0.51%)</title><rect x="729.5" y="1347.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.5" y="1358.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (21 samples, 0.51%)</title><rect x="729.5" y="1331.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.5" y="1342.0"></text>
</g>
<g>
<title>org/springframework/aop/interceptor/ExposeInvocationInterceptor.invoke (21 samples, 0.51%)</title><rect x="729.5" y="1315.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.5" y="1326.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (21 samples, 0.51%)</title><rect x="729.5" y="1299.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.5" y="1310.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke (21 samples, 0.51%)</title><rect x="729.5" y="1283.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.5" y="1294.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (20 samples, 0.49%)</title><rect x="729.5" y="1267.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.5" y="1278.0"></text>
</g>
<g>
<title>org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.invoke (20 samples, 0.49%)</title><rect x="729.5" y="1251.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="732.5" y="1262.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (20 samples, 0.49%)</title><rect x="729.5" y="1235.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.5" y="1246.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionInterceptor.invoke (20 samples, 0.49%)</title><rect x="729.5" y="1219.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.5" y="1230.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.invokeWithinTransaction (20 samples, 0.49%)</title><rect x="729.5" y="1203.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.5" y="1214.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.getTransactionAttribute (1 samples, 0.02%)</title><rect x="729.5" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.5" y="1198.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/TransactionalRepositoryProxyPostProcessor$RepositoryAnnotationTransactionAttributeSource.computeTransactionAttribute (1 samples, 0.02%)</title><rect x="729.5" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.5" y="1182.0"></text>
</g>
<g>
<title>org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.findTransactionAttribute (1 samples, 0.02%)</title><rect x="729.5" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.5" y="1166.0"></text>
</g>
<g>
<title>org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.determineTransactionAttribute (1 samples, 0.02%)</title><rect x="729.5" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.5" y="1150.0"></text>
</g>
<g>
<title>org/springframework/transaction/annotation/SpringTransactionAnnotationParser.parseTransactionAnnotation (1 samples, 0.02%)</title><rect x="729.5" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.5" y="1134.0"></text>
</g>
<g>
<title>org/springframework/transaction/annotation/SpringTransactionAnnotationParser.parseTransactionAnnotation (1 samples, 0.02%)</title><rect x="729.5" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.5" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="729.5" y="1091.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="732.5" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="729.5" y="1075.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="732.5" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="729.5" y="1059.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="732.5" y="1070.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="729.5" y="1043.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="732.5" y="1054.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(JavaThread*) (1 samples, 0.02%)</title><rect x="729.5" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="732.5" y="1038.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="729.5" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="732.5" y="1022.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.02%)</title><rect x="729.5" y="995.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="732.5" y="1006.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.commitTransactionAfterReturning (8 samples, 0.19%)</title><rect x="729.8" y="1187.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.8" y="1198.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.commit (8 samples, 0.19%)</title><rect x="729.8" y="1171.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.8" y="1182.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.processCommit (8 samples, 0.19%)</title><rect x="729.8" y="1155.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.8" y="1166.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="729.8" y="1139.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="732.8" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 0.02%)</title><rect x="729.8" y="1123.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="732.8" y="1134.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="729.8" y="1107.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="732.8" y="1118.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="729.8" y="1091.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="732.8" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="729.8" y="1075.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="732.8" y="1086.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(JavaThread*) (1 samples, 0.02%)</title><rect x="729.8" y="1059.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="732.8" y="1070.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1335398ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 1335398ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.02%)</title><rect x="729.8" y="1043.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="732.8" y="1054.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager.doCommit (7 samples, 0.17%)</title><rect x="730.0" y="1139.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.0" y="1150.0"></text>
</g>
<g>
<title>org/hibernate/engine/transaction/internal/TransactionImpl.commit (7 samples, 0.17%)</title><rect x="730.0" y="1123.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.0" y="1134.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit (7 samples, 0.17%)</title><rect x="730.0" y="1107.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.0" y="1118.0"></text>
</g>
<g>
<title>org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor.commit (1 samples, 0.02%)</title><rect x="730.0" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.0" y="1102.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyConnection.commit (1 samples, 0.02%)</title><rect x="730.0" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.0" y="1086.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyConnection.commit (1 samples, 0.02%)</title><rect x="730.0" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.0" y="1070.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.commit (1 samples, 0.02%)</title><rect x="730.0" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.0" y="1054.0"></text>
</g>
<g>
<title>org/h2/command/Command.executeUpdate (1 samples, 0.02%)</title><rect x="730.0" y="1027.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.0" y="1038.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.update (1 samples, 0.02%)</title><rect x="730.0" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.0" y="1022.0"></text>
</g>
<g>
<title>org/h2/command/dml/TransactionCommand.update (1 samples, 0.02%)</title><rect x="730.0" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.0" y="1006.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.commit (1 samples, 0.02%)</title><rect x="730.0" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.0" y="990.0"></text>
</g>
<g>
<title>org/hibernate/resource/transaction/backend/jdbc/internal/JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback (6 samples, 0.15%)</title><rect x="730.3" y="1091.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.3" y="1102.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcCoordinatorImpl.beforeTransactionCompletion (6 samples, 0.15%)</title><rect x="730.3" y="1075.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.3" y="1086.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.beforeTransactionCompletion (6 samples, 0.15%)</title><rect x="730.3" y="1059.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.3" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.flushBeforeTransactionCompletion (6 samples, 0.15%)</title><rect x="730.3" y="1043.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.3" y="1054.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.managedFlush (6 samples, 0.15%)</title><rect x="730.3" y="1027.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.3" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.doFlush (6 samples, 0.15%)</title><rect x="730.3" y="1011.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.3" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/event/service/internal/EventListenerGroupImpl.fireEventOnEachListener (6 samples, 0.15%)</title><rect x="730.3" y="995.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.3" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl$$Lambda$1970.0x00007f9a5ca4a118.accept (6 samples, 0.15%)</title><rect x="730.3" y="979.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.3" y="990.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEventListener.onFlush (6 samples, 0.15%)</title><rect x="730.3" y="963.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.3" y="974.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.flushEverythingToExecutions (2 samples, 0.05%)</title><rect x="730.3" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.3" y="958.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.setFlushing (1 samples, 0.02%)</title><rect x="730.3" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.3" y="942.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/NaturalIdResolutionsImpl.cleanupFromSynchronizations (1 samples, 0.02%)</title><rect x="730.3" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.3" y="926.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/NaturalIdResolutionsImpl.unStashInvalidNaturalIdReferences (1 samples, 0.02%)</title><rect x="730.3" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValuesView.iterator (1 samples, 0.02%)</title><rect x="730.3" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValueIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="730.3" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$BaseIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="730.3" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.3" y="862.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.flushEntities (1 samples, 0.02%)</title><rect x="730.6" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.6" y="942.0"></text>
</g>
<g>
<title>org/hibernate/event/service/internal/EventListenerGroupImpl.fireEventOnEachListener (1 samples, 0.02%)</title><rect x="730.6" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.6" y="926.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener$$Lambda$1975.0x00007f9a5ca4e000.accept (1 samples, 0.02%)</title><rect x="730.6" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.6" y="910.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.onFlushEntity (1 samples, 0.02%)</title><rect x="730.6" y="883.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.6" y="894.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.isUpdateNecessary (1 samples, 0.02%)</title><rect x="730.6" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.6" y="878.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.dirtyCheck (1 samples, 0.02%)</title><rect x="730.6" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.6" y="862.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.getDirtyProperties (1 samples, 0.02%)</title><rect x="730.6" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.6" y="846.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultFlushEntityEventListener.getDirtyPropertiesFromCustomEntityDirtinessStrategy (1 samples, 0.02%)</title><rect x="730.6" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.6" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="730.6" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.6" y="814.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="730.6" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.6" y="798.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="730.6" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="730.6" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="730.6" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.6" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="730.6" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.6" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="730.6" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.6" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="730.6" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.6" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="730.6" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.6" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="730.6" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.6" y="670.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="730.6" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="730.6" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="730.6" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.6" y="622.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="730.6" y="595.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="733.6" y="606.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="730.6" y="579.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="733.6" y="590.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="730.6" y="563.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="733.6" y="574.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="730.6" y="547.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="733.6" y="558.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="730.6" y="531.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="733.6" y="542.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="730.6" y="515.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="733.6" y="526.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="730.6" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="733.6" y="510.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="730.6" y="483.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="733.6" y="494.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::allocate_instance(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="730.6" y="467.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="733.6" y="478.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::check_out_of_memory() (1 samples, 0.02%)</title><rect x="730.6" y="451.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="733.6" y="462.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractFlushingEventListener.performExecutions (4 samples, 0.10%)</title><rect x="730.9" y="947.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.9" y="958.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.executeActions (4 samples, 0.10%)</title><rect x="730.9" y="931.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.9" y="942.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.executeActions (4 samples, 0.10%)</title><rect x="730.9" y="915.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.9" y="926.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/EntityInsertAction.execute (4 samples, 0.10%)</title><rect x="730.9" y="899.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.9" y="910.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/AbstractEntityPersister.insert (4 samples, 0.10%)</title><rect x="730.9" y="883.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.9" y="894.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.coordinateInsert (4 samples, 0.10%)</title><rect x="730.9" y="867.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.9" y="878.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.doStaticInserts (4 samples, 0.10%)</title><rect x="730.9" y="851.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.9" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="730.9" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.9" y="846.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="730.9" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.9" y="830.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="730.9" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.9" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="730.9" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.9" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="730.9" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.9" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="730.9" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.9" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="730.9" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.9" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="730.9" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.9" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="730.9" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="730.9" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="730.9" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.9" y="686.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.encodePath (1 samples, 0.02%)</title><rect x="730.9" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.9" y="670.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.firstEncodeIndex (1 samples, 0.02%)</title><rect x="730.9" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.9" y="654.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.decomposeForInsert (1 samples, 0.02%)</title><rect x="731.2" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.2" y="846.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.breakDownJdbcValue (1 samples, 0.02%)</title><rect x="731.2" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.2" y="830.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/EntityTableMapping$KeyMapping.breakDownKeyJdbcValues (1 samples, 0.02%)</title><rect x="731.2" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.02%)</title><rect x="731.2" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.02%)</title><rect x="731.2" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.02%)</title><rect x="731.2" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.02%)</title><rect x="731.2" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.02%)</title><rect x="731.2" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x00007f9a5c0a4400.invokeStatic (1 samples, 0.02%)</title><rect x="731.2" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.02%)</title><rect x="731.2" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.02%)</title><rect x="731.2" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.02%)</title><rect x="731.2" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (1 samples, 0.02%)</title><rect x="731.2" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (1 samples, 0.02%)</title><rect x="731.2" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassDefiner.defineClassAsLookup (1 samples, 0.02%)</title><rect x="731.2" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassDefiner.defineClass (1 samples, 0.02%)</title><rect x="731.2" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.2" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.defineClass (1 samples, 0.02%)</title><rect x="731.2" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass0 (1 samples, 0.02%)</title><rect x="731.2" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.2" y="574.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass0 (1 samples, 0.02%)</title><rect x="731.2" y="547.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="734.2" y="558.0"></text>
</g>
<g>
<title>JVM_LookupDefineClass (1 samples, 0.02%)</title><rect x="731.2" y="531.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="734.2" y="542.0"></text>
</g>
<g>
<title>jvm_lookup_define_class(_jclass*, char const*, signed char const*, int, _jobject*, unsigned char, int, _jobject*, JavaThread*) (1 samples, 0.02%)</title><rect x="731.2" y="515.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="734.2" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_hidden_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="731.2" y="499.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="734.2" y="510.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="731.2" y="483.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="734.2" y="494.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="731.2" y="467.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="734.2" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_klass(ClassFileParser const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="731.2" y="451.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="734.2" y="462.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="731.2" y="435.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="734.2" y="446.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="731.2" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.2" y="430.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="731.2" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="734.2" y="414.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="731.2" y="387.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="734.2" y="398.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="731.2" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="734.2" y="382.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="731.2" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="734.2" y="366.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="731.2" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="734.2" y="350.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="731.2" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="734.2" y="334.0"></text>
</g>
<g>
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="731.2" y="307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="734.2" y="318.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="731.2" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="734.2" y="302.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="731.2" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="734.2" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="731.2" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="734.2" y="270.0"></text>
</g>
<g>
<title>org/hibernate/persister/entity/mutation/InsertCoordinator.executor (2 samples, 0.05%)</title><rect x="731.5" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.5" y="846.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/StandardMutationExecutorService.createExecutor (2 samples, 0.05%)</title><rect x="731.5" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.5" y="830.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/MutationExecutorSingleNonBatched.&lt;init&gt; (2 samples, 0.05%)</title><rect x="731.5" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.5" y="814.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/AbstractSingleMutationExecutor.&lt;init&gt; (1 samples, 0.02%)</title><rect x="731.5" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.5" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.5" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.5" y="782.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.5" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.5" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.5" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.5" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.5" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="731.5" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.5" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="731.5" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.5" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="731.5" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.5" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="731.5" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.5" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="731.5" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="731.5" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="731.5" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.5" y="622.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="731.5" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.5" y="606.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="731.5" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.5" y="590.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="731.5" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.5" y="574.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="731.5" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.5" y="558.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="731.5" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.5" y="542.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="731.5" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.5" y="526.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.02%)</title><rect x="731.5" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="734.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="731.5" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="731.5" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.5" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="731.5" y="451.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="734.5" y="462.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/PreparedStatementGroupSingleTable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="731.8" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.8" y="798.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/mutation/internal/ModelMutationHelper.standardPreparation (1 samples, 0.02%)</title><rect x="731.8" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.8" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.8" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.8" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.8" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.8" y="750.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.8" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.8" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.8" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.02%)</title><rect x="731.8" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.8" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassNotFoundException.&lt;init&gt; (1 samples, 0.02%)</title><rect x="731.8" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.8" y="670.0"></text>
</g>
<g>
<title>java/lang/ReflectiveOperationException.&lt;init&gt; (1 samples, 0.02%)</title><rect x="731.8" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.02%)</title><rect x="731.8" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="731.8" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.02%)</title><rect x="731.8" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.8" y="606.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.02%)</title><rect x="731.8" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.8" y="590.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.02%)</title><rect x="731.8" y="563.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="734.8" y="574.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.02%)</title><rect x="731.8" y="547.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="734.8" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="731.8" y="531.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="734.8" y="542.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="731.8" y="515.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="734.8" y="526.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="731.8" y="499.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="734.8" y="510.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.02%)</title><rect x="731.8" y="483.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="734.8" y="494.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.createTransactionIfNecessary (1 samples, 0.02%)</title><rect x="732.1" y="1187.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.1" y="1198.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.getTransaction (1 samples, 0.02%)</title><rect x="732.1" y="1171.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.1" y="1182.0"></text>
</g>
<g>
<title>org/springframework/transaction/support/AbstractPlatformTransactionManager.startTransaction (1 samples, 0.02%)</title><rect x="732.1" y="1155.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.1" y="1166.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/JpaTransactionManager.doBegin (1 samples, 0.02%)</title><rect x="732.1" y="1139.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.1" y="1150.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/vendor/HibernateJpaDialect.beginTransaction (1 samples, 0.02%)</title><rect x="732.1" y="1123.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.1" y="1134.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.getTransaction (1 samples, 0.02%)</title><rect x="732.1" y="1107.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.1" y="1118.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (1 samples, 0.02%)</title><rect x="732.1" y="1091.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="732.1" y="1075.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="732.1" y="1059.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="732.1" y="1043.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.02%)</title><rect x="732.1" y="1027.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.1" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.getTransaction (1 samples, 0.02%)</title><rect x="732.1" y="1011.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.1" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.accessTransaction (1 samples, 0.02%)</title><rect x="732.1" y="995.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="732.1" y="979.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.1" y="990.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="732.1" y="963.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.1" y="974.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="732.1" y="947.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.1" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="732.1" y="931.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.02%)</title><rect x="732.1" y="915.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.02%)</title><rect x="732.1" y="899.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="732.1" y="883.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="732.1" y="867.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="732.1" y="851.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="732.1" y="835.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="732.1" y="819.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.1" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.02%)</title><rect x="732.1" y="803.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.1" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.02%)</title><rect x="732.1" y="787.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.1" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.02%)</title><rect x="732.1" y="771.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.1" y="782.0"></text>
</g>
<g>
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="732.1" y="755.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="735.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="732.1" y="739.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="735.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="732.1" y="723.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="732.1" y="707.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="735.1" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="732.1" y="691.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="735.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="732.1" y="675.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="735.1" y="686.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="732.1" y="659.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="735.1" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="732.1" y="643.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="735.1" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="732.1" y="627.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="735.1" y="638.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionInterceptor$1.proceedWithInvocation (10 samples, 0.24%)</title><rect x="732.3" y="1187.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.3" y="1198.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (10 samples, 0.24%)</title><rect x="732.3" y="1171.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.3" y="1182.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutorMethodInterceptor.invoke (9 samples, 0.22%)</title><rect x="732.6" y="1155.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.6" y="1166.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutorMethodInterceptor.doInvoke (9 samples, 0.22%)</title><rect x="732.6" y="1139.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.6" y="1150.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (9 samples, 0.22%)</title><rect x="732.6" y="1123.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.6" y="1134.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke (9 samples, 0.22%)</title><rect x="732.6" y="1107.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.6" y="1118.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryComposition.invoke (9 samples, 0.22%)</title><rect x="732.6" y="1091.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.6" y="1102.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.invoke (9 samples, 0.22%)</title><rect x="732.6" y="1075.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="732.6" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.6" y="1070.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments$$Lambda$1927.0x00007f9a5ca3e000.apply (1 samples, 0.02%)</title><rect x="732.6" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.6" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.findImplementationFragment (1 samples, 0.02%)</title><rect x="732.6" y="1027.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.6" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="732.6" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="735.6" y="1022.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="735.6" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="979.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="735.6" y="990.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="963.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="735.6" y="974.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="735.6" y="958.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="735.6" y="942.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="735.6" y="926.0"></text>
</g>
<g>
<title>ConstantPool::copy_bootstrap_arguments_at_impl(constantPoolHandle const&amp;, int, int, int, objArrayHandle, int, bool, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="899.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="735.6" y="910.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="883.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="735.6" y="894.0"></text>
</g>
<g>
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="867.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="735.6" y="878.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, int, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="732.6" y="851.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="735.6" y="862.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="732.6" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="735.6" y="846.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="732.6" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="735.6" y="830.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="732.6" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="735.6" y="814.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.02%)</title><rect x="732.6" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="735.6" y="798.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.forFragmentMethod (1 samples, 0.02%)</title><rect x="732.9" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.9" y="1070.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.&lt;init&gt; (1 samples, 0.02%)</title><rect x="732.9" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.9" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.&lt;init&gt; (1 samples, 0.02%)</title><rect x="732.9" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.9" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="732.9" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="735.9" y="1022.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 0.02%)</title><rect x="732.9" y="995.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="735.9" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="732.9" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="735.9" y="990.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="732.9" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="735.9" y="974.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="732.9" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="735.9" y="958.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(JavaThread*) (1 samples, 0.02%)</title><rect x="732.9" y="931.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="735.9" y="942.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.invoke (7 samples, 0.17%)</title><rect x="733.2" y="1059.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.2" y="1070.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.doInvoke (7 samples, 0.17%)</title><rect x="733.2" y="1043.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.2" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryFragmentMethodInvoker$$Lambda$1949.0x00007f9a5ca3ca20.invoke (7 samples, 0.17%)</title><rect x="733.2" y="1027.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.2" y="1038.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0 (7 samples, 0.17%)</title><rect x="733.2" y="1011.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.2" y="1022.0"></text>
</g>
<g>
<title>org/springframework/aop/support/AopUtils.invokeJoinpointUsingReflection (7 samples, 0.17%)</title><rect x="733.2" y="995.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="733.2" y="979.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="733.2" y="963.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="733.2" y="947.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="733.2" y="931.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.2" y="942.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/SimpleJpaRepository.save (7 samples, 0.17%)</title><rect x="733.2" y="915.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.2" y="926.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.persist (7 samples, 0.17%)</title><rect x="733.2" y="899.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.2" y="910.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke (7 samples, 0.17%)</title><rect x="733.2" y="883.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.2" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="733.2" y="867.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="733.2" y="851.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor27.invoke (1 samples, 0.02%)</title><rect x="733.2" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.2" y="846.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.persist (1 samples, 0.02%)</title><rect x="733.2" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.2" y="830.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (1 samples, 0.02%)</title><rect x="733.2" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.2" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="733.2" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="733.2" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor27.invoke (1 samples, 0.02%)</title><rect x="733.2" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.2" y="766.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.persist (1 samples, 0.02%)</title><rect x="733.2" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.2" y="750.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.firePersist (1 samples, 0.02%)</title><rect x="733.2" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.2" y="734.0"></text>
</g>
<g>
<title>org/hibernate/event/service/internal/EventListenerGroupImpl.fireEventOnEachListener (1 samples, 0.02%)</title><rect x="733.2" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.2" y="718.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl$$Lambda$1953.0x00007f9a5ca40888.accept (1 samples, 0.02%)</title><rect x="733.2" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.2" y="702.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.onPersist (1 samples, 0.02%)</title><rect x="733.2" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.2" y="686.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.onPersist (1 samples, 0.02%)</title><rect x="733.2" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.2" y="670.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.persist (1 samples, 0.02%)</title><rect x="733.2" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.2" y="654.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.entityIsTransient (1 samples, 0.02%)</title><rect x="733.2" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.2" y="638.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.saveWithGeneratedId (1 samples, 0.02%)</title><rect x="733.2" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.2" y="622.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.performSave (1 samples, 0.02%)</title><rect x="733.2" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.2" y="606.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.performSaveOrReplicate (1 samples, 0.02%)</title><rect x="733.2" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.2" y="590.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.addInsertAction (1 samples, 0.02%)</title><rect x="733.2" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.2" y="574.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.addAction (1 samples, 0.02%)</title><rect x="733.2" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.2" y="558.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.addInsertAction (1 samples, 0.02%)</title><rect x="733.2" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.2" y="542.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.addResolvedEntityInsertAction (1 samples, 0.02%)</title><rect x="733.2" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.2" y="526.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/AbstractEntityInsertAction.makeEntityManaged (1 samples, 0.02%)</title><rect x="733.2" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.2" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.addEntity (1 samples, 0.02%)</title><rect x="733.2" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.2" y="494.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.addEntity (1 samples, 0.02%)</title><rect x="733.2" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.2" y="478.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.getOrInitializeEntitiesByKey (1 samples, 0.02%)</title><rect x="733.2" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.2" y="462.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/CollectionHelper.mapOfSize (1 samples, 0.02%)</title><rect x="733.2" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.2" y="446.0"></text>
</g>
<g>
<title>org/hibernate/internal/util/collections/CollectionHelper.determineProperSizing (1 samples, 0.02%)</title><rect x="733.2" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="733.5" y="835.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="733.5" y="819.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.5" y="830.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.persist (6 samples, 0.15%)</title><rect x="733.5" y="803.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.5" y="814.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (6 samples, 0.15%)</title><rect x="733.5" y="787.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.5" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.15%)</title><rect x="733.5" y="771.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="733.5" y="755.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (6 samples, 0.15%)</title><rect x="733.5" y="739.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (6 samples, 0.15%)</title><rect x="733.5" y="723.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.5" y="734.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.persist (6 samples, 0.15%)</title><rect x="733.5" y="707.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.5" y="718.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl.firePersist (6 samples, 0.15%)</title><rect x="733.5" y="691.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.5" y="702.0"></text>
</g>
<g>
<title>org/hibernate/event/service/internal/EventListenerGroupImpl.fireEventOnEachListener (6 samples, 0.15%)</title><rect x="733.5" y="675.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.5" y="686.0"></text>
</g>
<g>
<title>org/hibernate/internal/SessionImpl$$Lambda$1953.0x00007f9a5ca40888.accept (6 samples, 0.15%)</title><rect x="733.5" y="659.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.5" y="670.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.onPersist (6 samples, 0.15%)</title><rect x="733.5" y="643.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.onPersist (6 samples, 0.15%)</title><rect x="733.5" y="627.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.5" y="638.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.persist (6 samples, 0.15%)</title><rect x="733.5" y="611.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.5" y="622.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/DefaultPersistEventListener.entityIsTransient (6 samples, 0.15%)</title><rect x="733.5" y="595.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.5" y="606.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.saveWithGeneratedId (6 samples, 0.15%)</title><rect x="733.5" y="579.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.5" y="590.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.generateId (1 samples, 0.02%)</title><rect x="733.5" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.5" y="574.0"></text>
</g>
<g>
<title>org/hibernate/id/IdentifierGenerator.generate (1 samples, 0.02%)</title><rect x="733.5" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.5" y="558.0"></text>
</g>
<g>
<title>org/hibernate/id/enhanced/SequenceStyleGenerator.generate (1 samples, 0.02%)</title><rect x="733.5" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.5" y="542.0"></text>
</g>
<g>
<title>org/hibernate/id/enhanced/PooledOptimizer.generate (1 samples, 0.02%)</title><rect x="733.5" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.5" y="526.0"></text>
</g>
<g>
<title>org/hibernate/id/enhanced/SequenceStructure$1.getNextValue (1 samples, 0.02%)</title><rect x="733.5" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.5" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/ResultSetReturnImpl.extract (1 samples, 0.02%)</title><rect x="733.5" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.5" y="494.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.executeQuery (1 samples, 0.02%)</title><rect x="733.5" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.5" y="478.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyPreparedStatement.executeQuery (1 samples, 0.02%)</title><rect x="733.5" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.5" y="462.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.executeQuery (1 samples, 0.02%)</title><rect x="733.5" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.5" y="446.0"></text>
</g>
<g>
<title>org/h2/command/Command.executeQuery (1 samples, 0.02%)</title><rect x="733.5" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.5" y="430.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.startStatementWithinTransaction (1 samples, 0.02%)</title><rect x="733.5" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.5" y="414.0"></text>
</g>
<g>
<title>org/h2/command/CommandContainer.getDependencies (1 samples, 0.02%)</title><rect x="733.5" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.5" y="398.0"></text>
</g>
<g>
<title>org/h2/command/query/Query.collectDependencies (1 samples, 0.02%)</title><rect x="733.5" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.5" y="382.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.isEverything (1 samples, 0.02%)</title><rect x="733.5" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.5" y="366.0"></text>
</g>
<g>
<title>org/h2/expression/ExpressionVisitor.addDependency (1 samples, 0.02%)</title><rect x="733.5" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="733.5" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.5" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="733.5" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.5" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="733.5" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.5" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="733.5" y="275.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="736.5" y="286.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="733.5" y="259.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="736.5" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="733.5" y="243.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="736.5" y="254.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="733.5" y="227.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="736.5" y="238.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="733.5" y="211.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="736.5" y="222.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.performSave (5 samples, 0.12%)</title><rect x="733.8" y="563.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.8" y="574.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="733.8" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="736.8" y="558.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="531.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="736.8" y="542.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="736.8" y="526.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="499.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="736.8" y="510.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="483.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="736.8" y="494.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="467.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="736.8" y="478.0"></text>
</g>
<g>
<title>SystemDictionary::find_method_handle_type(Symbol*, Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="451.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="736.8" y="462.0"></text>
</g>
<g>
<title>SignatureStream::as_java_mirror(Handle, Handle, SignatureStream::FailureMode, JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="435.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="736.8" y="446.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="419.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="736.8" y="430.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="403.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="736.8" y="414.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="387.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="736.8" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="371.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="736.8" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(JavaThread*) (1 samples, 0.02%)</title><rect x="733.8" y="355.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="736.8" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="733.8" y="339.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="736.8" y="350.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="733.8" y="323.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="736.8" y="334.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="733.8" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.8" y="318.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="733.8" y="291.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="736.8" y="302.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="733.8" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="736.8" y="286.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="733.8" y="259.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="736.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.02%)</title><rect x="734.1" y="547.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.02%)</title><rect x="734.1" y="531.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.02%)</title><rect x="734.1" y="515.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.02%)</title><rect x="734.1" y="499.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.02%)</title><rect x="734.1" y="483.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x00007f9a5c0a4400.invokeStatic (1 samples, 0.02%)</title><rect x="734.1" y="467.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.02%)</title><rect x="734.1" y="451.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/AbstractValidatingLambdaMetafactory.validateMetafactoryArgs (1 samples, 0.02%)</title><rect x="734.1" y="435.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/AbstractValidatingLambdaMetafactory.checkDescriptor (1 samples, 0.02%)</title><rect x="734.1" y="419.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/AbstractValidatingLambdaMetafactory.isAdaptableToAsReturnStrict (1 samples, 0.02%)</title><rect x="734.1" y="403.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.1" y="414.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.performSaveOrReplicate (3 samples, 0.07%)</title><rect x="734.3" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.3" y="558.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.addEntry (1 samples, 0.02%)</title><rect x="734.3" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.3" y="542.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/MutableEntityEntryFactory.createEntityEntry (1 samples, 0.02%)</title><rect x="734.3" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.3" y="526.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/MutableEntityEntry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="734.3" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.3" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/AbstractEntityEntry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="734.3" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.3" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="734.3" y="467.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="737.3" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="734.3" y="451.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="737.3" y="462.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="734.3" y="435.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="737.3" y="446.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="734.3" y="419.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="737.3" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="734.3" y="403.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="737.3" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="734.3" y="387.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="737.3" y="398.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, _jclass*) (1 samples, 0.02%)</title><rect x="734.3" y="371.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="737.3" y="382.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.02%)</title><rect x="734.3" y="355.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="737.3" y="366.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.02%)</title><rect x="734.3" y="339.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="737.3" y="350.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="734.3" y="323.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="737.3" y="334.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.addInsertAction (1 samples, 0.02%)</title><rect x="734.6" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.6" y="542.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.addAction (1 samples, 0.02%)</title><rect x="734.6" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.6" y="526.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.addInsertAction (1 samples, 0.02%)</title><rect x="734.6" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.6" y="510.0"></text>
</g>
<g>
<title>org/hibernate/engine/spi/ActionQueue.addResolvedEntityInsertAction (1 samples, 0.02%)</title><rect x="734.6" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.6" y="494.0"></text>
</g>
<g>
<title>org/hibernate/action/internal/AbstractEntityInsertAction.makeEntityManaged (1 samples, 0.02%)</title><rect x="734.6" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.6" y="478.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.addEntity (1 samples, 0.02%)</title><rect x="734.6" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.6" y="462.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.addEntity (1 samples, 0.02%)</title><rect x="734.6" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.6" y="446.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext$EntityHolderImpl.forEntity (1 samples, 0.02%)</title><rect x="734.6" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.6" y="430.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext$EntityHolderImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="734.6" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.6" y="414.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="734.6" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.6" y="398.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="734.6" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.6" y="382.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="734.6" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.6" y="366.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="734.6" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.6" y="350.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="734.6" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.6" y="334.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="734.6" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.6" y="318.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="734.6" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.6" y="302.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="734.6" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.6" y="286.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="734.6" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.6" y="270.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="734.6" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.02%)</title><rect x="734.6" y="227.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.6" y="238.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.read (1 samples, 0.02%)</title><rect x="734.6" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.6" y="222.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/ZipInflaterInputStream.read (1 samples, 0.02%)</title><rect x="734.6" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.6" y="206.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.02%)</title><rect x="734.6" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.6" y="190.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.02%)</title><rect x="734.6" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.6" y="174.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.02%)</title><rect x="734.6" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="734.6" y="131.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="737.6" y="142.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.02%)</title><rect x="734.6" y="115.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="737.6" y="126.0"></text>
</g>
<g>
<title>org/hibernate/event/internal/AbstractSaveEventListener.cascadeBeforeSave (1 samples, 0.02%)</title><rect x="734.9" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.9" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="734.9" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.9" y="526.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="734.9" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.9" y="510.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="734.9" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.9" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="734.9" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.9" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="734.9" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.9" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="734.9" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.9" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="734.9" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.9" y="430.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="734.9" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.9" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="734.9" y="387.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.9" y="398.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="734.9" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.02%)</title><rect x="734.9" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.9" y="366.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.read (1 samples, 0.02%)</title><rect x="734.9" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.9" y="350.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/ZipInflaterInputStream.read (1 samples, 0.02%)</title><rect x="734.9" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.9" y="334.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.02%)</title><rect x="734.9" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.9" y="318.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.02%)</title><rect x="734.9" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.9" y="302.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.02%)</title><rect x="734.9" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.9" y="286.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.02%)</title><rect x="734.9" y="259.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="737.9" y="270.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$DefaultCrudMethodMetadata.&lt;init&gt; (1 samples, 0.02%)</title><rect x="735.2" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.2" y="1278.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$DefaultCrudMethodMetadata.findQueryHints (1 samples, 0.02%)</title><rect x="735.2" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="735.2" y="1235.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.2" y="1246.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="735.2" y="1219.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.2" y="1230.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="735.2" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="735.2" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.2" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="735.2" y="1171.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="738.2" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="735.2" y="1155.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.2" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="735.2" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.2" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="735.2" y="1123.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.2" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="735.2" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="735.2" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="735.2" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.2" y="1086.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="735.2" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.2" y="1070.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="735.2" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.2" y="1054.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="735.2" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.2" y="1038.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/UrlJarFiles.getOrCreate (1 samples, 0.02%)</title><rect x="735.2" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.2" y="1022.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/UrlJarFiles.getCached (1 samples, 0.02%)</title><rect x="735.2" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.2" y="1006.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/UrlJarFiles$Cache.get (1 samples, 0.02%)</title><rect x="735.2" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.2" y="990.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarFileUrlKey.get (1 samples, 0.02%)</title><rect x="735.2" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.2" y="974.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (1 samples, 0.02%)</title><rect x="735.2" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.2" y="958.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy116.findByUserNameAndPassword (40 samples, 0.97%)</title><rect x="735.5" y="1427.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.5" y="1438.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/JdkDynamicAopProxy.invoke (40 samples, 0.97%)</title><rect x="735.5" y="1411.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.5" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="735.5" y="1395.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.5" y="1406.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="735.5" y="1379.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.5" y="1390.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="735.5" y="1363.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="735.5" y="1347.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.5" y="1358.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="735.5" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.5" y="1342.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="735.5" y="1315.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.5" y="1326.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="735.5" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.5" y="1310.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="735.5" y="1283.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.5" y="1294.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="735.5" y="1267.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.5" y="1278.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="735.5" y="1251.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.02%)</title><rect x="735.5" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.5" y="1246.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.read (1 samples, 0.02%)</title><rect x="735.5" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.5" y="1230.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/ZipInflaterInputStream.read (1 samples, 0.02%)</title><rect x="735.5" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.5" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.02%)</title><rect x="735.5" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.5" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.02%)</title><rect x="735.5" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.5" y="1182.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.02%)</title><rect x="735.5" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.5" y="1166.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.02%)</title><rect x="735.5" y="1139.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="738.5" y="1150.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (39 samples, 0.95%)</title><rect x="735.8" y="1395.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.8" y="1406.0"></text>
</g>
<g>
<title>org/springframework/aop/interceptor/ExposeInvocationInterceptor.invoke (39 samples, 0.95%)</title><rect x="735.8" y="1379.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.8" y="1390.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (39 samples, 0.95%)</title><rect x="735.8" y="1363.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.8" y="1374.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/support/CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke (39 samples, 0.95%)</title><rect x="735.8" y="1347.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.8" y="1358.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (39 samples, 0.95%)</title><rect x="735.8" y="1331.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.8" y="1342.0"></text>
</g>
<g>
<title>org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.invoke (39 samples, 0.95%)</title><rect x="735.8" y="1315.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.8" y="1326.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (39 samples, 0.95%)</title><rect x="735.8" y="1299.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.8" y="1310.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionInterceptor.invoke (39 samples, 0.95%)</title><rect x="735.8" y="1283.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.8" y="1294.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionAspectSupport.invokeWithinTransaction (39 samples, 0.95%)</title><rect x="735.8" y="1267.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.8" y="1278.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.getTransactionAttribute (1 samples, 0.02%)</title><rect x="735.8" y="1251.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.8" y="1262.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/TransactionalRepositoryProxyPostProcessor$RepositoryAnnotationTransactionAttributeSource.computeTransactionAttribute (1 samples, 0.02%)</title><rect x="735.8" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.8" y="1246.0"></text>
</g>
<g>
<title>org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.findTransactionAttribute (1 samples, 0.02%)</title><rect x="735.8" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.8" y="1230.0"></text>
</g>
<g>
<title>org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.determineTransactionAttribute (1 samples, 0.02%)</title><rect x="735.8" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.8" y="1214.0"></text>
</g>
<g>
<title>org/springframework/transaction/annotation/SpringTransactionAnnotationParser.parseTransactionAnnotation (1 samples, 0.02%)</title><rect x="735.8" y="1187.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.8" y="1198.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedElementUtils.findMergedAnnotationAttributes (1 samples, 0.02%)</title><rect x="735.8" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.8" y="1182.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.get (1 samples, 0.02%)</title><rect x="735.8" y="1155.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.8" y="1166.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations.scan (1 samples, 0.02%)</title><rect x="735.8" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.8" y="1150.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.scan (1 samples, 0.02%)</title><rect x="735.8" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.8" y="1134.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.process (1 samples, 0.02%)</title><rect x="735.8" y="1107.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.8" y="1118.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processClass (1 samples, 0.02%)</title><rect x="735.8" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.8" y="1102.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processClassHierarchy (1 samples, 0.02%)</title><rect x="735.8" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.8" y="1086.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processClassHierarchy (1 samples, 0.02%)</title><rect x="735.8" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.8" y="1070.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationsScanner.processClassHierarchy (1 samples, 0.02%)</title><rect x="735.8" y="1043.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.8" y="1054.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.doWithAnnotations (1 samples, 0.02%)</title><rect x="735.8" y="1027.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.8" y="1038.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.doWithAnnotations (1 samples, 0.02%)</title><rect x="735.8" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.8" y="1022.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.process (1 samples, 0.02%)</title><rect x="735.8" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.8" y="1006.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (1 samples, 0.02%)</title><rect x="735.8" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.8" y="990.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings.forAnnotationType (1 samples, 0.02%)</title><rect x="735.8" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.8" y="974.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationTypeMappings$Cache.get (1 samples, 0.02%)</title><rect x="735.8" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="735.8" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.8" y="942.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.putIfAbsent (1 samples, 0.02%)</title><rect x="735.8" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.8" y="926.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.put (1 samples, 0.02%)</title><rect x="735.8" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.8" y="910.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.doTask (1 samples, 0.02%)</title><rect x="735.8" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.8" y="894.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.doTask (1 samples, 0.02%)</title><rect x="735.8" y="867.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="738.8" y="878.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.restructureIfNecessary (1 samples, 0.02%)</title><rect x="735.8" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.8" y="862.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.restructure (1 samples, 0.02%)</title><rect x="735.8" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.8" y="846.0"></text>
</g>
<g>
<title>org/springframework/transaction/interceptor/TransactionInterceptor$1.proceedWithInvocation (38 samples, 0.92%)</title><rect x="736.1" y="1251.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.1" y="1262.0"></text>
</g>
<g>
<title>org/springframework/aop/framework/ReflectiveMethodInvocation.proceed (38 samples, 0.92%)</title><rect x="736.1" y="1235.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.1" y="1246.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutorMethodInterceptor.invoke (38 samples, 0.92%)</title><rect x="736.1" y="1219.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.1" y="1230.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/QueryExecutorMethodInterceptor.doInvoke (38 samples, 0.92%)</title><rect x="736.1" y="1203.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.1" y="1187.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.1" y="1198.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.1" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.1" y="1182.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.1" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.1" y="1139.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.1" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="736.1" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.1" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="736.1" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.1" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="736.1" y="1091.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.1" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="736.1" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.1" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="736.1" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.1" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="736.1" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.02%)</title><rect x="736.1" y="1027.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.1" y="1038.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.read (1 samples, 0.02%)</title><rect x="736.1" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.1" y="1022.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.in (1 samples, 0.02%)</title><rect x="736.1" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.1" y="1006.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection$ConnectionInputStream.getDelegateInputStream (1 samples, 0.02%)</title><rect x="736.1" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.1" y="990.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.getInputStream (1 samples, 0.02%)</title><rect x="736.1" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.1" y="974.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.getInputStream (1 samples, 0.02%)</title><rect x="736.1" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.1" y="958.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFileResources.addInputStream (1 samples, 0.02%)</title><rect x="736.1" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.1" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (1 samples, 0.02%)</title><rect x="736.1" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.1" y="926.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.invoke (37 samples, 0.90%)</title><rect x="736.4" y="1187.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.4" y="1198.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker.doInvoke (37 samples, 0.90%)</title><rect x="736.4" y="1171.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.4" y="1182.0"></text>
</g>
<g>
<title>org/springframework/data/repository/core/support/RepositoryMethodInvoker$RepositoryQueryMethodInvoker$$Lambda$1653.0x00007f9a5c9c54a0.invoke (37 samples, 0.90%)</title><rect x="736.4" y="1155.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.4" y="1166.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.execute (37 samples, 0.90%)</title><rect x="736.4" y="1139.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.4" y="1150.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.doExecute (36 samples, 0.87%)</title><rect x="736.4" y="1123.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.4" y="1134.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaQueryExecution.execute (36 samples, 0.87%)</title><rect x="736.4" y="1107.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.4" y="1118.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/JpaQueryExecution$SingleEntityExecution.doExecute (36 samples, 0.87%)</title><rect x="736.4" y="1091.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.4" y="1102.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.getSingleResult (28 samples, 0.68%)</title><rect x="736.4" y="1075.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.4" y="1086.0"></text>
</g>
<g>
<title>org/hibernate/query/spi/AbstractSelectionQuery.list (28 samples, 0.68%)</title><rect x="736.4" y="1059.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.4" y="1070.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.doList (28 samples, 0.68%)</title><rect x="736.4" y="1043.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.4" y="1027.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.4" y="1038.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.4" y="1011.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.4" y="1022.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.4" y="995.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.4" y="979.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.4" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="736.4" y="963.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.4" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="736.4" y="947.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.4" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="736.4" y="931.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.4" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="736.4" y="915.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.4" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="736.4" y="899.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.4" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="736.4" y="883.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.4" y="894.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="736.4" y="867.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.4" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="736.4" y="851.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.4" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="736.4" y="835.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.4" y="846.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="736.4" y="819.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="739.4" y="830.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="736.4" y="803.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="739.4" y="814.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="736.4" y="787.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="739.4" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="736.4" y="771.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="739.4" y="782.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="736.4" y="755.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="739.4" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="736.4" y="739.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="739.4" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="736.4" y="723.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="739.4" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="736.4" y="707.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="739.4" y="718.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.02%)</title><rect x="736.4" y="691.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="739.4" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.performList (24 samples, 0.58%)</title><rect x="736.6" y="1027.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.6" y="1038.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation (24 samples, 0.58%)</title><rect x="736.6" y="1011.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.6" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan$$Lambda$1704.0x00007f9a5c9f8228.interpret (12 samples, 0.29%)</title><rect x="736.6" y="995.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.6" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.lambda$new$2 (12 samples, 0.29%)</title><rect x="736.6" y="979.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.6" y="990.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcSelectExecutor.list (12 samples, 0.29%)</title><rect x="736.6" y="963.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.6" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcSelectExecutor.list (12 samples, 0.29%)</title><rect x="736.6" y="947.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.6" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.6" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.6" y="942.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.6" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.6" y="926.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.6" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.6" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.6" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.6" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.02%)</title><rect x="736.6" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="736.6" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="736.6" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="736.6" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="736.6" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.02%)</title><rect x="736.6" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.6" y="782.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.02%)</title><rect x="736.6" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.6" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.02%)</title><rect x="736.6" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.6" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.02%)</title><rect x="736.6" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.6" y="734.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.02%)</title><rect x="736.6" y="707.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="739.6" y="718.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.02%)</title><rect x="736.6" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="739.6" y="702.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.02%)</title><rect x="736.6" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="739.6" y="686.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/JdbcSelectExecutorStandardImpl.executeQuery (11 samples, 0.27%)</title><rect x="736.9" y="931.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.9" y="942.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/internal/JdbcSelectExecutorStandardImpl.doExecuteQuery (11 samples, 0.27%)</title><rect x="736.9" y="915.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.9" y="926.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="736.9" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="739.9" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="736.9" y="883.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="739.9" y="894.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="736.9" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="739.9" y="878.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="736.9" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="739.9" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="736.9" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="739.9" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="736.9" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="739.9" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="736.9" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="739.9" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="736.9" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="739.9" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(JavaThread*) (1 samples, 0.02%)</title><rect x="736.9" y="771.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="739.9" y="782.0"></text>
</g>
<g>
<title>_SafeFetchN_fault (1 samples, 0.02%)</title><rect x="736.9" y="755.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="739.9" y="766.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/ResultsHelper.createRowReader (5 samples, 0.12%)</title><rect x="737.2" y="899.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="740.2" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/ResultsHelper.createRowReader (5 samples, 0.12%)</title><rect x="737.2" y="883.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.2" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="737.2" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="740.2" y="878.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="737.2" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="740.2" y="862.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="737.2" y="835.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="740.2" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="737.2" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="740.2" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.02%)</title><rect x="737.2" y="803.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="740.2" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.05%)</title><rect x="737.5" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.5" y="878.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (2 samples, 0.05%)</title><rect x="737.5" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.5" y="862.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (2 samples, 0.05%)</title><rect x="737.5" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.5" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.05%)</title><rect x="737.5" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.5" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (2 samples, 0.05%)</title><rect x="737.5" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.5" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.05%)</title><rect x="737.5" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.5" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (2 samples, 0.05%)</title><rect x="737.5" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.5" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.05%)</title><rect x="737.5" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.5" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.05%)</title><rect x="737.5" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.5" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="737.5" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.02%)</title><rect x="737.5" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.5" y="718.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.read (1 samples, 0.02%)</title><rect x="737.5" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.5" y="702.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/ZipInflaterInputStream.read (1 samples, 0.02%)</title><rect x="737.5" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="740.5" y="686.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.02%)</title><rect x="737.5" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.5" y="670.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.02%)</title><rect x="737.5" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.5" y="654.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.02%)</title><rect x="737.5" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.5" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.02%)</title><rect x="737.5" y="611.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="740.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="737.8" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="737.8" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.8" y="718.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="737.8" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.8" y="702.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="737.8" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.8" y="686.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="737.8" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.8" y="670.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="737.8" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.8" y="654.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="737.8" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.8" y="638.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/nested/Handler.openConnection (1 samples, 0.02%)</title><rect x="737.8" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.8" y="622.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/nested/NestedUrlConnection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="737.8" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.8" y="606.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/nested/NestedUrlConnection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="737.8" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.8" y="590.0"></text>
</g>
<g>
<title>java/net/URLConnection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="737.8" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.8" y="574.0"></text>
</g>
<g>
<title>java/net/URLConnection.getDefaultUseCaches (1 samples, 0.02%)</title><rect x="737.8" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="737.8" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="737.8" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.8" y="526.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/nested/NestedLocation.parse (1 samples, 0.02%)</title><rect x="737.8" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.8" y="510.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/StandardJdbcValuesMapping.resolveAssemblers (2 samples, 0.05%)</title><rect x="738.1" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.1" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/graph/entity/internal/EntityResultImpl.createResultAssembler (2 samples, 0.05%)</title><rect x="738.1" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.1" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/ResultsHelper$1.resolveInitializer (2 samples, 0.05%)</title><rect x="738.1" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.1" y="846.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/ResultsLogger.&lt;clinit&gt; (1 samples, 0.02%)</title><rect x="738.1" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.1" y="830.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.getMessageLogger (1 samples, 0.02%)</title><rect x="738.1" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.1" y="814.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.getMessageLogger (1 samples, 0.02%)</title><rect x="738.1" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.1" y="798.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.doGetMessageLogger (1 samples, 0.02%)</title><rect x="738.1" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.02%)</title><rect x="738.1" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.02%)</title><rect x="738.1" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.1" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.1" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.1" y="734.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.1" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.1" y="718.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.1" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.1" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.1" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.1" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="738.1" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.1" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="738.1" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.1" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="738.1" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.1" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="738.1" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.1" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="738.1" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="738.1" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="738.1" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.1" y="574.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.encodePath (1 samples, 0.02%)</title><rect x="738.1" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.1" y="558.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.firstEncodeIndex (1 samples, 0.02%)</title><rect x="738.1" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="738.1" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="738.1" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.1" y="510.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/InitializersList$Builder.addInitializer (1 samples, 0.02%)</title><rect x="738.4" y="819.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.4" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/InitializersList$Builder.initializeFirst (1 samples, 0.02%)</title><rect x="738.4" y="803.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.4" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.4" y="787.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.4" y="798.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.4" y="771.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.4" y="782.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.4" y="755.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.4" y="739.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.4" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="738.4" y="723.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.4" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="738.4" y="707.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.4" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="738.4" y="691.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.4" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="738.4" y="675.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.4" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="738.4" y="659.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.4" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="738.4" y="643.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.4" y="654.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="738.4" y="627.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="738.4" y="611.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="738.4" y="595.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.4" y="579.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.4" y="590.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.4" y="563.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.4" y="574.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.4" y="547.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.4" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.4" y="531.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.4" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="738.4" y="515.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.4" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="738.4" y="499.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.4" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="738.4" y="483.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.4" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="738.4" y="467.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.4" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="738.4" y="451.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.4" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="738.4" y="435.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.4" y="446.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="738.4" y="419.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.4" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="738.4" y="403.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="741.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="738.4" y="387.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.4" y="398.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="738.4" y="371.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="741.4" y="382.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="738.4" y="355.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="741.4" y="366.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="738.4" y="339.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="741.4" y="350.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="738.4" y="323.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="741.4" y="334.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="738.4" y="307.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="741.4" y="318.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="738.4" y="291.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="741.4" y="302.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="738.4" y="275.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="741.4" y="286.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="738.4" y="259.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="741.4" y="270.0"></text>
</g>
<g>
<title>java_lang_Class::initialize_mirror_fields(Klass*, Handle, Handle, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="738.4" y="243.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="741.4" y="254.0"></text>
</g>
<g>
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.02%)</title><rect x="738.4" y="227.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="741.4" y="238.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.&lt;init&gt; (1 samples, 0.02%)</title><rect x="738.6" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.6" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="738.6" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="741.6" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="738.6" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="741.6" y="878.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="738.6" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="741.6" y="862.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="738.6" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="741.6" y="846.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="738.6" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="741.6" y="830.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(Klass*, Symbol*, Symbol*, Klass::PrivateLookupMode) (1 samples, 0.02%)</title><rect x="738.6" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="741.6" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="738.6" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="741.6" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="738.6" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="741.6" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/spi/ListResultsConsumer.consume (4 samples, 0.10%)</title><rect x="738.9" y="899.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.9" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/spi/ListResultsConsumer.consume (4 samples, 0.10%)</title><rect x="738.9" y="883.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.9" y="894.0"></text>
</g>
<g>
<title>org/hibernate/engine/internal/StatefulPersistenceContext.getLoadContexts (1 samples, 0.02%)</title><rect x="738.9" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.9" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/spi/LoadContexts.&lt;clinit&gt; (1 samples, 0.02%)</title><rect x="738.9" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.9" y="862.0"></text>
</g>
<g>
<title>org/hibernate/internal/CoreLogging.messageLogger (1 samples, 0.02%)</title><rect x="738.9" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.9" y="846.0"></text>
</g>
<g>
<title>org/hibernate/internal/CoreLogging.messageLogger (1 samples, 0.02%)</title><rect x="738.9" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.9" y="830.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.getMessageLogger (1 samples, 0.02%)</title><rect x="738.9" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.9" y="814.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.getMessageLogger (1 samples, 0.02%)</title><rect x="738.9" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.9" y="798.0"></text>
</g>
<g>
<title>org/jboss/logging/Logger.doGetMessageLogger (1 samples, 0.02%)</title><rect x="738.9" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.02%)</title><rect x="738.9" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.02%)</title><rect x="738.9" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.9" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.9" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.9" y="734.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.9" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.9" y="718.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.9" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="738.9" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.9" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="738.9" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.9" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="738.9" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.9" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="738.9" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.9" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="738.9" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.9" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="738.9" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="741.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="738.9" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="738.9" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.9" y="574.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="738.9" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.9" y="558.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="738.9" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="741.9" y="542.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="738.9" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.9" y="526.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.hasEntry (1 samples, 0.02%)</title><rect x="738.9" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.9" y="510.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.hasEntry (1 samples, 0.02%)</title><rect x="738.9" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.9" y="494.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.getVersionedContentEntry (1 samples, 0.02%)</title><rect x="738.9" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.9" y="478.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/ManifestInfo.isMultiRelease (1 samples, 0.02%)</title><rect x="738.9" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.9" y="462.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/internal/RowProcessingStateStandardImpl.next (3 samples, 0.07%)</title><rect x="739.2" y="867.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.2" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/AbstractJdbcValues.next (3 samples, 0.07%)</title><rect x="739.2" y="851.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.2" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesResultSetImpl.processNext (3 samples, 0.07%)</title><rect x="739.2" y="835.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.2" y="846.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/JdbcValuesResultSetImpl.advanceNext (3 samples, 0.07%)</title><rect x="739.2" y="819.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.2" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.getResultSet (3 samples, 0.07%)</title><rect x="739.2" y="803.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.2" y="814.0"></text>
</g>
<g>
<title>org/hibernate/sql/results/jdbc/internal/DeferredResultSetAccess.executeQuery (3 samples, 0.07%)</title><rect x="739.2" y="787.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.2" y="798.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyPreparedStatement.executeQuery (1 samples, 0.02%)</title><rect x="739.2" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.2" y="782.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyPreparedStatement.executeQuery (1 samples, 0.02%)</title><rect x="739.2" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="742.2" y="766.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.executeQuery (1 samples, 0.02%)</title><rect x="739.2" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.2" y="750.0"></text>
</g>
<g>
<title>org/h2/command/Command.executeQuery (1 samples, 0.02%)</title><rect x="739.2" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.2" y="734.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.startStatementWithinTransaction (1 samples, 0.02%)</title><rect x="739.2" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.2" y="718.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/Transaction.markStatementStart (1 samples, 0.02%)</title><rect x="739.2" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.2" y="702.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcSelectExecutor$$Lambda$1869.0x00007f9a5ca22ce8.apply (2 samples, 0.05%)</title><rect x="739.5" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.5" y="782.0"></text>
</g>
<g>
<title>org/hibernate/sql/exec/spi/JdbcSelectExecutor.lambda$list$0 (2 samples, 0.05%)</title><rect x="739.5" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.5" y="766.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl.prepareQueryStatement (2 samples, 0.05%)</title><rect x="739.5" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.5" y="750.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/JdbcCoordinatorImpl.registerLastQuery (1 samples, 0.02%)</title><rect x="739.5" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.5" y="734.0"></text>
</g>
<g>
<title>InterpreterRuntime::quicken_io_cc(JavaThread*) (1 samples, 0.02%)</title><rect x="739.5" y="707.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="742.5" y="718.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="739.5" y="691.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="742.5" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="739.5" y="675.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="742.5" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="739.5" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="742.5" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="739.5" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="742.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$StatementPreparationTemplate.prepareStatement (1 samples, 0.02%)</title><rect x="739.8" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.8" y="734.0"></text>
</g>
<g>
<title>org/hibernate/engine/jdbc/internal/StatementPreparerImpl$5.doPrepare (1 samples, 0.02%)</title><rect x="739.8" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.8" y="718.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/HikariProxyConnection.prepareStatement (1 samples, 0.02%)</title><rect x="739.8" y="691.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.8" y="702.0"></text>
</g>
<g>
<title>com/zaxxer/hikari/pool/ProxyConnection.prepareStatement (1 samples, 0.02%)</title><rect x="739.8" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.8" y="686.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.prepareStatement (1 samples, 0.02%)</title><rect x="739.8" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.8" y="670.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcPreparedStatement.&lt;init&gt; (1 samples, 0.02%)</title><rect x="739.8" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.8" y="654.0"></text>
</g>
<g>
<title>org/h2/jdbc/JdbcConnection.prepareCommand (1 samples, 0.02%)</title><rect x="739.8" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.8" y="638.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.prepareCommand (1 samples, 0.02%)</title><rect x="739.8" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.8" y="622.0"></text>
</g>
<g>
<title>org/h2/engine/SessionLocal.prepareLocal (1 samples, 0.02%)</title><rect x="739.8" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.8" y="606.0"></text>
</g>
<g>
<title>org/h2/command/Parser.prepareCommand (1 samples, 0.02%)</title><rect x="739.8" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.8" y="590.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parse (1 samples, 0.02%)</title><rect x="739.8" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.8" y="574.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parse (1 samples, 0.02%)</title><rect x="739.8" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.8" y="558.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parsePrepared (1 samples, 0.02%)</title><rect x="739.8" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.8" y="542.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parseQuery (1 samples, 0.02%)</title><rect x="739.8" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.8" y="526.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parseQueryExpression (1 samples, 0.02%)</title><rect x="739.8" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.8" y="510.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parseQueryExpressionBodyAndEndOfQuery (1 samples, 0.02%)</title><rect x="739.8" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.8" y="494.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parseQueryExpressionBody (1 samples, 0.02%)</title><rect x="739.8" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.8" y="478.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parseQueryTerm (1 samples, 0.02%)</title><rect x="739.8" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.8" y="462.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parseQueryPrimary (1 samples, 0.02%)</title><rect x="739.8" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.8" y="446.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parseSelect (1 samples, 0.02%)</title><rect x="739.8" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.8" y="430.0"></text>
</g>
<g>
<title>org/h2/command/Parser.parseSelectExpressions (1 samples, 0.02%)</title><rect x="739.8" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.8" y="414.0"></text>
</g>
<g>
<title>org/h2/command/Parser.readExpression (1 samples, 0.02%)</title><rect x="739.8" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.8" y="398.0"></text>
</g>
<g>
<title>org/h2/command/Parser.readCondition (1 samples, 0.02%)</title><rect x="739.8" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.8" y="382.0"></text>
</g>
<g>
<title>org/h2/command/Parser.readConcat (1 samples, 0.02%)</title><rect x="739.8" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.8" y="366.0"></text>
</g>
<g>
<title>org/h2/command/Parser.readSum (1 samples, 0.02%)</title><rect x="739.8" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.8" y="350.0"></text>
</g>
<g>
<title>org/h2/command/Parser.readFactor (1 samples, 0.02%)</title><rect x="739.8" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.8" y="334.0"></text>
</g>
<g>
<title>org/h2/command/Parser.readTerm (1 samples, 0.02%)</title><rect x="739.8" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.8" y="318.0"></text>
</g>
<g>
<title>org/h2/command/Parser.readTermWithIdentifier (1 samples, 0.02%)</title><rect x="739.8" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="742.8" y="302.0"></text>
</g>
<g>
<title>org/h2/command/Parser.readTermObjectDot (1 samples, 0.02%)</title><rect x="739.8" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.8" y="286.0"></text>
</g>
<g>
<title>org/h2/expression/ExpressionColumn.&lt;init&gt; (1 samples, 0.02%)</title><rect x="739.8" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.8" y="270.0"></text>
</g>
<g>
<title>org/h2/expression/ExpressionColumn.&lt;init&gt; (1 samples, 0.02%)</title><rect x="739.8" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.8" y="254.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.buildCacheableSqmInterpretation (12 samples, 0.29%)</title><rect x="740.1" y="995.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.1" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.translate (8 samples, 0.19%)</title><rect x="740.1" y="979.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.1" y="990.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.accept (8 samples, 0.19%)</title><rect x="740.1" y="963.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.1" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitSelectStatement (8 samples, 0.19%)</title><rect x="740.1" y="947.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.1" y="958.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitSelectStatement (8 samples, 0.19%)</title><rect x="740.1" y="931.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.1" y="942.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitQueryPart (8 samples, 0.19%)</title><rect x="740.1" y="915.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.1" y="926.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/spi/BaseSemanticQueryWalker.visitQueryPart (8 samples, 0.19%)</title><rect x="740.1" y="899.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.1" y="910.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmQuerySpec.accept (8 samples, 0.19%)</title><rect x="740.1" y="883.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.1" y="894.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitQuerySpec (8 samples, 0.19%)</title><rect x="740.1" y="867.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.1" y="878.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitQuerySpec (8 samples, 0.19%)</title><rect x="740.1" y="851.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.1" y="862.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitFromClause (2 samples, 0.05%)</title><rect x="740.1" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.1" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (2 samples, 0.05%)</title><rect x="740.1" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (2 samples, 0.05%)</title><rect x="740.1" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (2 samples, 0.05%)</title><rect x="740.1" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (2 samples, 0.05%)</title><rect x="740.1" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (2 samples, 0.05%)</title><rect x="740.1" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x00007f9a5c0a4400.invokeStatic (2 samples, 0.05%)</title><rect x="740.1" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="743.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (2 samples, 0.05%)</title><rect x="740.1" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (2 samples, 0.05%)</title><rect x="740.1" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (2 samples, 0.05%)</title><rect x="740.1" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (2 samples, 0.05%)</title><rect x="740.1" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (1 samples, 0.02%)</title><rect x="740.1" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassDefiner.defineClassAsLookup (1 samples, 0.02%)</title><rect x="740.1" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassDefiner.defineClass (1 samples, 0.02%)</title><rect x="740.1" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.1" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.defineClass (1 samples, 0.02%)</title><rect x="740.1" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.1" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass0 (1 samples, 0.02%)</title><rect x="740.1" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.1" y="606.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass0 (1 samples, 0.02%)</title><rect x="740.1" y="579.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="743.1" y="590.0"></text>
</g>
<g>
<title>JVM_LookupDefineClass (1 samples, 0.02%)</title><rect x="740.1" y="563.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="743.1" y="574.0"></text>
</g>
<g>
<title>jvm_lookup_define_class(_jclass*, char const*, signed char const*, int, _jobject*, unsigned char, int, _jobject*, JavaThread*) (1 samples, 0.02%)</title><rect x="740.1" y="547.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="743.1" y="558.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_hidden_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="740.1" y="531.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="743.1" y="542.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="740.1" y="515.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="743.1" y="526.0"></text>
</g>
<g>
<title>klassItable::initialize_itable_and_check_constraints(JavaThread*) (1 samples, 0.02%)</title><rect x="740.1" y="499.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="743.1" y="510.0"></text>
</g>
<g>
<title>klassItable::check_constraints(GrowableArray&lt;Method*&gt;*, JavaThread*) (1 samples, 0.02%)</title><rect x="740.1" y="483.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="743.1" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Klass*, Handle, Handle, bool) (1 samples, 0.02%)</title><rect x="740.1" y="467.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="743.1" y="478.0"></text>
</g>
<g>
<title>Dictionary::find_class(unsigned int, Symbol*) (1 samples, 0.02%)</title><rect x="740.1" y="451.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="743.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.toByteArray (1 samples, 0.02%)</title><rect x="740.4" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeMethodInfoSize (1 samples, 0.02%)</title><rect x="740.4" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (1 samples, 0.02%)</title><rect x="740.4" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.hash (1 samples, 0.02%)</title><rect x="740.4" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="740.4" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="740.4" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.4" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="740.4" y="563.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="743.4" y="574.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitSelectClause (2 samples, 0.05%)</title><rect x="740.7" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.7" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitSelection (2 samples, 0.05%)</title><rect x="740.7" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.7" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.02%)</title><rect x="740.7" y="803.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.7" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.02%)</title><rect x="740.7" y="787.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.02%)</title><rect x="740.7" y="771.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.02%)</title><rect x="740.7" y="755.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.7" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="740.7" y="739.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="743.7" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="740.7" y="723.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="743.7" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="740.7" y="707.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="743.7" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="740.7" y="691.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="743.7" y="702.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="740.7" y="675.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="743.7" y="686.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/from/SqmRoot.accept (1 samples, 0.02%)</title><rect x="740.9" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.9" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitRootPath (1 samples, 0.02%)</title><rect x="740.9" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.9" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitRootPath (1 samples, 0.02%)</title><rect x="740.9" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.9" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitTableGroup (1 samples, 0.02%)</title><rect x="740.9" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="740.9" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.9" y="750.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="740.9" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.9" y="734.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="740.9" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="740.9" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.9" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="740.9" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.9" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="740.9" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.9" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="740.9" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.9" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="740.9" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.9" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="740.9" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="743.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="740.9" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="740.9" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.9" y="590.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.getJarFile (1 samples, 0.02%)</title><rect x="740.9" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.9" y="574.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.connect (1 samples, 0.02%)</title><rect x="740.9" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.9" y="558.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.assertCachedJarFileHasEntry (1 samples, 0.02%)</title><rect x="740.9" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.9" y="542.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.getJarEntry (1 samples, 0.02%)</title><rect x="740.9" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.9" y="526.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.getNestedJarEntry (1 samples, 0.02%)</title><rect x="740.9" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.9" y="510.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile$NestedJarEntry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="740.9" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.9" y="494.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/ZipContent$Entry.getName (1 samples, 0.02%)</title><rect x="740.9" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="740.9" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.9" y="462.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitWhereClause (4 samples, 0.10%)</title><rect x="741.2" y="835.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.2" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmJunctionPredicate.accept (4 samples, 0.10%)</title><rect x="741.2" y="819.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.2" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitJunctionPredicate (4 samples, 0.10%)</title><rect x="741.2" y="803.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.2" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitJunctionPredicate (4 samples, 0.10%)</title><rect x="741.2" y="787.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.2" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/predicate/SqmComparisonPredicate.accept (4 samples, 0.10%)</title><rect x="741.2" y="771.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitComparisonPredicate (4 samples, 0.10%)</title><rect x="741.2" y="755.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.2" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitComparisonPredicate (4 samples, 0.10%)</title><rect x="741.2" y="739.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.2" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.handleTypeComparison (1 samples, 0.02%)</title><rect x="741.2" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.2" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="741.2" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.2" y="718.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="741.2" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.2" y="702.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="741.2" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="741.2" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.2" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="741.2" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.2" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="741.2" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.2" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="741.2" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.2" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="741.2" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.2" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="741.2" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="741.2" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="741.2" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.2" y="558.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="741.2" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.2" y="542.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="741.2" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.2" y="526.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="741.2" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.2" y="510.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="741.2" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.2" y="494.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="741.2" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.2" y="478.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="741.2" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="744.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="741.2" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="741.2" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.2" y="430.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.accept (1 samples, 0.02%)</title><rect x="741.5" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.5" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitBasicValuedPath (1 samples, 0.02%)</title><rect x="741.5" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.5" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitBasicValuedPath (1 samples, 0.02%)</title><rect x="741.5" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.5" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.prepareReusablePath (1 samples, 0.02%)</title><rect x="741.5" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.5" y="686.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="741.5" y="659.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="744.5" y="670.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="741.5" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="744.5" y="654.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/expression/JpaCriteriaParameter.accept (2 samples, 0.05%)</title><rect x="741.8" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.8" y="734.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.visitJpaCriteriaParameter (2 samples, 0.05%)</title><rect x="741.8" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.8" y="718.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeSqmParameter (2 samples, 0.05%)</title><rect x="741.8" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="744.8" y="702.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeSingleSqmParameter (2 samples, 0.05%)</title><rect x="741.8" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.8" y="686.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeSqmParameter (2 samples, 0.05%)</title><rect x="741.8" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.8" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.resolveSqmParameter (2 samples, 0.05%)</title><rect x="741.8" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="744.8" y="654.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/mapping/BasicValuedModelPart.forEachSelectable (2 samples, 0.05%)</title><rect x="741.8" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.8" y="638.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter$$Lambda$1830.0x00007f9a5ca1c8c0.accept (2 samples, 0.05%)</title><rect x="741.8" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.8" y="622.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.lambda$resolveSqmParameter$83 (2 samples, 0.05%)</title><rect x="741.8" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.8" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="742.1" y="579.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="745.1" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="742.1" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="745.1" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="742.1" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="745.1" y="558.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.02%)</title><rect x="742.1" y="531.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="745.1" y="542.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="742.1" y="515.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="745.1" y="526.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/StandardSqmTranslatorFactory.createSelectTranslator (3 samples, 0.07%)</title><rect x="742.4" y="979.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.4" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.05%)</title><rect x="742.4" y="963.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.4" y="974.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (2 samples, 0.05%)</title><rect x="742.4" y="947.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.4" y="958.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (2 samples, 0.05%)</title><rect x="742.4" y="931.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.4" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.05%)</title><rect x="742.4" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.4" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (2 samples, 0.05%)</title><rect x="742.4" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.4" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.05%)</title><rect x="742.4" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.4" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (2 samples, 0.05%)</title><rect x="742.4" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.4" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.05%)</title><rect x="742.4" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.05%)</title><rect x="742.4" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (2 samples, 0.05%)</title><rect x="742.4" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.4" y="830.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.05%)</title><rect x="742.4" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.4" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.05%)</title><rect x="742.4" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.05%)</title><rect x="742.4" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.4" y="782.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="742.4" y="755.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="745.4" y="766.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="742.4" y="739.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="745.4" y="750.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="742.4" y="723.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="745.4" y="734.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="742.4" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="745.4" y="718.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="742.4" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="745.4" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="742.4" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="745.4" y="686.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="742.4" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="745.4" y="670.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, JavaThread*) (1 samples, 0.02%)</title><rect x="742.4" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="745.4" y="654.0"></text>
</g>
<g>
<title>MethodFamily::generate_method_message(Symbol*, Method*) const (1 samples, 0.02%)</title><rect x="742.4" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="745.4" y="638.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.02%)</title><rect x="742.4" y="611.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="745.4" y="622.0"></text>
</g>
<g>
<title>SymbolTable::lookup_shared(char const*, int, unsigned int) (1 samples, 0.02%)</title><rect x="742.4" y="595.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="745.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="742.7" y="755.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.7" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="742.7" y="739.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.7" y="750.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="742.7" y="723.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="742.7" y="707.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.7" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="742.7" y="691.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.7" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="742.7" y="675.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.7" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="742.7" y="659.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.7" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="742.7" y="643.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.7" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="742.7" y="627.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.7" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="742.7" y="611.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.7" y="622.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="742.7" y="595.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="742.7" y="579.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.7" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="742.7" y="563.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.7" y="574.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="742.7" y="547.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="745.7" y="558.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="742.7" y="531.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="745.7" y="542.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="742.7" y="515.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="745.7" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="742.7" y="499.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="745.7" y="510.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="742.7" y="483.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="745.7" y="494.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="742.7" y="467.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="745.7" y="478.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="742.7" y="451.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="745.7" y="462.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="742.7" y="435.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="745.7" y="446.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="742.7" y="419.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="745.7" y="430.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (1 samples, 0.02%)</title><rect x="742.7" y="403.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="745.7" y="414.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/StandardSqmTranslator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="742.9" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.9" y="974.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="742.9" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.9" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.02%)</title><rect x="742.9" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.02%)</title><rect x="742.9" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.02%)</title><rect x="742.9" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.02%)</title><rect x="742.9" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.9" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.02%)</title><rect x="742.9" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x00007f9a5c0a4400.invokeStatic (1 samples, 0.02%)</title><rect x="742.9" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.02%)</title><rect x="742.9" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.02%)</title><rect x="742.9" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.02%)</title><rect x="742.9" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (1 samples, 0.02%)</title><rect x="742.9" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (1 samples, 0.02%)</title><rect x="742.9" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassDefiner.defineClassAsLookup (1 samples, 0.02%)</title><rect x="742.9" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassDefiner.defineClass (1 samples, 0.02%)</title><rect x="742.9" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.9" y="750.0"></text>
</g>
<g>
<title>java/lang/System$2.defineClass (1 samples, 0.02%)</title><rect x="742.9" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass0 (1 samples, 0.02%)</title><rect x="742.9" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="742.9" y="691.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="745.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="742.9" y="675.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="745.9" y="686.0"></text>
</g>
<g>
<title>__vsnprintf_internal (1 samples, 0.02%)</title><rect x="742.9" y="659.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="745.9" y="670.0"></text>
</g>
<g>
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="742.9" y="643.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="745.9" y="654.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.translate (1 samples, 0.02%)</title><rect x="743.2" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.2" y="990.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.translateSelect (1 samples, 0.02%)</title><rect x="743.2" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.2" y="974.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitSelectStatement (1 samples, 0.02%)</title><rect x="743.2" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.2" y="958.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/select/QuerySpec.accept (1 samples, 0.02%)</title><rect x="743.2" y="931.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.2" y="942.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitQuerySpec (1 samples, 0.02%)</title><rect x="743.2" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.2" y="926.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitWhereClause (1 samples, 0.02%)</title><rect x="743.2" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.2" y="910.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/predicate/Junction.accept (1 samples, 0.02%)</title><rect x="743.2" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.2" y="894.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitJunction (1 samples, 0.02%)</title><rect x="743.2" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.2" y="878.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitJunctionPredicate (1 samples, 0.02%)</title><rect x="743.2" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.2" y="862.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/predicate/ComparisonPredicate.accept (1 samples, 0.02%)</title><rect x="743.2" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.2" y="846.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/spi/AbstractSqlAstTranslator.visitRelationalPredicate (1 samples, 0.02%)</title><rect x="743.2" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.2" y="830.0"></text>
</g>
<g>
<title>org/hibernate/sql/ast/tree/expression/SqlTupleContainer.getSqlTuple (1 samples, 0.02%)</title><rect x="743.2" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.2" y="814.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqmParameterInterpretation.getSqlTuple (1 samples, 0.02%)</title><rect x="743.2" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.2" y="798.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqmParameterInterpretation.getResolvedExpression (1 samples, 0.02%)</title><rect x="743.2" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.2" y="782.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/internal/SqmParameterInterpretation.determineResolvedExpression (1 samples, 0.02%)</title><rect x="743.2" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="743.2" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.2" y="750.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="743.2" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.2" y="734.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="743.2" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="743.2" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.2" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="743.2" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="746.2" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="743.2" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.2" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="743.2" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.2" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="743.2" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.2" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="743.2" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="743.2" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="743.2" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.2" y="590.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="743.2" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.2" y="574.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="743.2" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.2" y="558.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="743.2" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="743.2" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.2" y="526.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.resolveSelectQueryPlan (3 samples, 0.07%)</title><rect x="743.5" y="1027.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="743.5" y="1011.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="746.5" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="743.5" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="746.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="743.5" y="979.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="746.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="743.5" y="963.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="746.5" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="743.5" y="947.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="746.5" y="958.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="743.5" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="746.5" y="942.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="743.5" y="915.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="746.5" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="743.5" y="899.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="746.5" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="743.5" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.5" y="894.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.buildSelectQueryPlan (2 samples, 0.05%)</title><rect x="743.8" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.8" y="1022.0"></text>
</g>
<g>
<title>org/hibernate/query/hql/internal/QuerySplitter.split (1 samples, 0.02%)</title><rect x="743.8" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.8" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/hql/internal/QuerySplitter.findUnmappedPolymorphicReference (1 samples, 0.02%)</title><rect x="743.8" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.02%)</title><rect x="743.8" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="743.8" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.8" y="958.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="743.8" y="931.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.8" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.02%)</title><rect x="743.8" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.02%)</title><rect x="743.8" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="743.8" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.8" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.02%)</title><rect x="743.8" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.tryAdvance (1 samples, 0.02%)</title><rect x="743.8" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.02%)</title><rect x="743.8" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.8" y="846.0"></text>
</g>
<g>
<title>org/hibernate/query/hql/internal/QuerySplitter$$Lambda$1696.0x00007f9a5c9f22d8.test (1 samples, 0.02%)</title><rect x="743.8" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.8" y="830.0"></text>
</g>
<g>
<title>org/hibernate/query/hql/internal/QuerySplitter.lambda$findUnmappedPolymorphicReference$0 (1 samples, 0.02%)</title><rect x="743.8" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.8" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::quicken_io_cc(JavaThread*) (1 samples, 0.02%)</title><rect x="743.8" y="787.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="746.8" y="798.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="743.8" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="746.8" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="743.8" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="746.8" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="743.8" y="739.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="746.8" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(unsigned int, Symbol*, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="743.8" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="746.8" y="734.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class_impl(Symbol*, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="743.8" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="746.8" y="718.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, JavaThread*) (1 samples, 0.02%)</title><rect x="743.8" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="746.8" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="743.8" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="746.8" y="686.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jfr_sampler() (1 samples, 0.02%)</title><rect x="743.8" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="746.8" y="670.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.buildConcreteSelectQueryPlan (1 samples, 0.02%)</title><rect x="744.1" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.1" y="1006.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/ConcreteSqmSelectQueryPlan.&lt;init&gt; (1 samples, 0.02%)</title><rect x="744.1" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.1" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.1" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.1" y="974.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.1" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.1" y="958.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.1" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.1" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.1" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.1" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="744.1" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.1" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="744.1" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.1" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="744.1" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.1" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="744.1" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.1" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="744.1" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="744.1" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="744.1" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.1" y="814.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="744.1" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.1" y="798.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="744.1" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.1" y="782.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="744.1" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.1" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.hasEntry (1 samples, 0.02%)</title><rect x="744.1" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.1" y="750.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.hasEntry (1 samples, 0.02%)</title><rect x="744.1" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.1" y="734.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/ZipContent.hasEntry (1 samples, 0.02%)</title><rect x="744.1" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.1" y="718.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/zip/ZipContent.getFirstLookupIndex (1 samples, 0.02%)</title><rect x="744.1" y="691.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.binarySearch (1 samples, 0.02%)</title><rect x="744.1" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.binarySearch0 (1 samples, 0.02%)</title><rect x="744.1" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.1" y="670.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.createQuery (8 samples, 0.19%)</title><rect x="744.4" y="1075.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.4" y="1086.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery.doCreateQuery (8 samples, 0.19%)</title><rect x="744.4" y="1059.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.4" y="1070.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery$QueryPreparer.createQuery (8 samples, 0.19%)</title><rect x="744.4" y="1043.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.4" y="1054.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery$QueryPreparer.createQuery (7 samples, 0.17%)</title><rect x="744.4" y="1027.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.4" y="1038.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.createQuery (7 samples, 0.17%)</title><rect x="744.4" y="1011.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.4" y="1022.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke (7 samples, 0.17%)</title><rect x="744.4" y="995.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="744.4" y="979.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="744.4" y="963.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="744.4" y="947.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="744.4" y="931.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.4" y="942.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy111.createQuery (7 samples, 0.17%)</title><rect x="744.4" y="915.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.4" y="926.0"></text>
</g>
<g>
<title>org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke (7 samples, 0.17%)</title><rect x="744.4" y="899.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.4" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.17%)</title><rect x="744.4" y="883.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="744.4" y="867.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.17%)</title><rect x="744.4" y="851.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.17%)</title><rect x="744.4" y="835.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.4" y="846.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.createQuery (7 samples, 0.17%)</title><rect x="744.4" y="819.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.4" y="830.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.createQuery (7 samples, 0.17%)</title><rect x="744.4" y="803.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.4" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.4" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.4" y="798.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.4" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.4" y="782.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.4" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.4" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.4" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="744.4" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.4" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="744.4" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.4" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="744.4" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.4" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="744.4" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.4" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="744.4" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.4" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="744.4" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.4" y="654.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="744.4" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="744.4" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="744.4" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.4" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.4" y="590.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.4" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.4" y="574.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.4" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.4" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="744.4" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.4" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="744.4" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.4" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="744.4" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.4" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="744.4" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.4" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="744.4" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.4" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="744.4" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.4" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="744.4" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.4" y="446.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="744.4" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.4" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="744.4" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="744.4" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.4" y="398.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="744.4" y="371.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="747.4" y="382.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="744.4" y="355.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="747.4" y="366.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="744.4" y="339.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="747.4" y="350.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="744.4" y="323.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="747.4" y="334.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="744.4" y="307.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="747.4" y="318.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, JavaThread*) (1 samples, 0.02%)</title><rect x="744.4" y="291.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="747.4" y="302.0"></text>
</g>
<g>
<title>Method::sort_methods(Array&lt;Method*&gt;*, bool, int (*)(Method*, Method*)) (1 samples, 0.02%)</title><rect x="744.4" y="275.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="747.4" y="286.0"></text>
</g>
<g>
<title>method_comparator(Method*, Method*) (1 samples, 0.02%)</title><rect x="744.4" y="259.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="747.4" y="270.0"></text>
</g>
<g>
<title>org/hibernate/internal/AbstractSharedSessionContract.createCriteriaQuery (6 samples, 0.15%)</title><rect x="744.7" y="787.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.7" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (2 samples, 0.05%)</title><rect x="744.7" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="747.7" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (2 samples, 0.05%)</title><rect x="744.7" y="755.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="747.7" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (2 samples, 0.05%)</title><rect x="744.7" y="739.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="747.7" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="744.7" y="723.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="747.7" y="734.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="744.7" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="747.7" y="718.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(JavaThread*) (1 samples, 0.02%)</title><rect x="744.7" y="691.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="747.7" y="702.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="744.7" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="747.7" y="686.0"></text>
</g>
<g>
<title>StackMapFrame::set_locals_from_arg(methodHandle const&amp;, VerificationType) (1 samples, 0.02%)</title><rect x="744.7" y="659.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="747.7" y="670.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.02%)</title><rect x="744.7" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="747.7" y="654.0"></text>
</g>
<g>
<title>klassVtable::initialize_vtable_and_check_constraints(JavaThread*) (1 samples, 0.02%)</title><rect x="745.0" y="723.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="748.0" y="734.0"></text>
</g>
<g>
<title>klassVtable::initialize_vtable(GrowableArray&lt;InstanceKlass*&gt;*) (1 samples, 0.02%)</title><rect x="745.0" y="707.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="748.0" y="718.0"></text>
</g>
<g>
<title>klassVtable::update_inherited_vtable(Thread*, methodHandle const&amp;, int, int, GrowableArray&lt;InstanceKlass*&gt;*) (1 samples, 0.02%)</title><rect x="745.0" y="691.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="748.0" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.2" y="782.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.2" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.2" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="745.2" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.2" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="745.2" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.2" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="745.2" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.2" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="745.2" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.2" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="745.2" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.2" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="745.2" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.2" y="638.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="745.2" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="745.2" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="745.2" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.2" y="574.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.2" y="558.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.2" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.2" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="745.2" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.2" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="745.2" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.2" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="745.2" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.2" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="745.2" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.2" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="745.2" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.2" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="745.2" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.2" y="430.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="745.2" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.2" y="414.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="745.2" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.2" y="398.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="745.2" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.2" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.2" y="366.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.2" y="350.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.2" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.2" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.2" y="318.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="745.2" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.2" y="302.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="745.2" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.2" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="745.2" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.2" y="270.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="745.2" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.2" y="254.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="745.2" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.2" y="238.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="745.2" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.2" y="222.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="745.2" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="745.2" y="179.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="745.2" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.2" y="174.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="745.2" y="147.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="748.2" y="158.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="745.2" y="131.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="748.2" y="142.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="745.2" y="115.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="748.2" y="126.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="745.2" y="99.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="748.2" y="110.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="745.2" y="83.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="748.2" y="94.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="745.2" y="67.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="748.2" y="78.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="745.2" y="51.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="748.2" y="62.0"></text>
</g>
<g>
<title>ClassFileParser::set_precomputed_flags(InstanceKlass*) (1 samples, 0.02%)</title><rect x="745.2" y="35.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="748.2" y="46.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/QuerySqmImpl.&lt;init&gt; (3 samples, 0.07%)</title><rect x="745.5" y="771.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.5" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.5" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.5" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.5" y="750.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.5" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.5" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="745.5" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.5" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="745.5" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.5" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="745.5" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.5" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="745.5" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.5" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="745.5" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.5" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="745.5" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.02%)</title><rect x="745.5" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.02%)</title><rect x="745.5" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.5" y="606.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.02%)</title><rect x="745.5" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.5" y="590.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Handler.openConnection (1 samples, 0.02%)</title><rect x="745.5" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.5" y="574.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.open (1 samples, 0.02%)</title><rect x="745.5" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.5" y="558.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlConnection.hasEntry (1 samples, 0.02%)</title><rect x="745.5" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.5" y="542.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/NestedJarFile.hasEntry (1 samples, 0.02%)</title><rect x="745.5" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.5" y="526.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/DomainParameterXref.from (2 samples, 0.05%)</title><rect x="745.8" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.8" y="766.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/select/SqmSelectStatement.resolveParameters (2 samples, 0.05%)</title><rect x="745.8" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.8" y="750.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/SqmUtil.resolveParameters (2 samples, 0.05%)</title><rect x="745.8" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.8" y="734.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="745.8" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="748.8" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="745.8" y="691.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="748.8" y="702.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="748.8" y="686.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="748.8" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="748.8" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="748.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="611.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="748.8" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="595.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="748.8" y="606.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="748.8" y="590.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="748.8" y="574.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="547.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="748.8" y="558.0"></text>
</g>
<g>
<title>ClassVerifier::verify_local_variable_table(unsigned int, char*, JavaThread*) (1 samples, 0.02%)</title><rect x="745.8" y="531.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="748.8" y="542.0"></text>
</g>
<g>
<title>ConstMethod::localvariable_table_start() const (1 samples, 0.02%)</title><rect x="745.8" y="515.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="748.8" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.1" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.1" y="718.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.1" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.1" y="702.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.1" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.1" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.1" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.1" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="746.1" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.1" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="746.1" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.1" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="746.1" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.1" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="746.1" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.1" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="746.1" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.1" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="746.1" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.1" y="574.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="746.1" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.1" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="746.1" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.1" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="746.1" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.1" y="526.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="746.1" y="499.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="749.1" y="510.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="746.1" y="483.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="749.1" y="494.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="746.1" y="467.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="749.1" y="478.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="746.1" y="451.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="749.1" y="462.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="746.1" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="749.1" y="446.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="746.1" y="419.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="749.1" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="746.1" y="403.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="749.1" y="414.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, JavaThread*) (1 samples, 0.02%)</title><rect x="746.1" y="387.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="749.1" y="398.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, JavaThread*) (1 samples, 0.02%)</title><rect x="746.1" y="371.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="749.1" y="382.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, JavaThread*) const (1 samples, 0.02%)</title><rect x="746.1" y="355.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="749.1" y="366.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, JavaThread*) const (1 samples, 0.02%)</title><rect x="746.1" y="339.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="749.1" y="350.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery$QueryPreparer.invokeBinding (1 samples, 0.02%)</title><rect x="746.4" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.4" y="1038.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/ParameterBinder.bindAndPrepare (1 samples, 0.02%)</title><rect x="746.4" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.4" y="1022.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/ParameterBinder.bind (1 samples, 0.02%)</title><rect x="746.4" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.4" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.4" y="990.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.4" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.4" y="974.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.4" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.4" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.4" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.4" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.02%)</title><rect x="746.4" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.4" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassNotFoundException.&lt;init&gt; (1 samples, 0.02%)</title><rect x="746.4" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.4" y="894.0"></text>
</g>
<g>
<title>java/lang/ReflectiveOperationException.&lt;init&gt; (1 samples, 0.02%)</title><rect x="746.4" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.4" y="878.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.02%)</title><rect x="746.4" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="746.4" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.02%)</title><rect x="746.4" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.4" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.02%)</title><rect x="746.4" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.4" y="814.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.02%)</title><rect x="746.4" y="787.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="749.4" y="798.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.02%)</title><rect x="746.4" y="771.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="749.4" y="782.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="746.4" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="749.4" y="766.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="746.4" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="749.4" y="750.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/PartTreeJpaQuery.getExecution (1 samples, 0.02%)</title><rect x="746.7" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.7" y="1134.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.getExecution (1 samples, 0.02%)</title><rect x="746.7" y="1107.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.7" y="1118.0"></text>
</g>
<g>
<title>org/springframework/data/util/Lazy.getNullable (1 samples, 0.02%)</title><rect x="746.7" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.7" y="1102.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery$$Lambda$1397.0x00007f9a5c9136d8.get (1 samples, 0.02%)</title><rect x="746.7" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.7" y="1086.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.lambda$1 (1 samples, 0.02%)</title><rect x="746.7" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.7" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="746.7" y="1043.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="749.7" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="746.7" y="1027.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="749.7" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="746.7" y="1011.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="749.7" y="1022.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="746.7" y="995.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="749.7" y="1006.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(JavaThread*) (1 samples, 0.02%)</title><rect x="746.7" y="979.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="749.7" y="990.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="746.7" y="963.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="749.7" y="974.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, JavaThread*) (1 samples, 0.02%)</title><rect x="746.7" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="749.7" y="958.0"></text>
</g>
<g>
<title>ClassVerifier::create_method_sig_entry(sig_as_verification_types*, int) (1 samples, 0.02%)</title><rect x="746.7" y="931.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="749.7" y="942.0"></text>
</g>
<g>
<title>ClassVerifier::translate_signature(Symbol*, sig_as_verification_types*) (1 samples, 0.02%)</title><rect x="746.7" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="749.7" y="926.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.02%)</title><rect x="746.7" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="749.7" y="910.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.02%)</title><rect x="746.7" y="883.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="749.7" y="894.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (1 samples, 0.02%)</title><rect x="746.7" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="749.7" y="878.0"></text>
</g>
<g>
<title>otus/moryakovdv/task9/service/WebService.processContent (1 samples, 0.02%)</title><rect x="747.0" y="1427.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.0" y="1438.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.putInt (1 samples, 0.02%)</title><rect x="747.0" y="1411.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.0" y="1422.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.putInt (1 samples, 0.02%)</title><rect x="747.0" y="1395.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.putIntUnaligned (1 samples, 0.02%)</title><rect x="747.0" y="1379.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.0" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/ScopedMemoryAccess.putIntUnalignedInternal (1 samples, 0.02%)</title><rect x="747.0" y="1363.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.02%)</title><rect x="747.2" y="1491.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.2" y="1502.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.02%)</title><rect x="747.2" y="1475.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="750.2" y="1486.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool, bool) (1 samples, 0.02%)</title><rect x="747.2" y="1459.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="750.2" y="1470.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="747.2" y="1443.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="750.2" y="1454.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="747.2" y="1427.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="750.2" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/method/support/InvocableHandlerMethod.getMethodArgumentValues (88 samples, 2.14%)</title><rect x="747.5" y="1523.0" width="25.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.5" y="1534.0">o..</text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotatedMethod.findProvidedArgument (1 samples, 0.02%)</title><rect x="748.1" y="1507.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.1" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.resolveArgument (84 samples, 2.04%)</title><rect x="748.4" y="1507.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.4" y="1518.0">o..</text>
</g>
<g>
<title>org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.resolveArgument (83 samples, 2.02%)</title><rect x="748.7" y="1491.0" width="23.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.7" y="1502.0">o..</text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="749.3" y="1475.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="752.3" y="1486.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="749.3" y="1459.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="752.3" y="1470.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="749.3" y="1443.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="752.3" y="1454.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="749.3" y="1427.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="752.3" y="1438.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="749.3" y="1411.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="752.3" y="1422.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="749.3" y="1395.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="752.3" y="1406.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="749.3" y="1379.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="752.3" y="1390.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="749.3" y="1363.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="752.3" y="1374.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="749.3" y="1347.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="752.3" y="1358.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Klass*, Handle, Handle, bool) (1 samples, 0.02%)</title><rect x="749.3" y="1331.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="752.3" y="1342.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="749.3" y="1315.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="752.3" y="1326.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.convertIfNecessary (42 samples, 1.02%)</title><rect x="749.5" y="1475.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.5" y="1486.0"></text>
</g>
<g>
<title>org/springframework/validation/DataBinder.convertIfNecessary (36 samples, 0.87%)</title><rect x="749.8" y="1459.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.8" y="1470.0"></text>
</g>
<g>
<title>org/springframework/beans/TypeConverterSupport.convertIfNecessary (35 samples, 0.85%)</title><rect x="749.8" y="1443.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.8" y="1454.0"></text>
</g>
<g>
<title>org/springframework/beans/TypeConverterSupport.convertIfNecessary (27 samples, 0.66%)</title><rect x="749.8" y="1427.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.8" y="1438.0"></text>
</g>
<g>
<title>org/springframework/beans/TypeConverterDelegate.convertIfNecessary (27 samples, 0.66%)</title><rect x="749.8" y="1411.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.8" y="1422.0"></text>
</g>
<g>
<title>org/springframework/beans/PropertyEditorRegistrySupport.findCustomEditor (1 samples, 0.02%)</title><rect x="749.8" y="1395.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.8" y="1406.0"></text>
</g>
<g>
<title>org/springframework/beans/PropertyEditorRegistrySupport.getCustomEditor (1 samples, 0.02%)</title><rect x="749.8" y="1379.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.8" y="1390.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.forObject (3 samples, 0.07%)</title><rect x="750.1" y="1395.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.1" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService.canConvert (17 samples, 0.41%)</title><rect x="751.0" y="1395.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.0" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService.getConverter (17 samples, 0.41%)</title><rect x="751.0" y="1379.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.0" y="1390.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService$Converters.find (1 samples, 0.02%)</title><rect x="751.6" y="1363.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.6" y="1374.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService$Converters.getRegisteredConverter (1 samples, 0.02%)</title><rect x="751.6" y="1347.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.6" y="1358.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService$ConvertersForPair.getConverter (1 samples, 0.02%)</title><rect x="751.6" y="1331.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.6" y="1342.0"></text>
</g>
<g>
<title>org/springframework/data/repository/support/DomainClassConverter.matches (1 samples, 0.02%)</title><rect x="751.6" y="1315.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.6" y="1326.0"></text>
</g>
<g>
<title>org/springframework/data/repository/support/DomainClassConverter.getConverter (1 samples, 0.02%)</title><rect x="751.6" y="1299.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.6" y="1310.0"></text>
</g>
<g>
<title>org/springframework/data/util/Lazy.get (1 samples, 0.02%)</title><rect x="751.6" y="1283.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.6" y="1294.0"></text>
</g>
<g>
<title>org/springframework/data/util/Lazy.getNullable (1 samples, 0.02%)</title><rect x="751.6" y="1267.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.6" y="1278.0"></text>
</g>
<g>
<title>org/springframework/data/repository/support/DomainClassConverter$$Lambda$1440.0x00007f9a5c93abf0.get (1 samples, 0.02%)</title><rect x="751.6" y="1251.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.6" y="1262.0"></text>
</g>
<g>
<title>org/springframework/data/repository/support/DomainClassConverter.lambda$setApplicationContext$2 (1 samples, 0.02%)</title><rect x="751.6" y="1235.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="751.6" y="1219.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.6" y="1230.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="751.6" y="1203.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.6" y="1214.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="751.6" y="1187.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="751.6" y="1171.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.6" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="751.6" y="1155.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.6" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="751.6" y="1139.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.6" y="1150.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="751.6" y="1123.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.6" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="751.6" y="1107.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.6" y="1118.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="751.6" y="1091.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.6" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="751.6" y="1075.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.02%)</title><rect x="751.6" y="1059.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.6" y="1070.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/LazyDelegatingInputStream.read (1 samples, 0.02%)</title><rect x="751.6" y="1043.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.6" y="1054.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/jar/ZipInflaterInputStream.read (1 samples, 0.02%)</title><rect x="751.6" y="1027.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.6" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.02%)</title><rect x="751.6" y="1011.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.6" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.02%)</title><rect x="751.6" y="995.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.6" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.02%)</title><rect x="751.6" y="979.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.6" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.02%)</title><rect x="751.6" y="963.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="754.6" y="974.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.get (14 samples, 0.34%)</title><rect x="751.8" y="1363.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.8" y="1374.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.getReference (14 samples, 0.34%)</title><rect x="751.8" y="1347.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.8" y="1358.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.getReference (14 samples, 0.34%)</title><rect x="751.8" y="1331.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.8" y="1342.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.findInChain (13 samples, 0.32%)</title><rect x="751.8" y="1315.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.8" y="1326.0"></text>
</g>
<g>
<title>org/springframework/util/ObjectUtils.nullSafeEquals (13 samples, 0.32%)</title><rect x="751.8" y="1299.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.8" y="1310.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService$ConverterCacheKey.equals (13 samples, 0.32%)</title><rect x="751.8" y="1283.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.8" y="1294.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.equals (13 samples, 0.32%)</title><rect x="751.8" y="1267.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.8" y="1278.0"></text>
</g>
<g>
<title>java/util/Arrays.equals (1 samples, 0.02%)</title><rect x="752.1" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.1" y="1262.0"></text>
</g>
<g>
<title>org/springframework/core/ResolvableType.getGenerics (2 samples, 0.05%)</title><rect x="752.4" y="1251.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/Class.getTypeParameters (1 samples, 0.02%)</title><rect x="752.7" y="1235.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.getGenericInfo (1 samples, 0.02%)</title><rect x="752.7" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.7" y="1230.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.annotationsMatch (9 samples, 0.22%)</title><rect x="753.0" y="1251.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.0" y="1262.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.annotationEquals (8 samples, 0.19%)</title><rect x="753.0" y="1235.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.0" y="1246.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy120.equals (8 samples, 0.19%)</title><rect x="753.0" y="1219.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.0" y="1230.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler.invoke (7 samples, 0.17%)</title><rect x="753.3" y="1203.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/Boolean.valueOf (1 samples, 0.02%)</title><rect x="753.3" y="1187.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getName (1 samples, 0.02%)</title><rect x="753.6" y="1187.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.6" y="1198.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler.annotationEquals (4 samples, 0.10%)</title><rect x="753.8" y="1187.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.8" y="1198.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AnnotationUtils.invokeAnnotationMethod (3 samples, 0.07%)</title><rect x="753.8" y="1171.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.isProxyClass (1 samples, 0.02%)</title><rect x="753.8" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.isProxyClass (1 samples, 0.02%)</title><rect x="753.8" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.get (1 samples, 0.02%)</title><rect x="753.8" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.map (1 samples, 0.02%)</title><rect x="753.8" y="1107.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.8" y="1118.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler.invoke (1 samples, 0.02%)</title><rect x="754.1" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.1" y="1166.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler.getAttributeValue (1 samples, 0.02%)</title><rect x="754.1" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="754.1" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.1" y="1134.0"></text>
</g>
<g>
<title>org/springframework/util/ReflectionUtils.invokeMethod (1 samples, 0.02%)</title><rect x="754.4" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.4" y="1166.0"></text>
</g>
<g>
<title>org/springframework/util/ReflectionUtils.invokeMethod (1 samples, 0.02%)</title><rect x="754.4" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.4" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="754.4" y="1123.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="757.4" y="1134.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler.getAttributeValue (1 samples, 0.02%)</title><rect x="754.7" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="754.7" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="754.7" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="754.7" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="754.7" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.7" y="1118.0"></text>
</g>
<g>
<title>org/springframework/util/ReflectionUtils.isEqualsMethod (1 samples, 0.02%)</title><rect x="755.0" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (1 samples, 0.02%)</title><rect x="755.0" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="755.0" y="1155.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.0" y="1166.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.02%)</title><rect x="755.0" y="1139.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="758.0" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="755.0" y="1123.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="758.0" y="1134.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.getAnnotations (1 samples, 0.02%)</title><rect x="755.3" y="1235.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.3" y="1246.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter.getAnnotations (1 samples, 0.02%)</title><rect x="755.3" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="755.3" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.3" y="1214.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.02%)</title><rect x="755.3" y="1187.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="758.3" y="1198.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;270432ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)9, 270432ul&gt;::access_barrier(oopDesc*, oopDesc*, unsigned long) (1 samples, 0.02%)</title><rect x="755.3" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="758.3" y="1182.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.restructureIfNecessary (1 samples, 0.02%)</title><rect x="755.6" y="1315.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.6" y="1326.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService.convert (6 samples, 0.15%)</title><rect x="755.9" y="1395.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.9" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/ConversionUtils.invokeConverter (3 samples, 0.07%)</title><rect x="756.1" y="1379.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.1" y="1390.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService$ConverterAdapter.convert (2 samples, 0.05%)</title><rect x="756.1" y="1363.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.1" y="1374.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/StringToBooleanConverter.convert (2 samples, 0.05%)</title><rect x="756.1" y="1347.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="759.1" y="1358.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/StringToBooleanConverter.convert (1 samples, 0.02%)</title><rect x="756.4" y="1331.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.4" y="1342.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="756.4" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.4" y="1326.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService$NoOpConverter.convert (1 samples, 0.02%)</title><rect x="756.7" y="1363.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.7" y="1374.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService.getConverter (2 samples, 0.05%)</title><rect x="757.0" y="1379.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.0" y="1390.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.get (2 samples, 0.05%)</title><rect x="757.0" y="1363.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.0" y="1374.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.getReference (2 samples, 0.05%)</title><rect x="757.0" y="1347.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.0" y="1358.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.getReference (2 samples, 0.05%)</title><rect x="757.0" y="1331.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.0" y="1342.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap$Segment.findInChain (2 samples, 0.05%)</title><rect x="757.0" y="1315.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.0" y="1326.0"></text>
</g>
<g>
<title>org/springframework/util/ObjectUtils.nullSafeEquals (2 samples, 0.05%)</title><rect x="757.0" y="1299.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.0" y="1310.0"></text>
</g>
<g>
<title>org/springframework/core/convert/support/GenericConversionService$ConverterCacheKey.equals (2 samples, 0.05%)</title><rect x="757.0" y="1283.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.0" y="1294.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.equals (2 samples, 0.05%)</title><rect x="757.0" y="1267.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.0" y="1278.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.annotationsMatch (2 samples, 0.05%)</title><rect x="757.0" y="1251.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.0" y="1262.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.annotationEquals (2 samples, 0.05%)</title><rect x="757.0" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.0" y="1246.0"></text>
</g>
<g>
<title>jdk/proxy2/$Proxy120.equals (2 samples, 0.05%)</title><rect x="757.0" y="1219.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.0" y="1230.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler.invoke (2 samples, 0.05%)</title><rect x="757.0" y="1203.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.0" y="1214.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="757.0" y="1187.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="760.0" y="1198.0"></text>
</g>
<g>
<title>org/springframework/core/annotation/AttributeMethods.indexOf (1 samples, 0.02%)</title><rect x="757.3" y="1187.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="757.3" y="1171.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.3" y="1182.0"></text>
</g>
<g>
<title>org/springframework/core/MethodParameter.getParameterName (6 samples, 0.15%)</title><rect x="757.6" y="1427.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.6" y="1438.0"></text>
</g>
<g>
<title>org/springframework/core/PrioritizedParameterNameDiscoverer.getParameterNames (5 samples, 0.12%)</title><rect x="757.9" y="1411.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.9" y="1422.0"></text>
</g>
<g>
<title>org/springframework/core/StandardReflectionParameterNameDiscoverer.getParameterNames (5 samples, 0.12%)</title><rect x="757.9" y="1395.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getParameters (2 samples, 0.05%)</title><rect x="757.9" y="1379.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.05%)</title><rect x="757.9" y="1363.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.9" y="1374.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="757.9" y="1347.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="760.9" y="1358.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.02%)</title><rect x="758.1" y="1347.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="761.1" y="1358.0"></text>
</g>
<g>
<title>org/springframework/core/StandardReflectionParameterNameDiscoverer.getParameterNames (3 samples, 0.07%)</title><rect x="758.4" y="1379.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Parameter.getName (1 samples, 0.02%)</title><rect x="758.7" y="1363.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/reflect/Parameter.isNamePresent (1 samples, 0.02%)</title><rect x="759.0" y="1363.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.0" y="1374.0"></text>
</g>
<g>
<title>org/springframework/core/convert/TypeDescriptor.&lt;init&gt; (2 samples, 0.05%)</title><rect x="759.3" y="1427.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.3" y="1438.0"></text>
</g>
<g>
<title>org/springframework/core/ResolvableType.forMethodParameter (1 samples, 0.02%)</title><rect x="759.6" y="1411.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.6" y="1422.0"></text>
</g>
<g>
<title>org/springframework/core/ResolvableType.forMethodParameter (1 samples, 0.02%)</title><rect x="759.6" y="1395.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.6" y="1406.0"></text>
</g>
<g>
<title>org/springframework/core/ResolvableType.forMethodParameter (1 samples, 0.02%)</title><rect x="759.6" y="1379.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.6" y="1390.0"></text>
</g>
<g>
<title>org/springframework/core/ResolvableType.forType (1 samples, 0.02%)</title><rect x="759.6" y="1363.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.6" y="1374.0"></text>
</g>
<g>
<title>org/springframework/core/SerializableTypeWrapper.forTypeProvider (1 samples, 0.02%)</title><rect x="759.6" y="1347.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.6" y="1358.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.put (1 samples, 0.02%)</title><rect x="759.6" y="1331.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.6" y="1342.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.put (1 samples, 0.02%)</title><rect x="759.6" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.6" y="1326.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.doTask (1 samples, 0.02%)</title><rect x="759.6" y="1299.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.6" y="1310.0"></text>
</g>
<g>
<title>org/springframework/util/ConcurrentReferenceHashMap.getHash (1 samples, 0.02%)</title><rect x="759.6" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.6" y="1294.0"></text>
</g>
<g>
<title>org/springframework/core/SerializableTypeWrapper$MethodParameterTypeProvider.getType (1 samples, 0.02%)</title><rect x="759.6" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.6" y="1278.0"></text>
</g>
<g>
<title>org/springframework/validation/DataBinder.getTypeConverter (1 samples, 0.02%)</title><rect x="759.9" y="1443.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.9" y="1454.0"></text>
</g>
<g>
<title>org/springframework/validation/DataBinder.getSimpleTypeConverter (1 samples, 0.02%)</title><rect x="759.9" y="1427.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.9" y="1438.0"></text>
</g>
<g>
<title>org/springframework/validation/DataBinder$ExtendedTypeConverter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="759.9" y="1411.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.9" y="1422.0"></text>
</g>
<g>
<title>org/springframework/beans/SimpleTypeConverter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="759.9" y="1395.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.9" y="1406.0"></text>
</g>
<g>
<title>org/springframework/web/bind/support/DefaultDataBinderFactory.createBinder (5 samples, 0.12%)</title><rect x="760.2" y="1459.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.2" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/bind/support/DefaultDataBinderFactory.createBinderInternal (5 samples, 0.12%)</title><rect x="760.2" y="1443.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.2" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/bind/support/ConfigurableWebBindingInitializer.initBinder (2 samples, 0.05%)</title><rect x="760.2" y="1427.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.2" y="1438.0"></text>
</g>
<g>
<title>org/springframework/validation/DataBinder.setAutoGrowNestedPaths (1 samples, 0.02%)</title><rect x="760.4" y="1411.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.4" y="1422.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/InitBinderDataBinderFactory.initBinder (1 samples, 0.02%)</title><rect x="760.7" y="1427.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.7" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/ServletRequestDataBinderFactory.createBinderInstance (2 samples, 0.05%)</title><rect x="761.0" y="1427.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.0" y="1438.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/ServletRequestDataBinderFactory.createBinderInstance (2 samples, 0.05%)</title><rect x="761.0" y="1411.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="764.0" y="1422.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="761.0" y="1395.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="764.0" y="1406.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="761.0" y="1379.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="764.0" y="1390.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="761.0" y="1363.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="764.0" y="1374.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="761.0" y="1347.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="764.0" y="1358.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="761.0" y="1331.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.0" y="1342.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="761.0" y="1315.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="764.0" y="1326.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="761.0" y="1299.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.0" y="1310.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="761.0" y="1283.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.0" y="1294.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="761.0" y="1267.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="764.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="761.3" y="1395.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.3" y="1406.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="761.3" y="1379.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.3" y="1390.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="761.3" y="1363.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="761.3" y="1347.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.3" y="1358.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="761.3" y="1331.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.3" y="1342.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="761.3" y="1315.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.3" y="1326.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="761.3" y="1299.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.3" y="1310.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="761.3" y="1283.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.3" y="1294.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="761.3" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="764.3" y="1278.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="761.3" y="1251.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.3" y="1262.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="761.3" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="761.3" y="1219.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="761.3" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="761.3" y="1187.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.3" y="1198.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="761.3" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.3" y="1182.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="761.3" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="761.3" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.3" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="761.3" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.3" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="761.3" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.3" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="761.3" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.3" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="761.3" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.3" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="761.3" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.3" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="761.3" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.3" y="1054.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="761.3" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="764.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="761.3" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="761.3" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.3" y="1006.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="761.3" y="979.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="764.3" y="990.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="761.3" y="963.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="764.3" y="974.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="761.3" y="947.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="764.3" y="958.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="761.3" y="931.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="764.3" y="942.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="761.3" y="915.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="764.3" y="926.0"></text>
</g>
<g>
<title>SystemDictionary::check_constraints(unsigned int, InstanceKlass*, Handle, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="761.3" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="764.3" y="910.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.resolveEmbeddedValuesAndExpressions (3 samples, 0.07%)</title><rect x="761.6" y="1475.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.6" y="1486.0"></text>
</g>
<g>
<title>org/springframework/beans/factory/support/AbstractBeanFactory.resolveEmbeddedValue (2 samples, 0.05%)</title><rect x="761.9" y="1459.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.9" y="1470.0"></text>
</g>
<g>
<title>org/springframework/context/support/PropertySourcesPlaceholderConfigurer$$Lambda$601.0x00007f9a5c35ba10.resolveStringValue (2 samples, 0.05%)</title><rect x="761.9" y="1443.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.9" y="1454.0"></text>
</g>
<g>
<title>org/springframework/context/support/PropertySourcesPlaceholderConfigurer.lambda$processProperties$0 (2 samples, 0.05%)</title><rect x="761.9" y="1427.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.9" y="1438.0"></text>
</g>
<g>
<title>org/springframework/core/env/AbstractPropertyResolver.resolveRequiredPlaceholders (2 samples, 0.05%)</title><rect x="761.9" y="1411.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.9" y="1422.0"></text>
</g>
<g>
<title>org/springframework/core/env/AbstractPropertyResolver.doResolvePlaceholders (2 samples, 0.05%)</title><rect x="761.9" y="1395.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="761.9" y="1379.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (2 samples, 0.05%)</title><rect x="761.9" y="1363.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (2 samples, 0.05%)</title><rect x="761.9" y="1347.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.9" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (2 samples, 0.05%)</title><rect x="761.9" y="1331.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.9" y="1342.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="761.9" y="1315.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="764.9" y="1326.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="761.9" y="1299.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="764.9" y="1310.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (1 samples, 0.02%)</title><rect x="762.2" y="1315.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="765.2" y="1326.0"></text>
</g>
<g>
<title>org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.resolveName (35 samples, 0.85%)</title><rect x="762.4" y="1475.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.4" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.getNativeRequest (3 samples, 0.07%)</title><rect x="762.7" y="1459.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.7" y="1470.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="763.0" y="1443.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.0" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/util/WebUtils.getNativeRequest (1 samples, 0.02%)</title><rect x="763.3" y="1443.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.3" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/ServletWebRequest.getParameterValues (24 samples, 0.58%)</title><rect x="763.6" y="1459.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.6" y="1470.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getParameterValues (24 samples, 0.58%)</title><rect x="763.6" y="1443.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.6" y="1454.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getParameterValues (24 samples, 0.58%)</title><rect x="763.6" y="1427.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.6" y="1438.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.parseParameters (22 samples, 0.53%)</title><rect x="763.9" y="1411.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.9" y="1422.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="763.9" y="1395.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.9" y="1406.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getCharset (1 samples, 0.02%)</title><rect x="764.2" y="1395.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.2" y="1406.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getContentType (1 samples, 0.02%)</title><rect x="764.5" y="1395.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="767.5" y="1406.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/Parameters.handleQueryParameters (18 samples, 0.44%)</title><rect x="764.7" y="1395.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.7" y="1406.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.duplicate (3 samples, 0.07%)</title><rect x="765.0" y="1379.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.0" y="1390.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.02%)</title><rect x="765.0" y="1363.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="768.0" y="1374.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.append (2 samples, 0.05%)</title><rect x="765.3" y="1363.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.3" y="1374.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.append (2 samples, 0.05%)</title><rect x="765.3" y="1347.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.3" y="1358.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="765.3" y="1331.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="768.3" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="765.3" y="1315.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="768.3" y="1326.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.makeSpace (1 samples, 0.02%)</title><rect x="765.6" y="1331.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.6" y="1342.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/Parameters.processParameters (14 samples, 0.34%)</title><rect x="765.9" y="1379.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.9" y="1390.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/AbstractChunk.getLength (1 samples, 0.02%)</title><rect x="765.9" y="1363.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="768.9" y="1374.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/Parameters.processParameters (13 samples, 0.32%)</title><rect x="766.2" y="1363.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.2" y="1374.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="768.5" y="1347.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="771.5" y="1358.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="768.5" y="1331.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="771.5" y="1342.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="768.5" y="1315.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="771.5" y="1326.0"></text>
</g>
<g>
<title>CompilationPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="768.5" y="1299.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="771.5" y="1310.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;LoopPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="768.5" y="1283.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="771.5" y="1294.0"></text>
</g>
<g>
<title>LoopPredicate::apply(methodHandle const&amp;, CompLevel, int, int) [clone .isra.0] (1 samples, 0.02%)</title><rect x="768.5" y="1267.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="771.5" y="1278.0"></text>
</g>
<g>
<title>CodeHeap::max_capacity() const (1 samples, 0.02%)</title><rect x="768.5" y="1251.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="771.5" y="1262.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toString (1 samples, 0.02%)</title><rect x="768.8" y="1347.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.8" y="1358.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toString (1 samples, 0.02%)</title><rect x="768.8" y="1331.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.8" y="1342.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/StringCache.toString (1 samples, 0.02%)</title><rect x="768.8" y="1315.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.8" y="1326.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toStringInternal (1 samples, 0.02%)</title><rect x="768.8" y="1299.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.8" y="1310.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (1 samples, 0.02%)</title><rect x="768.8" y="1283.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.8" y="1294.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/Parameters.addParameter (3 samples, 0.07%)</title><rect x="769.0" y="1347.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.0" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.05%)</title><rect x="769.3" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.3" y="1342.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.afterNodeInsertion (1 samples, 0.02%)</title><rect x="769.6" y="1315.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.6" y="1326.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/Parameters.setCharset (1 samples, 0.02%)</title><rect x="769.9" y="1395.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.9" y="1406.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/Parameters.getParameterValues (1 samples, 0.02%)</title><rect x="770.2" y="1411.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.2" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.02%)</title><rect x="770.2" y="1395.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.2" y="1406.0"></text>
</g>
<g>
<title>org/springframework/web/multipart/support/MultipartResolutionDelegate.resolveMultipartArgument (7 samples, 0.17%)</title><rect x="770.5" y="1459.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="773.5" y="1470.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="771.3" y="1443.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.3" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/multipart/support/MultipartResolutionDelegate.isMultipartFileCollection (1 samples, 0.02%)</title><rect x="771.6" y="1443.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.6" y="1454.0"></text>
</g>
<g>
<title>org/springframework/web/multipart/support/MultipartResolutionDelegate.getCollectionParameterType (1 samples, 0.02%)</title><rect x="771.6" y="1427.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.02%)</title><rect x="771.6" y="1411.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.6" y="1422.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (1 samples, 0.02%)</title><rect x="771.6" y="1395.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="774.6" y="1406.0"></text>
</g>
<g>
<title>org/springframework/web/multipart/support/MultipartResolutionDelegate.isPartArray (1 samples, 0.02%)</title><rect x="771.9" y="1443.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/Class.componentType (1 samples, 0.02%)</title><rect x="771.9" y="1427.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.02%)</title><rect x="771.9" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.9" y="1422.0"></text>
</g>
<g>
<title>JVM_IsArrayClass (1 samples, 0.02%)</title><rect x="771.9" y="1395.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="774.9" y="1406.0"></text>
</g>
<g>
<title>org/springframework/web/util/WebUtils.getNativeRequest (1 samples, 0.02%)</title><rect x="772.2" y="1443.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="772.2" y="1427.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.2" y="1438.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="772.2" y="1411.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.2" y="1422.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="772.2" y="1395.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="772.2" y="1379.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.2" y="1390.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="772.2" y="1363.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.2" y="1374.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="772.2" y="1347.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.2" y="1358.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="772.2" y="1331.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.2" y="1342.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="772.2" y="1315.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.2" y="1326.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="772.2" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="775.2" y="1310.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="772.2" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.2" y="1294.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="772.2" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="772.2" y="1251.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="772.2" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.2" y="1246.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="772.2" y="1219.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="775.2" y="1230.0"></text>
</g>
<g>
<title>getUTF (1 samples, 0.02%)</title><rect x="772.2" y="1203.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="775.2" y="1214.0"></text>
</g>
<g>
<title>UNICODE::as_utf8(signed char const*, int, char*, int) (1 samples, 0.02%)</title><rect x="772.2" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="775.2" y="1198.0"></text>
</g>
<g>
<title>org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.supportsParameter (1 samples, 0.02%)</title><rect x="772.5" y="1507.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.5" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.getArgumentResolver (1 samples, 0.02%)</title><rect x="772.5" y="1491.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.5" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="772.5" y="1475.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.5" y="1486.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.setResponseStatus (1 samples, 0.02%)</title><rect x="772.8" y="1539.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.8" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/support/WebContentGenerator.prepareResponse (4 samples, 0.10%)</title><rect x="773.1" y="1571.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.1" y="1582.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/support/WebContentGenerator.applyCacheSeconds (4 samples, 0.10%)</title><rect x="773.1" y="1555.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.1" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/support/WebContentGenerator.applyCacheControl (2 samples, 0.05%)</title><rect x="773.6" y="1539.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.6" y="1550.0"></text>
</g>
<g>
<title>org/springframework/http/CacheControl.getHeaderValue (1 samples, 0.02%)</title><rect x="773.9" y="1523.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.9" y="1534.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.hasText (1 samples, 0.02%)</title><rect x="773.9" y="1507.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.9" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.isBlank (1 samples, 0.02%)</title><rect x="773.9" y="1491.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.9" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.indexOfNonWhitespace (1 samples, 0.02%)</title><rect x="773.9" y="1475.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.9" y="1486.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (1 samples, 0.02%)</title><rect x="773.9" y="1459.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.9" y="1470.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/DispatcherServlet.logRequest (1 samples, 0.02%)</title><rect x="774.2" y="1619.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.2" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="774.2" y="1603.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.2" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.02%)</title><rect x="774.2" y="1587.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.2" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.02%)</title><rect x="774.2" y="1571.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.2" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.02%)</title><rect x="774.2" y="1555.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.2" y="1566.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (1 samples, 0.02%)</title><rect x="774.2" y="1539.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="777.2" y="1550.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.02%)</title><rect x="774.2" y="1523.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="777.2" y="1534.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="774.2" y="1507.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="777.2" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/FlashMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="774.5" y="1619.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.5" y="1630.0"></text>
</g>
<g>
<title>org/springframework/util/LinkedMultiValueMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="774.5" y="1603.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.5" y="1614.0"></text>
</g>
<g>
<title>org/springframework/util/CollectionUtils.newLinkedHashMap (1 samples, 0.02%)</title><rect x="774.5" y="1587.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.5" y="1598.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/support/AbstractFlashMapManager.retrieveAndUpdate (3 samples, 0.07%)</title><rect x="774.8" y="1619.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.8" y="1630.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/support/SessionFlashMapManager.retrieveFlashMaps (1 samples, 0.02%)</title><rect x="775.4" y="1603.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.4" y="1614.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getSession (1 samples, 0.02%)</title><rect x="775.4" y="1587.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.4" y="1598.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getSession (1 samples, 0.02%)</title><rect x="775.4" y="1571.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.4" y="1582.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.doGetSession (1 samples, 0.02%)</title><rect x="775.4" y="1555.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.4" y="1566.0"></text>
</g>
<g>
<title>org/springframework/web/util/ServletRequestPathUtils.parseAndCache (13 samples, 0.32%)</title><rect x="775.6" y="1619.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.6" y="1630.0"></text>
</g>
<g>
<title>org/springframework/web/util/ServletRequestPathUtils$ServletRequestPath.parse (13 samples, 0.32%)</title><rect x="775.6" y="1603.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.6" y="1614.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getRequestURI (3 samples, 0.07%)</title><rect x="775.6" y="1587.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.6" y="1598.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getRequestURI (3 samples, 0.07%)</title><rect x="775.6" y="1571.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.6" y="1582.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.toStringType (3 samples, 0.07%)</title><rect x="775.6" y="1555.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.6" y="1566.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toString (3 samples, 0.07%)</title><rect x="775.6" y="1539.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.6" y="1550.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toString (3 samples, 0.07%)</title><rect x="775.6" y="1523.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.6" y="1534.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/StringCache.toString (3 samples, 0.07%)</title><rect x="775.6" y="1507.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.6" y="1518.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toStringInternal (3 samples, 0.07%)</title><rect x="775.6" y="1491.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.6" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="775.6" y="1475.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.6" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="775.6" y="1459.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.6" y="1470.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (2 samples, 0.05%)</title><rect x="775.9" y="1475.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.9" y="1486.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (2 samples, 0.05%)</title><rect x="775.9" y="1459.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.9" y="1470.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (1 samples, 0.02%)</title><rect x="776.2" y="1443.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.2" y="1454.0"></text>
</g>
<g>
<title>sun/nio/cs/ISO_8859_1$Decoder.decodeLoop (1 samples, 0.02%)</title><rect x="776.2" y="1427.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.2" y="1438.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.hasArray (1 samples, 0.02%)</title><rect x="776.2" y="1411.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.2" y="1422.0"></text>
</g>
<g>
<title>org/springframework/http/server/RequestPath.parse (8 samples, 0.19%)</title><rect x="776.5" y="1587.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.5" y="1598.0"></text>
</g>
<g>
<title>org/springframework/http/server/DefaultRequestPath.&lt;init&gt; (8 samples, 0.19%)</title><rect x="776.5" y="1571.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.5" y="1582.0"></text>
</g>
<g>
<title>org/springframework/http/server/DefaultRequestPath.extractPathWithinApplication (1 samples, 0.02%)</title><rect x="776.5" y="1555.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.5" y="1566.0"></text>
</g>
<g>
<title>org/springframework/http/server/PathContainer.subPath (1 samples, 0.02%)</title><rect x="776.5" y="1539.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.5" y="1550.0"></text>
</g>
<g>
<title>org/springframework/http/server/PathContainer.subPath (1 samples, 0.02%)</title><rect x="776.5" y="1523.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.5" y="1534.0"></text>
</g>
<g>
<title>org/springframework/http/server/DefaultPathContainer.subPath (1 samples, 0.02%)</title><rect x="776.5" y="1507.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.5" y="1518.0"></text>
</g>
<g>
<title>org/springframework/http/server/PathContainer.parsePath (7 samples, 0.17%)</title><rect x="776.8" y="1555.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.8" y="1566.0"></text>
</g>
<g>
<title>org/springframework/http/server/DefaultPathContainer.createFromUrlPath (7 samples, 0.17%)</title><rect x="776.8" y="1539.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.8" y="1550.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="776.8" y="1523.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.8" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="777.1" y="1523.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.1" y="1534.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="777.4" y="1523.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.4" y="1534.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="777.6" y="1507.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.6" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="777.6" y="1491.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.6" y="1502.0"></text>
</g>
<g>
<title>org/springframework/http/server/DefaultPathContainer.decodeAndParsePathSegment (3 samples, 0.07%)</title><rect x="777.9" y="1523.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.9" y="1534.0"></text>
</g>
<g>
<title>org/springframework/http/server/DefaultPathContainer$DefaultPathSegment.&lt;clinit&gt; (1 samples, 0.02%)</title><rect x="778.5" y="1507.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.5" y="1518.0"></text>
</g>
<g>
<title>org/springframework/util/CollectionUtils.unmodifiableMultiValueMap (1 samples, 0.02%)</title><rect x="778.5" y="1491.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="778.5" y="1475.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.5" y="1486.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="778.5" y="1459.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.5" y="1470.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="778.5" y="1443.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="778.5" y="1427.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.5" y="1438.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.02%)</title><rect x="778.5" y="1411.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.5" y="1422.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="778.5" y="1395.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.5" y="1406.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.02%)</title><rect x="778.5" y="1379.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.5" y="1390.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="778.5" y="1363.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.5" y="1374.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.02%)</title><rect x="778.5" y="1347.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.5" y="1358.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.02%)</title><rect x="778.5" y="1331.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.5" y="1342.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.02%)</title><rect x="778.5" y="1315.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.02%)</title><rect x="778.5" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.02%)</title><rect x="778.5" y="1283.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.5" y="1294.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.02%)</title><rect x="778.5" y="1267.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="781.5" y="1278.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.02%)</title><rect x="778.5" y="1251.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="781.5" y="1262.0"></text>
</g>
<g>
<title>jvm_define_class_common(char const*, _jobject*, signed char const*, int, _jobject*, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="778.5" y="1235.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="781.5" y="1246.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_class_from_stream(ClassFileStream*, Symbol*, Handle, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="778.5" y="1219.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="781.5" y="1230.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="778.5" y="1203.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="781.5" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, JavaThread*) (1 samples, 0.02%)</title><rect x="778.5" y="1187.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="781.5" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="778.5" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="781.5" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, JavaThread*) (1 samples, 0.02%)</title><rect x="778.5" y="1155.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="781.5" y="1166.0"></text>
</g>
<g>
<title>org/springframework/web/util/ServletRequestPathUtils$ServletRequestPath.getServletPathPrefix (2 samples, 0.05%)</title><rect x="778.8" y="1587.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.8" y="1598.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getHttpServletMapping (1 samples, 0.02%)</title><rect x="779.1" y="1571.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.1" y="1582.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getHttpServletMapping (1 samples, 0.02%)</title><rect x="779.1" y="1555.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.1" y="1566.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationMapping.getHttpServletMapping (1 samples, 0.02%)</title><rect x="779.1" y="1539.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.1" y="1550.0"></text>
</g>
<g>
<title>org/springframework/web/util/ServletRequestPathUtils.setParsedRequestPath (2 samples, 0.05%)</title><rect x="779.4" y="1619.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.4" y="1630.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.removeAttribute (2 samples, 0.05%)</title><rect x="779.4" y="1603.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.4" y="1614.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.removeAttribute (2 samples, 0.05%)</title><rect x="779.4" y="1587.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.4" y="1598.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.notifyAttributeRemoved (1 samples, 0.02%)</title><rect x="779.7" y="1571.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.7" y="1582.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/FrameworkServlet.initContextHolders (1 samples, 0.02%)</title><rect x="779.9" y="1635.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.9" y="1646.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/FrameworkServlet.logResult (2 samples, 0.05%)</title><rect x="780.2" y="1635.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.2" y="1646.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="780.5" y="1619.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.5" y="1630.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/FrameworkServlet.publishRequestHandledEvent (21 samples, 0.51%)</title><rect x="780.8" y="1635.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.8" y="1646.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getRemoteAddr (8 samples, 0.19%)</title><rect x="781.7" y="1619.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.7" y="1630.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getRemoteAddr (7 samples, 0.17%)</title><rect x="781.9" y="1603.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="784.9" y="1614.0"></text>
</g>
<g>
<title>org/apache/coyote/Request.action (6 samples, 0.15%)</title><rect x="782.2" y="1587.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.2" y="1598.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.action (6 samples, 0.15%)</title><rect x="782.2" y="1571.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.2" y="1582.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.getRemoteAddr (5 samples, 0.12%)</title><rect x="782.5" y="1555.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.5" y="1566.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.populateRemoteAddr (5 samples, 0.12%)</title><rect x="782.5" y="1539.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.5" y="1550.0"></text>
</g>
<g>
<title>java/net/Inet4Address.getHostAddress (4 samples, 0.10%)</title><rect x="782.5" y="1523.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.5" y="1534.0"></text>
</g>
<g>
<title>java/net/Inet4Address.getAddress (1 samples, 0.02%)</title><rect x="782.8" y="1507.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.8" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (1 samples, 0.02%)</title><rect x="782.8" y="1491.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="785.8" y="1502.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="782.8" y="1475.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="785.8" y="1486.0"></text>
</g>
<g>
<title>java/net/Inet4Address.numericToTextFormat (2 samples, 0.05%)</title><rect x="783.1" y="1507.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="786.1" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="783.4" y="1491.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.4" y="1502.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="783.4" y="1475.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="786.4" y="1486.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="783.4" y="1459.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="786.4" y="1470.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="783.4" y="1443.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="786.4" y="1454.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="783.4" y="1427.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="786.4" y="1438.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="783.4" y="1411.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="786.4" y="1422.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="783.4" y="1395.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="786.4" y="1406.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="783.4" y="1379.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="786.4" y="1390.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="783.4" y="1363.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="786.4" y="1374.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.02%)</title><rect x="783.4" y="1347.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="786.4" y="1358.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="783.4" y="1331.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="786.4" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getInetAddress (1 samples, 0.02%)</title><rect x="783.7" y="1523.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="786.7" y="1534.0"></text>
</g>
<g>
<title>org/springframework/context/support/AbstractApplicationContext.publishEvent (9 samples, 0.22%)</title><rect x="784.0" y="1619.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.0" y="1630.0"></text>
</g>
<g>
<title>org/springframework/context/support/AbstractApplicationContext.publishEvent (9 samples, 0.22%)</title><rect x="784.0" y="1603.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.0" y="1614.0"></text>
</g>
<g>
<title>org/springframework/context/event/SimpleApplicationEventMulticaster.multicastEvent (6 samples, 0.15%)</title><rect x="784.5" y="1587.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.5" y="1598.0"></text>
</g>
<g>
<title>org/springframework/context/event/AbstractApplicationEventMulticaster.getApplicationListeners (5 samples, 0.12%)</title><rect x="784.5" y="1571.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.5" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="784.5" y="1555.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.5" y="1566.0"></text>
</g>
<g>
<title>org/springframework/context/event/AbstractApplicationEventMulticaster$ListenerCacheKey.hashCode (2 samples, 0.05%)</title><rect x="784.5" y="1539.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.5" y="1550.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.02%)</title><rect x="784.8" y="1523.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="787.8" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, JavaThread*) (1 samples, 0.02%)</title><rect x="784.8" y="1507.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="787.8" y="1518.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="784.8" y="1491.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="787.8" y="1502.0"></text>
</g>
<g>
<title>org/springframework/context/event/AbstractApplicationEventMulticaster$CachedListenerRetriever.getApplicationListeners (3 samples, 0.07%)</title><rect x="785.1" y="1555.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.1" y="1566.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.05%)</title><rect x="785.4" y="1539.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.4" y="1550.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWordImpl**, unsigned long) (1 samples, 0.02%)</title><rect x="785.4" y="1523.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="788.4" y="1534.0"></text>
</g>
<g>
<title>java/util/HashSet.toArray (1 samples, 0.02%)</title><rect x="785.7" y="1523.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.7" y="1534.0"></text>
</g>
<g>
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.02%)</title><rect x="785.7" y="1507.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="788.7" y="1518.0"></text>
</g>
<g>
<title>org/springframework/context/event/SimpleApplicationEventMulticaster.invokeListener (1 samples, 0.02%)</title><rect x="786.0" y="1571.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.0" y="1582.0"></text>
</g>
<g>
<title>org/springframework/core/ResolvableType.forInstance (1 samples, 0.02%)</title><rect x="786.2" y="1587.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.2" y="1598.0"></text>
</g>
<g>
<title>org/springframework/web/util/WebUtils.getSessionId (1 samples, 0.02%)</title><rect x="786.5" y="1619.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.5" y="1630.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getSession (1 samples, 0.02%)</title><rect x="786.5" y="1603.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.5" y="1614.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getSession (1 samples, 0.02%)</title><rect x="786.5" y="1587.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.5" y="1598.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.doGetSession (1 samples, 0.02%)</title><rect x="786.5" y="1571.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.5" y="1582.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardContext.getManager (1 samples, 0.02%)</title><rect x="786.5" y="1555.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.5" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="786.5" y="1539.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.5" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="786.5" y="1523.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.5" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="786.5" y="1507.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.5" y="1518.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/FrameworkServlet.resetContextHolders (2 samples, 0.05%)</title><rect x="786.8" y="1635.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.8" y="1646.0"></text>
</g>
<g>
<title>org/springframework/context/i18n/LocaleContextHolder.setLocaleContext (1 samples, 0.02%)</title><rect x="787.1" y="1619.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.1" y="1630.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="787.1" y="1603.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.1" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/AbstractRequestAttributes.requestCompleted (1 samples, 0.02%)</title><rect x="787.4" y="1747.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.4" y="1758.0"></text>
</g>
<g>
<title>org/springframework/web/context/request/AbstractRequestAttributes.executeRequestDestructionCallbacks (1 samples, 0.02%)</title><rect x="787.4" y="1731.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.4" y="1742.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.clear (1 samples, 0.02%)</title><rect x="787.4" y="1715.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.4" y="1726.0"></text>
</g>
<g>
<title>org/springframework/web/filter/RequestContextFilter.initContextHolders (7 samples, 0.17%)</title><rect x="787.7" y="1747.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.7" y="1758.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getLocale (3 samples, 0.07%)</title><rect x="787.7" y="1731.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.7" y="1742.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getLocale (2 samples, 0.05%)</title><rect x="788.0" y="1715.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.0" y="1726.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.parseLocales (2 samples, 0.05%)</title><rect x="788.0" y="1699.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.0" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.values (1 samples, 0.02%)</title><rect x="788.3" y="1683.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.3" y="1694.0"></text>
</g>
<g>
<title>org/springframework/context/i18n/LocaleContextHolder.setLocale (4 samples, 0.10%)</title><rect x="788.5" y="1731.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.5" y="1742.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="788.5" y="1715.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="791.5" y="1726.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, JavaThread*) (1 samples, 0.02%)</title><rect x="788.5" y="1699.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="791.5" y="1710.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="788.5" y="1683.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="791.5" y="1694.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="788.5" y="1667.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="791.5" y="1678.0"></text>
</g>
<g>
<title>ObjectSynchronizer::enter(Handle, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="788.5" y="1651.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="791.5" y="1662.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(JavaThread*) (1 samples, 0.02%)</title><rect x="788.5" y="1635.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="791.5" y="1646.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="788.5" y="1619.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="791.5" y="1630.0"></text>
</g>
<g>
<title>org/springframework/context/i18n/LocaleContextHolder.getLocaleContext (1 samples, 0.02%)</title><rect x="788.8" y="1715.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.8" y="1726.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="788.8" y="1699.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="788.8" y="1683.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.8" y="1694.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="788.8" y="1667.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.8" y="1678.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="788.8" y="1651.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.8" y="1662.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="788.8" y="1635.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.8" y="1646.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="788.8" y="1619.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.8" y="1630.0"></text>
</g>
<g>
<title>org/springframework/context/i18n/SimpleLocaleContext.&lt;init&gt; (2 samples, 0.05%)</title><rect x="789.1" y="1715.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.1" y="1726.0"></text>
</g>
<g>
<title>org/springframework/web/filter/FormContentFilter.parseIfNecessary (6 samples, 0.15%)</title><rect x="789.7" y="1811.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.7" y="1822.0"></text>
</g>
<g>
<title>org/springframework/web/filter/FormContentFilter.shouldParse (6 samples, 0.15%)</title><rect x="789.7" y="1795.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.7" y="1806.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getMethod (5 samples, 0.12%)</title><rect x="790.0" y="1779.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.0" y="1790.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Request.getMethod (5 samples, 0.12%)</title><rect x="790.0" y="1763.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.0" y="1774.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.toStringType (5 samples, 0.12%)</title><rect x="790.0" y="1747.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.0" y="1758.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toString (5 samples, 0.12%)</title><rect x="790.0" y="1731.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.0" y="1742.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toString (5 samples, 0.12%)</title><rect x="790.0" y="1715.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.0" y="1726.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/StringCache.toString (5 samples, 0.12%)</title><rect x="790.0" y="1699.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.0" y="1710.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toStringInternal (5 samples, 0.12%)</title><rect x="790.0" y="1683.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.0" y="1694.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (4 samples, 0.10%)</title><rect x="790.3" y="1667.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.3" y="1678.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (1 samples, 0.02%)</title><rect x="790.3" y="1651.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.3" y="1662.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (1 samples, 0.02%)</title><rect x="790.3" y="1635.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.3" y="1646.0"></text>
</g>
<g>
<title>java/nio/charset/CoderResult.isOverflow (1 samples, 0.02%)</title><rect x="790.3" y="1619.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.3" y="1630.0"></text>
</g>
<g>
<title>sun/nio/cs/ISO_8859_1$Decoder.decodeLoop (1 samples, 0.02%)</title><rect x="790.3" y="1603.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.3" y="1614.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (3 samples, 0.07%)</title><rect x="790.5" y="1651.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.5" y="1662.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (3 samples, 0.07%)</title><rect x="790.5" y="1635.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.5" y="1646.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$1.hasName (3 samples, 0.07%)</title><rect x="790.5" y="1619.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.5" y="1630.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.equals (1 samples, 0.02%)</title><rect x="790.8" y="1603.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.8" y="1614.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.charset (1 samples, 0.02%)</title><rect x="791.1" y="1603.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.1" y="1614.0"></text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.getAlreadyFilteredAttributeName (1 samples, 0.02%)</title><rect x="791.4" y="1827.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.4" y="1838.0"></text>
</g>
<g>
<title>org/springframework/web/filter/GenericFilterBean.getFilterName (1 samples, 0.02%)</title><rect x="791.4" y="1811.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.4" y="1822.0"></text>
</g>
<g>
<title>org/springframework/web/filter/CharacterEncodingFilter.isForceRequestEncoding (1 samples, 0.02%)</title><rect x="791.7" y="1875.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.7" y="1886.0"></text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.getAlreadyFilteredAttributeName (1 samples, 0.02%)</title><rect x="792.0" y="1891.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.0" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="792.0" y="1875.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.0" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x00007f9a5c00a800.invoke (1 samples, 0.02%)</title><rect x="792.0" y="1859.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.0" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="792.0" y="1843.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.0" y="1854.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.simpleConcat (1 samples, 0.02%)</title><rect x="792.0" y="1827.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.0" y="1838.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="792.0" y="1811.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.0" y="1822.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterFactory.createFilterChain (4 samples, 0.10%)</title><rect x="792.3" y="1939.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.3" y="1950.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterFactory.matchFiltersServlet (1 samples, 0.02%)</title><rect x="792.8" y="1923.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.8" y="1934.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/descriptor/web/FilterMap.getServletNames (1 samples, 0.02%)</title><rect x="792.8" y="1907.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.8" y="1918.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/descriptor/web/FilterMap.getFilterName (1 samples, 0.02%)</title><rect x="793.1" y="1923.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.1" y="1934.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardWrapper.allocate (1 samples, 0.02%)</title><rect x="793.4" y="1939.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.4" y="1950.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardWrapper.initServlet (1 samples, 0.02%)</title><rect x="793.4" y="1923.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.4" y="1934.0"></text>
</g>
<g>
<title>jakarta/servlet/http/HttpServlet.init (1 samples, 0.02%)</title><rect x="793.4" y="1907.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.4" y="1918.0"></text>
</g>
<g>
<title>jakarta/servlet/GenericServlet.init (1 samples, 0.02%)</title><rect x="793.4" y="1891.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.4" y="1902.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/HttpServletBean.init (1 samples, 0.02%)</title><rect x="793.4" y="1875.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.4" y="1886.0"></text>
</g>
<g>
<title>org/springframework/web/servlet/FrameworkServlet.initServletBean (1 samples, 0.02%)</title><rect x="793.4" y="1859.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.02%)</title><rect x="793.4" y="1843.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.02%)</title><rect x="793.4" y="1827.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.4" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.02%)</title><rect x="793.4" y="1811.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.4" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.02%)</title><rect x="793.4" y="1795.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.4" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.02%)</title><rect x="793.4" y="1779.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.4" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.02%)</title><rect x="793.4" y="1763.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.4" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="793.4" y="1747.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.4" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (1 samples, 0.02%)</title><rect x="793.4" y="1731.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.4" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generateMHInlineCopy (1 samples, 0.02%)</title><rect x="793.4" y="1715.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.4" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.dropArguments (1 samples, 0.02%)</title><rect x="793.4" y="1699.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.4" y="1710.0"></text>
</g>
<g>
<title>org/apache/catalina/realm/RealmBase.findSecurityConstraints (1 samples, 0.02%)</title><rect x="793.7" y="1971.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.7" y="1982.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.isErrorReportRequired (1 samples, 0.02%)</title><rect x="794.0" y="1987.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.0" y="1998.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/Response.getCoyoteResponse (1 samples, 0.02%)</title><rect x="794.0" y="1971.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.0" y="1982.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardContext.bind (5 samples, 0.12%)</title><rect x="794.3" y="1987.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.3" y="1998.0"></text>
</g>
<g>
<title>java/lang/Thread.setContextClassLoader (2 samples, 0.05%)</title><rect x="794.6" y="1971.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.6" y="1982.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.02%)</title><rect x="794.9" y="1955.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="797.9" y="1966.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardContext.getLoader (2 samples, 0.05%)</title><rect x="795.1" y="1971.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.1" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="795.1" y="1955.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.1" y="1966.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="795.1" y="1939.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="798.1" y="1950.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="795.1" y="1923.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="798.1" y="1934.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(bool, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="795.1" y="1907.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="798.1" y="1918.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="795.1" y="1891.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="798.1" y="1902.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="795.1" y="1875.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="798.1" y="1886.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="795.1" y="1859.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="798.1" y="1870.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="795.1" y="1843.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="798.1" y="1854.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="795.1" y="1827.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="798.1" y="1838.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="795.1" y="1811.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="798.1" y="1822.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="795.1" y="1795.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="798.1" y="1806.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="795.1" y="1779.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="798.1" y="1790.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="795.1" y="1763.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="798.1" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.02%)</title><rect x="795.4" y="1955.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.02%)</title><rect x="795.4" y="1939.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.02%)</title><rect x="795.4" y="1923.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.4" y="1934.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardContext.fireRequestDestroyEvent (1 samples, 0.02%)</title><rect x="795.7" y="1987.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.7" y="1998.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardContext.getApplicationEventListeners (1 samples, 0.02%)</title><rect x="795.7" y="1971.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.7" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.toArray (1 samples, 0.02%)</title><rect x="795.7" y="1955.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.7" y="1966.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="795.7" y="1939.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.7" y="1950.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="795.7" y="1923.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="798.7" y="1934.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardContext.fireRequestInitEvent (1 samples, 0.02%)</title><rect x="796.0" y="1987.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.0" y="1998.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardContext.getApplicationEventListeners (1 samples, 0.02%)</title><rect x="796.0" y="1971.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.toArray (1 samples, 0.02%)</title><rect x="796.0" y="1955.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.02%)</title><rect x="796.0" y="1939.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.0" y="1950.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.02%)</title><rect x="796.0" y="1923.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="799.0" y="1934.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.02%)</title><rect x="796.0" y="1907.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="799.0" y="1918.0"></text>
</g>
<g>
<title>org/apache/catalina/core/StandardContext.unbind (2 samples, 0.05%)</title><rect x="796.3" y="1987.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.3" y="1998.0"></text>
</g>
<g>
<title>org/apache/coyote/Request.getNote (1 samples, 0.02%)</title><rect x="796.9" y="2035.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.9" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/Request.setRequestThread (2 samples, 0.05%)</title><rect x="797.1" y="2035.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.1" y="2046.0"></text>
</g>
<g>
<title>java/lang/Thread.currentThread (1 samples, 0.02%)</title><rect x="797.4" y="2019.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.4" y="2030.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="797.4" y="2003.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="800.4" y="2014.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.isAsync (1 samples, 0.02%)</title><rect x="797.7" y="2051.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.7" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/AsyncStateMachine.isAsync (1 samples, 0.02%)</title><rect x="797.7" y="2035.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.7" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/AsyncStateMachine$AsyncState.isAsync (1 samples, 0.02%)</title><rect x="797.7" y="2019.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.7" y="2030.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.setErrorState (2 samples, 0.05%)</title><rect x="798.0" y="2051.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.0" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.setError (1 samples, 0.02%)</title><rect x="798.0" y="2035.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.0" y="2046.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="798.0" y="2019.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="801.0" y="2030.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="798.0" y="2003.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="801.0" y="2014.0"></text>
</g>
<g>
<title>CompilationPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="798.0" y="1987.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="801.0" y="1998.0"></text>
</g>
<g>
<title>CompilationPolicy::call_event(methodHandle const&amp;, CompLevel, Thread*) (1 samples, 0.02%)</title><rect x="798.0" y="1971.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="801.0" y="1982.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;LoopPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="798.0" y="1955.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="801.0" y="1966.0"></text>
</g>
<g>
<title>CompLevel CompilationPolicy::common&lt;LoopPredicate&gt;(methodHandle const&amp;, CompLevel, bool) (1 samples, 0.02%)</title><rect x="798.0" y="1939.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="801.0" y="1950.0"></text>
</g>
<g>
<title>org/apache/juli/logging/DirectJDKLog.isDebugEnabled (1 samples, 0.02%)</title><rect x="798.3" y="2035.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.3" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProtocol.isPaused (2 samples, 0.05%)</title><rect x="798.6" y="2051.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.6" y="2062.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="798.9" y="2035.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.9" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11InputBuffer.nextRequest (7 samples, 0.17%)</title><rect x="799.2" y="2051.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.2" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/Request.recycle (7 samples, 0.17%)</title><rect x="799.2" y="2035.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.2" y="2046.0"></text>
</g>
<g>
<title>java/lang/Long.toHexString (1 samples, 0.02%)</title><rect x="799.4" y="2019.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.4" y="2030.0"></text>
</g>
<g>
<title>java/lang/Long.toUnsignedString0 (1 samples, 0.02%)</title><rect x="799.4" y="2003.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.4" y="2014.0"></text>
</g>
<g>
<title>java/lang/Long.numberOfLeadingZeros (1 samples, 0.02%)</title><rect x="799.4" y="1987.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.4" y="1998.0"></text>
</g>
<g>
<title>java/lang/Integer.numberOfLeadingZeros (1 samples, 0.02%)</title><rect x="799.4" y="1971.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.4" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.set (1 samples, 0.02%)</title><rect x="799.7" y="2019.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.7" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.recycle (1 samples, 0.02%)</title><rect x="800.0" y="2019.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.0" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/MimeHeaders.recycle (3 samples, 0.07%)</title><rect x="800.3" y="2019.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.3" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/MimeHeaderField.recycle (1 samples, 0.02%)</title><rect x="800.9" y="2003.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.9" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.recycle (1 samples, 0.02%)</title><rect x="800.9" y="1987.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.9" y="1998.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11InputBuffer.parseHeaders (5 samples, 0.12%)</title><rect x="801.2" y="2051.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.2" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11InputBuffer.parseHeader (5 samples, 0.12%)</title><rect x="801.2" y="2035.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.2" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11InputBuffer.parseRequestLine (36 samples, 0.87%)</title><rect x="802.6" y="2051.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.6" y="2062.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="804.0" y="2035.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.0" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11InputBuffer.fill (30 samples, 0.73%)</title><rect x="804.3" y="2035.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.3" y="2046.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="804.6" y="2019.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.6" y="2030.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="804.9" y="2003.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.9" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.read (27 samples, 0.66%)</title><rect x="805.2" y="2019.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.2" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.fillReadBuffer (24 samples, 0.58%)</title><rect x="805.2" y="2003.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.2" y="2014.0"></text>
</g>
<g>
<title>java/io/EOFException.&lt;init&gt; (10 samples, 0.24%)</title><rect x="805.2" y="1987.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.2" y="1998.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (10 samples, 0.24%)</title><rect x="805.2" y="1971.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="808.2" y="1982.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (10 samples, 0.24%)</title><rect x="805.2" y="1955.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.2" y="1966.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (10 samples, 0.24%)</title><rect x="805.2" y="1939.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.2" y="1950.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 0.24%)</title><rect x="805.2" y="1923.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.2" y="1934.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 0.24%)</title><rect x="805.2" y="1907.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.2" y="1918.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (10 samples, 0.24%)</title><rect x="805.2" y="1891.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="808.2" y="1902.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (10 samples, 0.24%)</title><rect x="805.2" y="1875.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="808.2" y="1886.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (10 samples, 0.24%)</title><rect x="805.2" y="1859.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="808.2" y="1870.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="805.2" y="1843.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="808.2" y="1854.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (1 samples, 0.02%)</title><rect x="805.5" y="1843.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="808.5" y="1854.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="805.7" y="1843.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="808.7" y="1854.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, JavaThread*) (7 samples, 0.17%)</title><rect x="806.0" y="1843.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="809.0" y="1854.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(JavaThread*) (2 samples, 0.05%)</title><rect x="806.3" y="1827.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="809.3" y="1838.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1335398ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 1335398ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.02%)</title><rect x="806.3" y="1811.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="809.3" y="1822.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, JavaThread*) (1 samples, 0.02%)</title><rect x="806.6" y="1811.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="809.6" y="1822.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jfr_sampler() (1 samples, 0.02%)</title><rect x="806.6" y="1795.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="809.6" y="1806.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="806.9" y="1827.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="809.9" y="1838.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="806.9" y="1811.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="809.9" y="1822.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.07%)</title><rect x="807.2" y="1827.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="810.2" y="1838.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.02%)</title><rect x="807.2" y="1811.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="810.2" y="1822.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="807.2" y="1795.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="810.2" y="1806.0"></text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (2 samples, 0.05%)</title><rect x="807.5" y="1811.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="810.5" y="1822.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="807.8" y="1795.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="810.8" y="1806.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.read (14 samples, 0.34%)</title><rect x="808.0" y="1987.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.0" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (14 samples, 0.34%)</title><rect x="808.0" y="1971.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.0" y="1982.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="808.6" y="1955.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.6" y="1966.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.22%)</title><rect x="808.9" y="1955.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.9" y="1966.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.22%)</title><rect x="808.9" y="1939.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.9" y="1950.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="808.9" y="1923.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.9" y="1934.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="808.9" y="1907.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="811.9" y="1918.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (1 samples, 0.02%)</title><rect x="808.9" y="1891.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.9" y="1902.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (1 samples, 0.02%)</title><rect x="808.9" y="1875.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.9" y="1886.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.15%)</title><rect x="809.2" y="1923.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.2" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (6 samples, 0.15%)</title><rect x="809.2" y="1907.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.2" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read0 (6 samples, 0.15%)</title><rect x="809.2" y="1891.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.2" y="1902.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="809.2" y="1875.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="812.2" y="1886.0"></text>
</g>
<g>
<title>read (5 samples, 0.12%)</title><rect x="809.5" y="1875.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="812.5" y="1886.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="809.8" y="1859.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="812.8" y="1870.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="809.8" y="1843.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="812.8" y="1854.0"></text>
</g>
<g>
<title>__x64_sys_read (4 samples, 0.10%)</title><rect x="809.8" y="1827.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="812.8" y="1838.0"></text>
</g>
<g>
<title>ksys_read (4 samples, 0.10%)</title><rect x="809.8" y="1811.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="812.8" y="1822.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.10%)</title><rect x="809.8" y="1795.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="812.8" y="1806.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.07%)</title><rect x="810.0" y="1779.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.0" y="1790.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.07%)</title><rect x="810.0" y="1763.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="813.0" y="1774.0"></text>
</g>
<g>
<title>sock_read_iter (3 samples, 0.07%)</title><rect x="810.0" y="1747.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="813.0" y="1758.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.07%)</title><rect x="810.0" y="1731.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="813.0" y="1742.0"></text>
</g>
<g>
<title>inet6_recvmsg (3 samples, 0.07%)</title><rect x="810.0" y="1715.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.0" y="1726.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.07%)</title><rect x="810.0" y="1699.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="813.0" y="1710.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.05%)</title><rect x="810.0" y="1683.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="813.0" y="1694.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.05%)</title><rect x="810.0" y="1667.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="813.0" y="1678.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.05%)</title><rect x="810.0" y="1651.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="813.0" y="1662.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="810.0" y="1635.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="813.0" y="1646.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="810.0" y="1619.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="813.0" y="1630.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="810.3" y="1635.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.3" y="1646.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="810.3" y="1619.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="813.3" y="1630.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="810.6" y="1683.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.6" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="810.9" y="1923.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.9" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="810.9" y="1907.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.9" y="1918.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.02%)</title><rect x="810.9" y="1891.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.9" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="811.2" y="1923.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.2" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="811.2" y="1907.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.2" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="811.2" y="1891.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="814.2" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (1 samples, 0.02%)</title><rect x="811.5" y="1955.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.5" y="1966.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureOpenAndConnected (1 samples, 0.02%)</title><rect x="811.8" y="1955.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.8" y="1966.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.updateLastRead (1 samples, 0.02%)</title><rect x="812.1" y="2003.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.1" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.populateReadBuffer (2 samples, 0.05%)</title><rect x="812.3" y="2003.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.3" y="2014.0"></text>
</g>
<g>
<title>org/apache/juli/logging/DirectJDKLog.isTraceEnabled (1 samples, 0.02%)</title><rect x="812.3" y="1987.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.3" y="1998.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.transfer (1 samples, 0.02%)</title><rect x="812.6" y="1987.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.6" y="1998.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="812.6" y="1971.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.6" y="1982.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.nextRequest (2 samples, 0.05%)</title><rect x="812.9" y="2051.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.9" y="2062.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="812.9" y="2035.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.9" y="2046.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="812.9" y="2019.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.9" y="2030.0"></text>
</g>
<g>
<title>org/apache/coyote/Response.recycle (1 samples, 0.02%)</title><rect x="813.2" y="2035.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.2" y="2046.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/MimeHeaders.recycle (1 samples, 0.02%)</title><rect x="813.2" y="2019.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.2" y="2030.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.endRequest (2 samples, 0.05%)</title><rect x="813.5" y="2051.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.5" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.isConnectionToken (8 samples, 0.19%)</title><rect x="814.1" y="2051.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.1" y="2062.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/MimeHeaders.values (1 samples, 0.02%)</title><rect x="814.3" y="2035.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.3" y="2046.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/ValuesEnumerator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="814.3" y="2019.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.3" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/ValuesEnumerator.findNext (1 samples, 0.02%)</title><rect x="814.3" y="2003.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.3" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="814.3" y="1987.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.3" y="1998.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="814.3" y="1971.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.3" y="1982.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/Ascii.toLower (1 samples, 0.02%)</title><rect x="814.3" y="1955.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.3" y="1966.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/TokenList.parseTokenList (6 samples, 0.15%)</title><rect x="814.6" y="2035.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.6" y="2046.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/ValuesEnumerator.nextElement (2 samples, 0.05%)</title><rect x="814.6" y="2019.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.6" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/ValuesEnumerator.nextElement (2 samples, 0.05%)</title><rect x="814.6" y="2003.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.6" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.toStringType (1 samples, 0.02%)</title><rect x="814.6" y="1987.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.6" y="1998.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toString (1 samples, 0.02%)</title><rect x="814.6" y="1971.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.6" y="1982.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toString (1 samples, 0.02%)</title><rect x="814.6" y="1955.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.6" y="1966.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/StringCache.toString (1 samples, 0.02%)</title><rect x="814.6" y="1939.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.6" y="1950.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.toStringInternal (1 samples, 0.02%)</title><rect x="814.6" y="1923.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.6" y="1934.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (1 samples, 0.02%)</title><rect x="814.6" y="1907.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.6" y="1918.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (1 samples, 0.02%)</title><rect x="814.6" y="1891.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.6" y="1902.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (1 samples, 0.02%)</title><rect x="814.6" y="1875.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.6" y="1886.0"></text>
</g>
<g>
<title>java/nio/charset/CoderResult.isOverflow (1 samples, 0.02%)</title><rect x="814.6" y="1859.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.6" y="1870.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="814.6" y="1843.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="817.6" y="1854.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/ValuesEnumerator.findNext (1 samples, 0.02%)</title><rect x="814.9" y="1987.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.9" y="1998.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="814.9" y="1971.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.9" y="1982.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="814.9" y="1955.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.9" y="1966.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/TokenList.parseTokenList (4 samples, 0.10%)</title><rect x="815.2" y="2019.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.2" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="815.2" y="2003.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.2" y="2014.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="815.2" y="1987.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.2" y="1998.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="815.5" y="2003.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.5" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="815.5" y="1987.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.5" y="1998.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="815.5" y="1971.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.5" y="1982.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.02%)</title><rect x="815.5" y="1955.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.5" y="1966.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.linkNodeLast (1 samples, 0.02%)</title><rect x="815.5" y="1939.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.5" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="815.5" y="1923.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.5" y="1934.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/HttpParser.readToken (2 samples, 0.05%)</title><rect x="815.8" y="2003.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.8" y="2014.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="815.8" y="1987.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.8" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="815.8" y="1971.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.8" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="815.8" y="1955.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.8" y="1966.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="815.8" y="1939.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="818.8" y="1950.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/HttpParser.skipLws (1 samples, 0.02%)</title><rect x="816.1" y="1987.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.1" y="1998.0"></text>
</g>
<g>
<title>java/io/StringReader.reset (1 samples, 0.02%)</title><rect x="816.1" y="1971.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.1" y="1982.0"></text>
</g>
<g>
<title>java/io/StringReader.ensureOpen (1 samples, 0.02%)</title><rect x="816.1" y="1955.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.1" y="1966.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.prepareRequest (12 samples, 0.29%)</title><rect x="816.4" y="2051.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.4" y="2062.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.02%)</title><rect x="816.6" y="2035.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.6" y="2046.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.02%)</title><rect x="816.6" y="2019.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.6" y="2030.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="816.6" y="2003.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.6" y="2014.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.getErrorState (1 samples, 0.02%)</title><rect x="816.9" y="2035.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.9" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.parseHost (7 samples, 0.17%)</title><rect x="817.2" y="2035.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.2" y="2046.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.getLength (1 samples, 0.02%)</title><rect x="817.2" y="2019.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="820.2" y="2030.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="817.2" y="2003.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.2" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/Host.parse (6 samples, 0.15%)</title><rect x="817.5" y="2019.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.5" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/Host.parse (5 samples, 0.12%)</title><rect x="817.8" y="2003.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.8" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/HttpParser.readHostDomainName (5 samples, 0.12%)</title><rect x="817.8" y="1987.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.8" y="1998.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/HttpParser.validatePort (5 samples, 0.12%)</title><rect x="817.8" y="1971.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="820.8" y="1982.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/HttpParser.readLong (5 samples, 0.12%)</title><rect x="817.8" y="1955.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.8" y="1966.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.05%)</title><rect x="818.1" y="1939.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.05%)</title><rect x="818.1" y="1923.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.1" y="1934.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/HttpParser.readDigits (2 samples, 0.05%)</title><rect x="818.7" y="1939.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.7" y="1950.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.prepareInputFilters (2 samples, 0.05%)</title><rect x="819.2" y="2035.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.2" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/Request.getContentLengthLong (1 samples, 0.02%)</title><rect x="819.2" y="2019.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.2" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/MimeHeaders.getValue (1 samples, 0.02%)</title><rect x="819.5" y="2019.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.5" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="819.5" y="2003.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.5" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="819.5" y="1987.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.5" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="819.5" y="1971.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.5" y="1982.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.prepareRequestProtocol (1 samples, 0.02%)</title><rect x="819.8" y="2051.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.8" y="2062.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.equals (1 samples, 0.02%)</title><rect x="819.8" y="2035.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.8" y="2046.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/ByteChunk.equals (1 samples, 0.02%)</title><rect x="819.8" y="2019.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.8" y="2030.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.setSocketWrapper (2 samples, 0.05%)</title><rect x="820.1" y="2051.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.1" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11InputBuffer.init (2 samples, 0.05%)</title><rect x="820.1" y="2035.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.1" y="2046.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="820.1" y="2019.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.1" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.setAppReadBufHandler (1 samples, 0.02%)</title><rect x="820.4" y="2019.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.4" y="2030.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProtocol$ConnectionHandler.register (1 samples, 0.02%)</title><rect x="820.7" y="2083.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.7" y="2094.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.02%)</title><rect x="820.7" y="2067.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.7" y="2078.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.02%)</title><rect x="820.7" y="2051.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.7" y="2062.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.02%)</title><rect x="820.7" y="2035.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.7" y="2046.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.02%)</title><rect x="820.7" y="2019.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.7" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.02%)</title><rect x="820.7" y="2003.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.7" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.02%)</title><rect x="820.7" y="1987.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.7" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="820.7" y="1971.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.7" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (1 samples, 0.02%)</title><rect x="820.7" y="1955.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.7" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generateMHInlineCopy (1 samples, 0.02%)</title><rect x="820.7" y="1939.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.7" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArgumentsWithCombiner (1 samples, 0.02%)</title><rect x="820.7" y="1923.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.argumentsWithCombiner (1 samples, 0.02%)</title><rect x="820.7" y="1907.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.7" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.copyWithExtendL (1 samples, 0.02%)</title><rect x="820.7" y="1891.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.7" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="820.7" y="1875.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.7" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLL.make (1 samples, 0.02%)</title><rect x="820.7" y="1859.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.7" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLL.&lt;init&gt; (1 samples, 0.02%)</title><rect x="820.7" y="1843.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.7" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.02%)</title><rect x="820.7" y="1827.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.7" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.02%)</title><rect x="820.7" y="1811.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.7" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.02%)</title><rect x="820.7" y="1795.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.7" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.02%)</title><rect x="820.7" y="1779.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.7" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.02%)</title><rect x="820.7" y="1763.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.7" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.02%)</title><rect x="820.7" y="1747.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (1 samples, 0.02%)</title><rect x="820.7" y="1731.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.7" y="1742.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProtocol$ConnectionHandler.release (8 samples, 0.19%)</title><rect x="820.9" y="2083.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.9" y="2094.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProtocol$RecycledProcessors.push (2 samples, 0.05%)</title><rect x="820.9" y="2067.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.9" y="2078.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="821.2" y="2051.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.2" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.recycle (6 samples, 0.15%)</title><rect x="821.5" y="2067.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.5" y="2078.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.recycle (1 samples, 0.02%)</title><rect x="821.5" y="2051.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.5" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/AsyncStateMachine.recycle (1 samples, 0.02%)</title><rect x="821.5" y="2035.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.5" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11InputBuffer.recycle (3 samples, 0.07%)</title><rect x="821.8" y="2051.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.8" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/Request.recycle (2 samples, 0.05%)</title><rect x="822.1" y="2035.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.1" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.set (1 samples, 0.02%)</title><rect x="822.1" y="2019.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.1" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.recycle (1 samples, 0.02%)</title><rect x="822.4" y="2019.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.4" y="2030.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.recycle (2 samples, 0.05%)</title><rect x="822.7" y="2051.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.7" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.nextRequest (2 samples, 0.05%)</title><rect x="822.7" y="2035.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.7" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProtocol$RecycledProcessors.pop (1 samples, 0.02%)</title><rect x="823.2" y="2083.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.2" y="2094.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/AbstractHttp11Protocol.createProcessor (3 samples, 0.07%)</title><rect x="823.5" y="2083.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.5" y="2094.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.&lt;init&gt; (3 samples, 0.07%)</title><rect x="823.5" y="2067.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.5" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="823.5" y="2051.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="826.5" y="2062.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="823.5" y="2035.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="826.5" y="2046.0"></text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessor.&lt;init&gt; (1 samples, 0.02%)</title><rect x="823.8" y="2051.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.8" y="2062.0"></text>
</g>
<g>
<title>org/apache/coyote/Request.&lt;init&gt; (1 samples, 0.02%)</title><rect x="823.8" y="2035.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.8" y="2046.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.newInstance (1 samples, 0.02%)</title><rect x="823.8" y="2019.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.8" y="2030.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes$MessageBytesFactory.newInstance (1 samples, 0.02%)</title><rect x="823.8" y="2003.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.8" y="2014.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/buf/MessageBytes.&lt;init&gt; (1 samples, 0.02%)</title><rect x="823.8" y="1987.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.8" y="1998.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.02%)</title><rect x="823.8" y="1971.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="826.8" y="1982.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="823.8" y="1955.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="826.8" y="1966.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(JavaThread*) (1 samples, 0.02%)</title><rect x="823.8" y="1939.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="826.8" y="1950.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, JavaThread*) (1 samples, 0.02%)</title><rect x="823.8" y="1923.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="826.8" y="1934.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, JavaThread*) (1 samples, 0.02%)</title><rect x="823.8" y="1907.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="826.8" y="1918.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(JavaThread*) (1 samples, 0.02%)</title><rect x="823.8" y="1891.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="826.8" y="1902.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Thread*, Method*, bool, bool*) (1 samples, 0.02%)</title><rect x="823.8" y="1875.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="826.8" y="1886.0"></text>
</g>
<g>
<title>org/apache/coyote/http11/Http11OutputBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="824.1" y="2051.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.1" y="2062.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.02%)</title><rect x="824.1" y="2035.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="827.1" y="2046.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/launch/LaunchedClassLoader.loadClass (1 samples, 0.02%)</title><rect x="824.1" y="2019.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.1" y="2030.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/JarUrlClassLoader.loadClass (1 samples, 0.02%)</title><rect x="824.1" y="2003.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.1" y="2014.0"></text>
</g>
<g>
<title>org/springframework/boot/loader/net/protocol/jar/Optimizations.enable (1 samples, 0.02%)</title><rect x="824.1" y="1987.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.1" y="1998.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.registerReadInterest (2 samples, 0.05%)</title><rect x="824.4" y="2083.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.4" y="2094.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.add (2 samples, 0.05%)</title><rect x="824.4" y="2067.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.4" y="2078.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.addEvent (2 samples, 0.05%)</title><rect x="824.4" y="2051.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.4" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.05%)</title><rect x="824.4" y="2035.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.4" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/EventFD.set (2 samples, 0.05%)</title><rect x="824.4" y="2019.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.4" y="2030.0"></text>
</g>
<g>
<title>sun/nio/ch/EventFD.set0 (2 samples, 0.05%)</title><rect x="824.4" y="2003.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.4" y="2014.0"></text>
</g>
<g>
<title>__write (2 samples, 0.05%)</title><rect x="824.4" y="1987.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="827.4" y="1998.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="824.4" y="1971.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="827.4" y="1982.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="824.4" y="1955.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="827.4" y="1966.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.05%)</title><rect x="824.4" y="1939.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="827.4" y="1950.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.05%)</title><rect x="824.4" y="1923.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="827.4" y="1934.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.05%)</title><rect x="824.4" y="1907.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="827.4" y="1918.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.05%)</title><rect x="824.4" y="1891.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="827.4" y="1902.0"></text>
</g>
<g>
<title>eventfd_write (2 samples, 0.05%)</title><rect x="824.4" y="1875.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="827.4" y="1886.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketWrapperBase.close (34 samples, 0.83%)</title><rect x="825.0" y="2099.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.0" y="2110.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="825.0" y="2083.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.0" y="2094.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/AbstractEndpoint.countDownConnection (3 samples, 0.07%)</title><rect x="825.2" y="2083.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.2" y="2094.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/LimitLatch.countDown (2 samples, 0.05%)</title><rect x="825.5" y="2067.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.5" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.02%)</title><rect x="825.8" y="2051.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.8" y="2062.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/LimitLatch$Sync.tryReleaseShared (1 samples, 0.02%)</title><rect x="825.8" y="2035.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.8" y="2046.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.doClose (30 samples, 0.73%)</title><rect x="826.1" y="2083.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.1" y="2094.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="826.1" y="2067.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.1" y="2078.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.close (28 samples, 0.68%)</title><rect x="826.4" y="2067.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.4" y="2078.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.close (28 samples, 0.68%)</title><rect x="826.4" y="2051.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.4" y="2062.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (28 samples, 0.68%)</title><rect x="826.4" y="2035.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.4" y="2046.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (27 samples, 0.66%)</title><rect x="826.7" y="2019.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.7" y="2030.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.05%)</title><rect x="826.7" y="2003.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.7" y="2014.0"></text>
</g>
<g>
<title>JVM_Clone (2 samples, 0.05%)</title><rect x="826.7" y="1987.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="829.7" y="1998.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="826.7" y="1971.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="829.7" y="1982.0"></text>
</g>
<g>
<title>acl_CopyRight (1 samples, 0.02%)</title><rect x="827.0" y="1971.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="830.0" y="1982.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.cancel (3 samples, 0.07%)</title><rect x="827.3" y="2003.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.3" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.05%)</title><rect x="827.3" y="1987.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.3" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleBooleans$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="827.5" y="1971.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.5" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.compareAndSetBoolean (1 samples, 0.02%)</title><rect x="827.5" y="1955.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.compareAndSetByte (1 samples, 0.02%)</title><rect x="827.5" y="1939.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.compareAndExchangeByte (1 samples, 0.02%)</title><rect x="827.5" y="1923.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.5" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.selector (1 samples, 0.02%)</title><rect x="827.8" y="1987.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.8" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (22 samples, 0.53%)</title><rect x="828.1" y="2003.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.1" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseNonBlockingMode (22 samples, 0.53%)</title><rect x="828.1" y="1987.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.1" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (3 samples, 0.07%)</title><rect x="828.4" y="1971.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.4" y="1982.0"></text>
</g>
<g>
<title>sun/net/ext/ExtendedSocketOptions.isOptionSupported (1 samples, 0.02%)</title><rect x="829.0" y="1955.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.0" y="1966.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (18 samples, 0.44%)</title><rect x="829.3" y="1971.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.3" y="1982.0"></text>
</g>
<g>
<title>__GI___shutdown (18 samples, 0.44%)</title><rect x="829.3" y="1955.0" width="5.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="832.3" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.44%)</title><rect x="829.3" y="1939.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="832.3" y="1950.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.44%)</title><rect x="829.3" y="1923.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="832.3" y="1934.0"></text>
</g>
<g>
<title>__x64_sys_shutdown (18 samples, 0.44%)</title><rect x="829.3" y="1907.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="832.3" y="1918.0"></text>
</g>
<g>
<title>__sys_shutdown (18 samples, 0.44%)</title><rect x="829.3" y="1891.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="832.3" y="1902.0"></text>
</g>
<g>
<title>inet_shutdown (18 samples, 0.44%)</title><rect x="829.3" y="1875.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="832.3" y="1886.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="829.3" y="1859.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="832.3" y="1870.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.02%)</title><rect x="829.3" y="1843.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="832.3" y="1854.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="829.3" y="1827.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.3" y="1838.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="829.3" y="1811.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="832.3" y="1822.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="829.3" y="1795.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="832.3" y="1806.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="829.3" y="1779.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="832.3" y="1790.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="829.3" y="1763.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="832.3" y="1774.0"></text>
</g>
<g>
<title>tcp_shutdown (17 samples, 0.41%)</title><rect x="829.5" y="1859.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="832.5" y="1870.0"></text>
</g>
<g>
<title>tcp_send_fin (17 samples, 0.41%)</title><rect x="829.5" y="1843.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.5" y="1854.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (16 samples, 0.39%)</title><rect x="829.8" y="1827.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="832.8" y="1838.0"></text>
</g>
<g>
<title>tcp_write_xmit (16 samples, 0.39%)</title><rect x="829.8" y="1811.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="832.8" y="1822.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (16 samples, 0.39%)</title><rect x="829.8" y="1795.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="832.8" y="1806.0"></text>
</g>
<g>
<title>ip_queue_xmit (15 samples, 0.36%)</title><rect x="830.1" y="1779.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="833.1" y="1790.0"></text>
</g>
<g>
<title>__ip_queue_xmit (15 samples, 0.36%)</title><rect x="830.1" y="1763.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="833.1" y="1774.0"></text>
</g>
<g>
<title>ip_local_out (15 samples, 0.36%)</title><rect x="830.1" y="1747.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="833.1" y="1758.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="830.1" y="1731.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="833.1" y="1742.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="830.1" y="1715.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="833.1" y="1726.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.02%)</title><rect x="830.1" y="1699.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="833.1" y="1710.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.02%)</title><rect x="830.1" y="1683.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="833.1" y="1694.0"></text>
</g>
<g>
<title>ip_output (14 samples, 0.34%)</title><rect x="830.4" y="1731.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="833.4" y="1742.0"></text>
</g>
<g>
<title>ip_finish_output (14 samples, 0.34%)</title><rect x="830.4" y="1715.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="833.4" y="1726.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="830.4" y="1699.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="833.4" y="1710.0"></text>
</g>
<g>
<title>__ip_finish_output (13 samples, 0.32%)</title><rect x="830.7" y="1699.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="833.7" y="1710.0"></text>
</g>
<g>
<title>ip_finish_output2 (13 samples, 0.32%)</title><rect x="830.7" y="1683.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="833.7" y="1694.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (11 samples, 0.27%)</title><rect x="830.7" y="1667.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="833.7" y="1678.0"></text>
</g>
<g>
<title>do_softirq.part.0 (11 samples, 0.27%)</title><rect x="830.7" y="1651.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="833.7" y="1662.0"></text>
</g>
<g>
<title>do_softirq_own_stack (11 samples, 0.27%)</title><rect x="830.7" y="1635.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="833.7" y="1646.0"></text>
</g>
<g>
<title>__softirqentry_text_start (11 samples, 0.27%)</title><rect x="830.7" y="1619.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="833.7" y="1630.0"></text>
</g>
<g>
<title>net_rx_action (11 samples, 0.27%)</title><rect x="830.7" y="1603.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="833.7" y="1614.0"></text>
</g>
<g>
<title>process_backlog (11 samples, 0.27%)</title><rect x="830.7" y="1587.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="833.7" y="1598.0"></text>
</g>
<g>
<title>__netif_receive_skb (11 samples, 0.27%)</title><rect x="830.7" y="1571.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="833.7" y="1582.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 0.27%)</title><rect x="830.7" y="1555.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="833.7" y="1566.0"></text>
</g>
<g>
<title>ip_rcv (11 samples, 0.27%)</title><rect x="830.7" y="1539.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="833.7" y="1550.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="830.7" y="1523.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="833.7" y="1534.0"></text>
</g>
<g>
<title>ip_rcv_finish (9 samples, 0.22%)</title><rect x="831.0" y="1523.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="834.0" y="1534.0"></text>
</g>
<g>
<title>ip_local_deliver (9 samples, 0.22%)</title><rect x="831.0" y="1507.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="834.0" y="1518.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 0.19%)</title><rect x="831.0" y="1491.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="834.0" y="1502.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (8 samples, 0.19%)</title><rect x="831.0" y="1475.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="834.0" y="1486.0"></text>
</g>
<g>
<title>tcp_v4_rcv (8 samples, 0.19%)</title><rect x="831.0" y="1459.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="834.0" y="1470.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="831.0" y="1443.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="834.0" y="1454.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="831.0" y="1427.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="834.0" y="1438.0"></text>
</g>
<g>
<title>__sk_free (1 samples, 0.02%)</title><rect x="831.0" y="1411.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.0" y="1422.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.17%)</title><rect x="831.3" y="1443.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="834.3" y="1454.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (7 samples, 0.17%)</title><rect x="831.3" y="1427.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="834.3" y="1438.0"></text>
</g>
<g>
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="831.6" y="1411.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="834.6" y="1422.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="831.6" y="1395.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="834.6" y="1406.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="831.6" y="1379.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="834.6" y="1390.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="831.6" y="1363.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="834.6" y="1374.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.07%)</title><rect x="831.8" y="1411.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="834.8" y="1422.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.05%)</title><rect x="832.1" y="1395.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="835.1" y="1406.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="832.1" y="1379.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.1" y="1390.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="832.1" y="1363.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="835.1" y="1374.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="832.1" y="1347.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="835.1" y="1358.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="832.1" y="1331.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.1" y="1342.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="832.1" y="1315.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="835.1" y="1326.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="832.4" y="1379.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="835.4" y="1390.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.05%)</title><rect x="832.7" y="1411.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="835.7" y="1422.0"></text>
</g>
<g>
<title>tcp_fin (1 samples, 0.02%)</title><rect x="833.0" y="1395.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="836.0" y="1406.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="833.0" y="1379.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="836.0" y="1390.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.02%)</title><rect x="833.0" y="1363.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="836.0" y="1374.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="833.0" y="1347.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="836.0" y="1358.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="833.0" y="1331.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="836.0" y="1342.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="833.0" y="1315.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="836.0" y="1326.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.02%)</title><rect x="833.0" y="1299.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="836.0" y="1310.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="833.0" y="1283.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="836.0" y="1294.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="833.0" y="1267.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="836.0" y="1278.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.02%)</title><rect x="833.0" y="1251.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="836.0" y="1262.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.02%)</title><rect x="833.0" y="1235.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="836.0" y="1246.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="833.3" y="1491.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="836.3" y="1502.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_in?[nf_nat] (1 samples, 0.02%)</title><rect x="833.3" y="1475.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="836.3" y="1486.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="833.6" y="1523.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="836.6" y="1534.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.05%)</title><rect x="833.8" y="1667.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="836.8" y="1678.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.05%)</title><rect x="833.8" y="1651.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="836.8" y="1662.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="833.8" y="1635.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="836.8" y="1646.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="833.8" y="1619.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="836.8" y="1630.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="833.8" y="1603.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="836.8" y="1614.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.02%)</title><rect x="834.1" y="1635.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="837.1" y="1646.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioChannel.free (1 samples, 0.02%)</title><rect x="834.4" y="2067.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.4" y="2078.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor$Worker.lock (2 samples, 0.05%)</title><rect x="834.7" y="2131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.7" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="834.7" y="2115.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.7" y="2126.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.02%)</title><rect x="835.0" y="2099.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.0" y="2110.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor$Worker.unlock (1 samples, 0.02%)</title><rect x="835.3" y="2131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.3" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="835.3" y="2115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.3" y="2126.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.02%)</title><rect x="835.3" y="2099.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.3" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="835.3" y="2083.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.3" y="2094.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor.afterExecute (2 samples, 0.05%)</title><rect x="835.6" y="2131.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.6" y="2142.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor.stopCurrentThreadIfNeeded (2 samples, 0.05%)</title><rect x="835.6" y="2115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.6" y="2126.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor.currentThreadShouldBeStopped (2 samples, 0.05%)</title><rect x="835.6" y="2099.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="838.6" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.longValue (2 samples, 0.05%)</title><rect x="835.6" y="2083.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.6" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.02%)</title><rect x="835.9" y="2067.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.9" y="2078.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/ThreadPoolExecutor.getTask (24 samples, 0.58%)</title><rect x="836.1" y="2131.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.1" y="2142.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/TaskQueue.poll (23 samples, 0.56%)</title><rect x="836.4" y="2115.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.4" y="2126.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/TaskQueue.poll (23 samples, 0.56%)</title><rect x="836.4" y="2099.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.4" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.poll (22 samples, 0.53%)</title><rect x="836.7" y="2083.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.7" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (1 samples, 0.02%)</title><rect x="836.7" y="2067.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.7" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (17 samples, 0.41%)</title><rect x="837.0" y="2067.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="840.0" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.enableWait (1 samples, 0.02%)</title><rect x="837.3" y="2051.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.3" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="837.3" y="2035.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.3" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="837.6" y="2051.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.6" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="837.9" y="2035.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.9" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (13 samples, 0.32%)</title><rect x="838.2" y="2051.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.2" y="2062.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="838.2" y="2035.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.29%)</title><rect x="838.4" y="2035.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.4" y="2046.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="838.4" y="2019.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="841.4" y="2030.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="838.4" y="2003.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="841.4" y="2014.0"></text>
</g>
<g>
<title>HandshakeState::has_a_non_suspend_operation() (1 samples, 0.02%)</title><rect x="838.4" y="1987.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="841.4" y="1998.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="838.4" y="1971.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="841.4" y="1982.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="838.7" y="2003.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="841.7" y="2014.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="838.7" y="1987.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="841.7" y="1998.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="838.7" y="1971.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="841.7" y="1982.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.24%)</title><rect x="839.0" y="2019.0" width="2.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="842.0" y="2030.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (10 samples, 0.24%)</title><rect x="839.0" y="2003.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="842.0" y="2014.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.22%)</title><rect x="839.0" y="1987.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.0" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="839.0" y="1971.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="842.0" y="1982.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.19%)</title><rect x="839.3" y="1971.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="842.3" y="1982.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.19%)</title><rect x="839.3" y="1955.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.3" y="1966.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.19%)</title><rect x="839.3" y="1939.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="842.3" y="1950.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.19%)</title><rect x="839.3" y="1923.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="842.3" y="1934.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.07%)</title><rect x="839.9" y="1907.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="842.9" y="1918.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="840.2" y="1891.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="843.2" y="1902.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="840.2" y="1875.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="843.2" y="1886.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="840.2" y="1859.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="843.2" y="1870.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="840.7" y="1907.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="843.7" y="1918.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="840.7" y="1891.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="843.7" y="1902.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.05%)</title><rect x="841.0" y="1907.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="844.0" y="1918.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.05%)</title><rect x="841.0" y="1891.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="844.0" y="1902.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="841.0" y="1875.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="844.0" y="1886.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="841.6" y="1987.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="844.6" y="1998.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="841.6" y="1971.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="844.6" y="1982.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="841.6" y="1955.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="844.6" y="1966.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="841.6" y="1939.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="844.6" y="1950.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="841.6" y="1923.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="844.6" y="1934.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="841.6" y="1907.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="844.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="841.9" y="2067.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.9" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="841.9" y="2051.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.9" y="2062.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="841.9" y="2035.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.9" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="842.2" y="2067.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.2" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.lockInterruptibly (1 samples, 0.02%)</title><rect x="842.2" y="2051.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.2" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.initialTryLock (1 samples, 0.02%)</title><rect x="842.2" y="2035.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.2" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="842.2" y="2019.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.2" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="842.5" y="2067.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.5" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="842.5" y="2051.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.5" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (2 samples, 0.05%)</title><rect x="842.5" y="2035.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.5" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="842.7" y="2019.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.7" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="842.7" y="2003.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.7" y="2014.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="842.7" y="1987.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="845.7" y="1998.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (1 samples, 0.02%)</title><rect x="843.0" y="2195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.0" y="2206.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.processPendingReferences (1 samples, 0.02%)</title><rect x="843.0" y="2179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.0" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/ref/Cleaner.clean (1 samples, 0.02%)</title><rect x="843.0" y="2163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.0" y="2174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer$Deallocator.run (1 samples, 0.02%)</title><rect x="843.0" y="2147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.0" y="2158.0"></text>
</g>
<g>
<title>java/util/BitSet.clone (1 samples, 0.02%)</title><rect x="843.3" y="2195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.3" y="2206.0"></text>
</g>
<g>
<title>org/h2/mvstore/tx/CommitDecisionMaker.selectValue (1 samples, 0.02%)</title><rect x="843.3" y="2179.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.3" y="2190.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="843.3" y="2163.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="846.3" y="2174.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="843.3" y="2147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="846.3" y="2158.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="843.3" y="2131.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="846.3" y="2142.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="843.3" y="2115.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="846.3" y="2126.0"></text>
</g>
<g>
<title>tasklet_hi_action (1 samples, 0.02%)</title><rect x="843.3" y="2099.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="846.3" y="2110.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="843.3" y="2083.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="846.3" y="2094.0"></text>
</g>
<g>
<title>execlists_submission_tasklet?[i915] (1 samples, 0.02%)</title><rect x="843.3" y="2067.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="846.3" y="2078.0"></text>
</g>
<g>
<title>process_csb?[i915] (1 samples, 0.02%)</title><rect x="843.3" y="2051.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="846.3" y="2062.0"></text>
</g>
<g>
<title>intel_engine_add_retire?[i915] (1 samples, 0.02%)</title><rect x="843.3" y="2035.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="846.3" y="2046.0"></text>
</g>
<g>
<title>queue_work_on (1 samples, 0.02%)</title><rect x="843.3" y="2019.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="846.3" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/misc/InnocuousThread.run (1 samples, 0.02%)</title><rect x="843.6" y="2195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.6" y="2206.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="843.6" y="2179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.6" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl.run (1 samples, 0.02%)</title><rect x="843.6" y="2163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.6" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.02%)</title><rect x="843.9" y="2195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.9" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor40.newInstance (1 samples, 0.02%)</title><rect x="843.9" y="2179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.9" y="2190.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (1 samples, 0.02%)</title><rect x="843.9" y="2163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.9" y="2174.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.II (1 samples, 0.02%)</title><rect x="843.9" y="2147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.9" y="2158.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.05%)</title><rect x="844.2" y="2195.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="847.2" y="2206.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/http/parser/HttpParser.skipConstant (1 samples, 0.02%)</title><rect x="844.7" y="2195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.7" y="2206.0"></text>
</g>
<g>
<title>org/springframework/data/jpa/repository/query/AbstractJpaQuery.obtainParameterAccessor (1 samples, 0.02%)</title><rect x="844.7" y="2179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.7" y="2190.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.02%)</title><rect x="844.7" y="2163.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="847.7" y="2174.0"></text>
</g>
<g>
<title>org/h2/command/Prepared.setCurrentRowNumber (1 samples, 0.02%)</title><rect x="845.0" y="2195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.0" y="2206.0"></text>
</g>
<g>
<title>org/h2/command/query/Select.isConditionMet (1 samples, 0.02%)</title><rect x="845.0" y="2179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.0" y="2190.0"></text>
</g>
<g>
<title>org/h2/expression/Expression.getBooleanValue (1 samples, 0.02%)</title><rect x="845.0" y="2163.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.0" y="2174.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.02%)</title><rect x="845.0" y="2147.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="848.0" y="2158.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/TypecheckUtil.assertComparable (1 samples, 0.02%)</title><rect x="845.3" y="2195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.3" y="2206.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/internal/TypecheckUtil.areTypesComparable (1 samples, 0.02%)</title><rect x="845.3" y="2179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.3" y="2190.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.02%)</title><rect x="845.3" y="2163.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="848.3" y="2174.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.consumeSqmParameter (1 samples, 0.02%)</title><rect x="845.6" y="2195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.6" y="2206.0"></text>
</g>
<g>
<title>org/hibernate/query/internal/QueryParameterBindingImpl.setType (1 samples, 0.02%)</title><rect x="845.6" y="2179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.6" y="2190.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.02%)</title><rect x="845.6" y="2163.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="848.6" y="2174.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.prepareReusablePath (1 samples, 0.02%)</title><rect x="845.9" y="2195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.9" y="2206.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/sql/BaseSqmToSqlAstConverter.getActualTableGroup (1 samples, 0.02%)</title><rect x="845.9" y="2179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.9" y="2190.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.02%)</title><rect x="845.9" y="2163.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="848.9" y="2174.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/SqmBasicValuedSimplePath.&lt;init&gt; (1 samples, 0.02%)</title><rect x="846.2" y="2195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.2" y="2206.0"></text>
</g>
<g>
<title>org/hibernate/query/sqm/tree/domain/AbstractSqmSimplePath.&lt;init&gt; (1 samples, 0.02%)</title><rect x="846.2" y="2179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.2" y="2190.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/BasicSqmPathSource.getSqmType (1 samples, 0.02%)</title><rect x="846.2" y="2163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.2" y="2174.0"></text>
</g>
<g>
<title>org/hibernate/metamodel/model/domain/internal/BasicSqmPathSource.getSqmPathType (1 samples, 0.02%)</title><rect x="846.2" y="2147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.2" y="2158.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.02%)</title><rect x="846.2" y="2131.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="849.2" y="2142.0"></text>
</g>
<g>
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (4 samples, 0.10%)</title><rect x="846.5" y="2195.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="849.5" y="2206.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="846.8" y="2179.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="849.8" y="2190.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="846.8" y="2163.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="849.8" y="2174.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="846.8" y="2147.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.8" y="2158.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="846.8" y="2131.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="849.8" y="2142.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="846.8" y="2115.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="849.8" y="2126.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.07%)</title><rect x="846.8" y="2099.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="849.8" y="2110.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.07%)</title><rect x="846.8" y="2083.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="849.8" y="2094.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.07%)</title><rect x="846.8" y="2067.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.8" y="2078.0"></text>
</g>
<g>
<title>start_thread (1,194 samples, 29.02%)</title><rect x="847.6" y="2195.0" width="342.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="850.6" y="2206.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1,194 samples, 29.02%)</title><rect x="847.6" y="2179.0" width="342.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="850.6" y="2190.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (1,194 samples, 29.02%)</title><rect x="847.6" y="2163.0" width="342.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="850.6" y="2174.0">Thread::call_run()</text>
</g>
<g>
<title>/usr/lib/jvm/java-17-openjdk-amd64/lib/server/libjvm.so (29 samples, 0.70%)</title><rect x="847.6" y="2147.0" width="8.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="850.6" y="2158.0"></text>
</g>
<g>
<title>GangWorker::loop() (29 samples, 0.70%)</title><rect x="847.6" y="2131.0" width="8.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="850.6" y="2142.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (28 samples, 0.68%)</title><rect x="847.6" y="2115.0" width="8.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="850.6" y="2126.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (10 samples, 0.24%)</title><rect x="847.6" y="2099.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="850.6" y="2110.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 0.24%)</title><rect x="847.6" y="2083.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="850.6" y="2094.0"></text>
</g>
<g>
<title>G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet&lt;OverflowTaskQueue&lt;ScannerTask, (MEMFLAGS)5, 131072u&gt;, (MEMFLAGS)5&gt;*) (7 samples, 0.17%)</title><rect x="847.6" y="2067.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="850.6" y="2078.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (2 samples, 0.05%)</title><rect x="847.6" y="2051.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="850.6" y="2062.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.12%)</title><rect x="848.2" y="2051.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="851.2" y="2062.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.07%)</title><rect x="848.8" y="2035.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="851.8" y="2046.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.07%)</title><rect x="848.8" y="2019.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="851.8" y="2030.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.07%)</title><rect x="848.8" y="2003.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="851.8" y="2014.0"></text>
</g>
<g>
<title>do_user_addr_fault (3 samples, 0.07%)</title><rect x="848.8" y="1987.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="851.8" y="1998.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="849.0" y="1971.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="852.0" y="1982.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="849.0" y="1955.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="852.0" y="1966.0"></text>
</g>
<g>
<title>do_anonymous_page (2 samples, 0.05%)</title><rect x="849.0" y="1939.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="852.0" y="1950.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="849.0" y="1923.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="852.0" y="1934.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="849.0" y="1907.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="852.0" y="1918.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="849.3" y="1923.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="852.3" y="1934.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="849.3" y="1907.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="852.3" y="1918.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="849.3" y="1891.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="852.3" y="1902.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="849.3" y="1875.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="852.3" y="1886.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (2 samples, 0.05%)</title><rect x="849.6" y="2067.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="852.6" y="2078.0"></text>
</g>
<g>
<title>void G1ScanEvacuatedObjClosure::do_oop_work&lt;narrowOop&gt;(narrowOop*) (1 samples, 0.02%)</title><rect x="849.9" y="2051.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="852.9" y="2062.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="850.2" y="2067.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="853.2" y="2078.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="850.2" y="2051.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="853.2" y="2062.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="850.2" y="2035.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="853.2" y="2046.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="850.2" y="2019.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="853.2" y="2030.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="850.2" y="2003.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="853.2" y="2014.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="850.2" y="1987.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="853.2" y="1998.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="850.2" y="1971.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="853.2" y="1982.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (18 samples, 0.44%)</title><rect x="850.5" y="2099.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="853.5" y="2110.0"></text>
</g>
<g>
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool) (9 samples, 0.22%)</title><rect x="850.5" y="2083.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="853.5" y="2094.0"></text>
</g>
<g>
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (9 samples, 0.22%)</title><rect x="850.5" y="2067.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="853.5" y="2078.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (5 samples, 0.12%)</title><rect x="851.1" y="2051.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="854.1" y="2062.0"></text>
</g>
<g>
<title>PtrQueueSet::try_enqueue(PtrQueue&amp;, void*) (1 samples, 0.02%)</title><rect x="851.3" y="2035.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="854.3" y="2046.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="851.6" y="2035.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="854.6" y="2046.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="851.6" y="2019.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="854.6" y="2030.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="851.6" y="2003.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="854.6" y="2014.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="851.6" y="1987.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="854.6" y="1998.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="851.6" y="1971.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="854.6" y="1982.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="851.6" y="1955.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="854.6" y="1966.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, narrowOop&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="851.9" y="2035.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="854.9" y="2046.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceRefKlass, narrowOop&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="852.2" y="2035.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="855.2" y="2046.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="852.5" y="2051.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="855.5" y="2062.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanCardClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, narrowOop&gt;(G1ScanCardClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="852.8" y="2051.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="855.8" y="2062.0"></text>
</g>
<g>
<title>void G1ScanCardClosure::do_oop_work&lt;narrowOop&gt;(narrowOop*) (1 samples, 0.02%)</title><rect x="852.8" y="2035.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="855.8" y="2046.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (9 samples, 0.22%)</title><rect x="853.1" y="2083.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="856.1" y="2094.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (9 samples, 0.22%)</title><rect x="853.1" y="2067.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="856.1" y="2078.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.05%)</title><rect x="853.1" y="2051.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="856.1" y="2062.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (2 samples, 0.05%)</title><rect x="853.1" y="2035.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="856.1" y="2046.0"></text>
</g>
<g>
<title>ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*) (2 samples, 0.05%)</title><rect x="853.1" y="2019.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="856.1" y="2030.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)1, false&gt;::do_oop(oopDesc**) (2 samples, 0.05%)</title><rect x="853.1" y="2003.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="856.1" y="2014.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (1 samples, 0.02%)</title><rect x="853.1" y="1987.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="856.1" y="1998.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (1 samples, 0.02%)</title><rect x="853.3" y="1987.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="856.3" y="1998.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="853.3" y="1971.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.3" y="1982.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="853.3" y="1955.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="856.3" y="1966.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="853.3" y="1939.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="856.3" y="1950.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="853.3" y="1923.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="856.3" y="1934.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="853.3" y="1907.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="856.3" y="1918.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="853.3" y="1891.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.3" y="1902.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="853.3" y="1875.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="856.3" y="1886.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="853.3" y="1859.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="856.3" y="1870.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="853.3" y="1843.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="856.3" y="1854.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="853.3" y="1827.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="856.3" y="1838.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="853.3" y="1811.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="856.3" y="1822.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (7 samples, 0.17%)</title><rect x="853.6" y="2051.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="856.6" y="2062.0"></text>
</g>
<g>
<title>JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0] (6 samples, 0.15%)</title><rect x="853.6" y="2035.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="856.6" y="2046.0"></text>
</g>
<g>
<title>frame::oops_do(OopClosure*, CodeBlobClosure*, RegisterMap const*) const (1 samples, 0.02%)</title><rect x="853.6" y="2019.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="856.6" y="2030.0"></text>
</g>
<g>
<title>OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, derived_pointer*, OopClosure*)) (1 samples, 0.02%)</title><rect x="853.6" y="2003.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="856.6" y="2014.0"></text>
</g>
<g>
<title>OopMapStream::find_next() [clone .part.0] (1 samples, 0.02%)</title><rect x="853.6" y="1987.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="856.6" y="1998.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) const (5 samples, 0.12%)</title><rect x="853.9" y="2019.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="856.9" y="2030.0"></text>
</g>
<g>
<title>InterpreterOopMap::iterate_oop(OffsetClosure*) const (3 samples, 0.07%)</title><rect x="853.9" y="2003.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="856.9" y="2014.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, false&gt;::do_oop(oopDesc**) (3 samples, 0.07%)</title><rect x="853.9" y="1987.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="856.9" y="1998.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (2 samples, 0.05%)</title><rect x="853.9" y="1971.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="856.9" y="1982.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="854.5" y="1971.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="857.5" y="1982.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (2 samples, 0.05%)</title><rect x="854.8" y="2003.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="857.8" y="2014.0"></text>
</g>
<g>
<title>OopMapCache::lookup(methodHandle const&amp;, int, InterpreterOopMap*) (2 samples, 0.05%)</title><rect x="854.8" y="1987.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="857.8" y="1998.0"></text>
</g>
<g>
<title>OopMapCacheEntry::fill(methodHandle const&amp;, int) (2 samples, 0.05%)</title><rect x="854.8" y="1971.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="857.8" y="1982.0"></text>
</g>
<g>
<title>OopMapForCacheEntry::compute_map(Thread*) [clone .part.0] (2 samples, 0.05%)</title><rect x="854.8" y="1955.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="857.8" y="1966.0"></text>
</g>
<g>
<title>GenerateOopMap::compute_map(Thread*) (2 samples, 0.05%)</title><rect x="854.8" y="1939.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="857.8" y="1950.0"></text>
</g>
<g>
<title>GenerateOopMap::do_interpretation() (2 samples, 0.05%)</title><rect x="854.8" y="1923.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="857.8" y="1934.0"></text>
</g>
<g>
<title>GenerateOopMap::interp_bb(BasicBlock*) (2 samples, 0.05%)</title><rect x="854.8" y="1907.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="857.8" y="1918.0"></text>
</g>
<g>
<title>GenerateOopMap::do_method(int, int, int, int) (1 samples, 0.02%)</title><rect x="855.1" y="1891.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="858.1" y="1902.0"></text>
</g>
<g>
<title>SignatureIterator::return_type() (1 samples, 0.02%)</title><rect x="855.1" y="1875.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="858.1" y="1886.0"></text>
</g>
<g>
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="855.1" y="1859.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="858.1" y="1870.0"></text>
</g>
<g>
<title>JavaThread::oops_do_no_frames(OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="855.4" y="2035.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="858.4" y="2046.0"></text>
</g>
<g>
<title>HandleArea::oops_do(OopClosure*) (1 samples, 0.02%)</title><rect x="855.4" y="2019.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="858.4" y="2030.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, false&gt;::do_oop(oopDesc**) (1 samples, 0.02%)</title><rect x="855.4" y="2003.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="858.4" y="2014.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (1 samples, 0.02%)</title><rect x="855.4" y="1987.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="858.4" y="1998.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceRefKlass, narrowOop&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="855.4" y="1971.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="858.4" y="1982.0"></text>
</g>
<g>
<title>G1STWSubjectToDiscoveryClosure::do_object_b(oopDesc*) (1 samples, 0.02%)</title><rect x="855.4" y="1955.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="858.4" y="1966.0"></text>
</g>
<g>
<title>G1STWRefProcProxyTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="855.6" y="2115.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="858.6" y="2126.0"></text>
</g>
<g>
<title>RefProcPhase4Task::rp_work(unsigned int, BoolObjectClosure*, OopClosure*, EnqueueDiscoveredFieldClosure*, VoidClosure*) (1 samples, 0.02%)</title><rect x="855.6" y="2099.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="858.6" y="2110.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_phantom_refs_work(DiscoveredList&amp;, BoolObjectClosure*, OopClosure*, VoidClosure*, EnqueueDiscoveredFieldClosure*) (1 samples, 0.02%)</title><rect x="855.6" y="2083.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="858.6" y="2094.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="855.6" y="2067.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="858.6" y="2078.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="855.6" y="2051.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="858.6" y="2062.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1,164 samples, 28.29%)</title><rect x="855.9" y="2147.0" width="333.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="858.9" y="2158.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1,127 samples, 27.39%)</title><rect x="855.9" y="2131.0" width="323.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="858.9" y="2142.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1,101 samples, 26.76%)</title><rect x="855.9" y="2115.0" width="315.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="858.9" y="2126.0">CompileBroker::invoke_compiler_on_method(Co..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) (702 samples, 17.06%)</title><rect x="855.9" y="2099.0" width="201.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="858.9" y="2110.0">C2Compiler::compile_method..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*) (702 samples, 17.06%)</title><rect x="855.9" y="2083.0" width="201.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="858.9" y="2094.0">Compile::Compile(ciEnv*, c..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (3 samples, 0.07%)</title><rect x="855.9" y="2067.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="858.9" y="2078.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (3 samples, 0.07%)</title><rect x="855.9" y="2051.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="858.9" y="2062.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.07%)</title><rect x="855.9" y="2035.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="858.9" y="2046.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.07%)</title><rect x="855.9" y="2019.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="858.9" y="2030.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.07%)</title><rect x="855.9" y="2003.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="858.9" y="2014.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.07%)</title><rect x="855.9" y="1987.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="858.9" y="1998.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.07%)</title><rect x="855.9" y="1971.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="858.9" y="1982.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.07%)</title><rect x="855.9" y="1955.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="858.9" y="1966.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.05%)</title><rect x="855.9" y="1939.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="858.9" y="1950.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.05%)</title><rect x="855.9" y="1923.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="858.9" y="1934.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.05%)</title><rect x="855.9" y="1907.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="858.9" y="1918.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.05%)</title><rect x="855.9" y="1891.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="858.9" y="1902.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.05%)</title><rect x="855.9" y="1875.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="858.9" y="1886.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.05%)</title><rect x="855.9" y="1859.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="858.9" y="1870.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.05%)</title><rect x="855.9" y="1843.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="858.9" y="1854.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="855.9" y="1827.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="858.9" y="1838.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="855.9" y="1811.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="858.9" y="1822.0"></text>
</g>
<g>
<title>os::current_thread_id() (1 samples, 0.02%)</title><rect x="855.9" y="1795.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="858.9" y="1806.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="856.2" y="1827.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="859.2" y="1838.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="856.2" y="1811.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="859.2" y="1822.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.02%)</title><rect x="856.2" y="1795.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="859.2" y="1806.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="856.2" y="1779.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="859.2" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_putstatic(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="856.5" y="1939.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="859.5" y="1950.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="856.5" y="1923.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="859.5" y="1934.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="856.5" y="1907.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="859.5" y="1918.0"></text>
</g>
<g>
<title>CallGenerator::for_osr(ciMethod*, int) (1 samples, 0.02%)</title><rect x="856.8" y="2067.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="859.8" y="2078.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.02%)</title><rect x="856.8" y="2051.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="859.8" y="2062.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="856.8" y="2035.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="859.8" y="2046.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="856.8" y="2019.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="859.8" y="2030.0"></text>
</g>
<g>
<title>ciMethodBlocks::block_containing(int) (1 samples, 0.02%)</title><rect x="856.8" y="2003.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="859.8" y="2014.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (379 samples, 9.21%)</title><rect x="857.1" y="2067.0" width="108.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="860.1" y="2078.0">Compile::Code..</text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.02%)</title><rect x="857.1" y="2051.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="860.1" y="2062.0"></text>
</g>
<g>
<title>Block::is_Empty() const (1 samples, 0.02%)</title><rect x="857.4" y="2051.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="860.4" y="2062.0"></text>
</g>
<g>
<title>Matcher::match() (34 samples, 0.83%)</title><rect x="857.7" y="2051.0" width="9.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="860.7" y="2062.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (3 samples, 0.07%)</title><rect x="857.7" y="2035.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="860.7" y="2046.0"></text>
</g>
<g>
<title>ConNode::Opcode() const (2 samples, 0.05%)</title><rect x="858.5" y="2035.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="861.5" y="2046.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (6 samples, 0.15%)</title><rect x="859.1" y="2035.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="862.1" y="2046.0"></text>
</g>
<g>
<title>Matcher::find_shared_post_visit(Node*, unsigned int) (1 samples, 0.02%)</title><rect x="859.9" y="2019.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="862.9" y="2030.0"></text>
</g>
<g>
<title>Matcher::pd_clone_node(Node*, Node*, Matcher::MStack&amp;) (2 samples, 0.05%)</title><rect x="860.2" y="2019.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="863.2" y="2030.0"></text>
</g>
<g>
<title>Matcher::is_vshift_con_pattern(Node*, Node*) (1 samples, 0.02%)</title><rect x="860.5" y="2003.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="863.5" y="2014.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.05%)</title><rect x="860.8" y="2035.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="863.8" y="2046.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.02%)</title><rect x="861.1" y="2019.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="864.1" y="2030.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (1 samples, 0.02%)</title><rect x="861.1" y="2003.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="864.1" y="2014.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (21 samples, 0.51%)</title><rect x="861.4" y="2035.0" width="6.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="864.4" y="2046.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (2 samples, 0.05%)</title><rect x="861.7" y="2019.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="864.7" y="2030.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.05%)</title><rect x="861.7" y="2003.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="864.7" y="2014.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.02%)</title><rect x="862.0" y="1987.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="865.0" y="1998.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (17 samples, 0.41%)</title><rect x="862.2" y="2019.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="865.2" y="2030.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.02%)</title><rect x="863.4" y="2003.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="866.4" y="2014.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="863.4" y="1987.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="866.4" y="1998.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (7 samples, 0.17%)</title><rect x="863.7" y="2003.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="866.7" y="2014.0"></text>
</g>
<g>
<title>BoolNode::Opcode() const (1 samples, 0.02%)</title><rect x="864.0" y="1987.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="867.0" y="1998.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.02%)</title><rect x="864.2" y="1987.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="867.2" y="1998.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="864.2" y="1971.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="867.2" y="1982.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="864.2" y="1955.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="867.2" y="1966.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="864.2" y="1939.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="867.2" y="1950.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="864.5" y="1987.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="867.5" y="1998.0"></text>
</g>
<g>
<title>State::_sub_Op_ConI(Node const*) (1 samples, 0.02%)</title><rect x="864.5" y="1971.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="867.5" y="1982.0"></text>
</g>
<g>
<title>State::_sub_Op_StoreI(Node const*) (1 samples, 0.02%)</title><rect x="864.8" y="1987.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="867.8" y="1998.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="865.1" y="1987.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="868.1" y="1998.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.02%)</title><rect x="865.1" y="1971.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="868.1" y="1982.0"></text>
</g>
<g>
<title>vmClasses::box_klass_type(Klass*) (1 samples, 0.02%)</title><rect x="865.1" y="1955.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="868.1" y="1966.0"></text>
</g>
<g>
<title>TypeNarrowPtr::singleton() const (1 samples, 0.02%)</title><rect x="865.4" y="1987.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="868.4" y="1998.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (3 samples, 0.07%)</title><rect x="865.7" y="2003.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="868.7" y="2014.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.02%)</title><rect x="865.7" y="1987.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="868.7" y="1998.0"></text>
</g>
<g>
<title>Matcher::ReduceOper(State*, int, Node*&amp;, MachNode*) (1 samples, 0.02%)</title><rect x="865.7" y="1971.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="868.7" y="1982.0"></text>
</g>
<g>
<title>Node::ins_req(unsigned int, Node*) (2 samples, 0.05%)</title><rect x="866.0" y="1987.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="869.0" y="1998.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.02%)</title><rect x="866.3" y="1971.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="869.3" y="1982.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (1 samples, 0.02%)</title><rect x="866.5" y="2003.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="869.5" y="2014.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (1 samples, 0.02%)</title><rect x="866.8" y="2003.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="869.8" y="2014.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.02%)</title><rect x="867.1" y="2019.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="870.1" y="2030.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (2 samples, 0.05%)</title><rect x="867.4" y="2051.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="870.4" y="2062.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (1 samples, 0.02%)</title><rect x="867.4" y="2035.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="870.4" y="2046.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (1 samples, 0.02%)</title><rect x="867.7" y="2035.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="870.7" y="2046.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (1 samples, 0.02%)</title><rect x="867.7" y="2019.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="870.7" y="2030.0"></text>
</g>
<g>
<title>Block::num_fall_throughs() (1 samples, 0.02%)</title><rect x="867.7" y="2003.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="870.7" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.02%)</title><rect x="868.0" y="2051.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="871.0" y="2062.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.02%)</title><rect x="868.0" y="2035.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="871.0" y="2046.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (38 samples, 0.92%)</title><rect x="868.3" y="2051.0" width="10.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="871.3" y="2062.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (3 samples, 0.07%)</title><rect x="868.3" y="2035.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="871.3" y="2046.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (1 samples, 0.02%)</title><rect x="868.8" y="2019.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="871.8" y="2030.0"></text>
</g>
<g>
<title>Block_Stack::most_frequent_successor(Block*) (1 samples, 0.02%)</title><rect x="868.8" y="2003.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="871.8" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (35 samples, 0.85%)</title><rect x="869.1" y="2035.0" width="10.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="872.1" y="2046.0"></text>
</g>
<g>
<title>MachTypeNode::bottom_type() const (1 samples, 0.02%)</title><rect x="869.4" y="2019.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="872.4" y="2030.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.02%)</title><rect x="869.7" y="2019.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="872.7" y="2030.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.02%)</title><rect x="870.0" y="2019.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="873.0" y="2030.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (1 samples, 0.02%)</title><rect x="870.3" y="2019.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="873.3" y="2030.0"></text>
</g>
<g>
<title>VectorSet::grow(unsigned int) (1 samples, 0.02%)</title><rect x="870.3" y="2003.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="873.3" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="870.6" y="2019.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="873.6" y="2030.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (11 samples, 0.27%)</title><rect x="870.8" y="2019.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="873.8" y="2030.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (4 samples, 0.10%)</title><rect x="871.1" y="2003.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="874.1" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (2 samples, 0.05%)</title><rect x="872.3" y="2003.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="875.3" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.02%)</title><rect x="872.8" y="2003.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="875.8" y="2014.0"></text>
</g>
<g>
<title>Compile::can_alias(TypePtr const*, int) (1 samples, 0.02%)</title><rect x="872.8" y="1987.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="875.8" y="1998.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (2 samples, 0.05%)</title><rect x="873.1" y="2003.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="876.1" y="2014.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.02%)</title><rect x="873.4" y="1987.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="876.4" y="1998.0"></text>
</g>
<g>
<title>TypeKlassPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="873.7" y="2003.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="876.7" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (9 samples, 0.22%)</title><rect x="874.0" y="2019.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="877.0" y="2030.0"></text>
</g>
<g>
<title>CallStaticJavaDirectNode::ideal_Opcode() const (1 samples, 0.02%)</title><rect x="874.6" y="2003.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="877.6" y="2014.0"></text>
</g>
<g>
<title>Node::is_iteratively_computed() (1 samples, 0.02%)</title><rect x="874.9" y="2003.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="877.9" y="2014.0"></text>
</g>
<g>
<title>rRegIOper::type() const (1 samples, 0.02%)</title><rect x="874.9" y="1987.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="877.9" y="1998.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (4 samples, 0.10%)</title><rect x="875.1" y="2003.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="878.1" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.02%)</title><rect x="876.3" y="2003.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="879.3" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (2 samples, 0.05%)</title><rect x="876.6" y="2019.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="879.6" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.05%)</title><rect x="877.1" y="2019.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="880.1" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (1 samples, 0.02%)</title><rect x="877.7" y="2019.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="880.7" y="2030.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.10%)</title><rect x="878.0" y="2019.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="881.0" y="2030.0"></text>
</g>
<g>
<title>PhaseLive::add_livein(Block*, IndexSet*) (1 samples, 0.02%)</title><rect x="878.0" y="2003.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="881.0" y="2014.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.07%)</title><rect x="878.3" y="2003.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="881.3" y="2014.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="878.9" y="1987.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="881.9" y="1998.0"></text>
</g>
<g>
<title>PhaseCFG::fixup_flow() (1 samples, 0.02%)</title><rect x="879.2" y="2051.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="882.2" y="2062.0"></text>
</g>
<g>
<title>PhaseCFG::insert_goto_at(unsigned int, unsigned int) (1 samples, 0.02%)</title><rect x="879.2" y="2035.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="882.2" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (265 samples, 6.44%)</title><rect x="879.4" y="2051.0" width="76.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="882.4" y="2062.0">PhaseCha..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.02%)</title><rect x="879.4" y="2035.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="882.4" y="2046.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.02%)</title><rect x="879.7" y="2035.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="882.7" y="2046.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.02%)</title><rect x="880.0" y="2035.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="883.0" y="2046.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (2 samples, 0.05%)</title><rect x="880.3" y="2035.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="883.3" y="2046.0"></text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (1 samples, 0.02%)</title><rect x="880.9" y="2035.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="883.9" y="2046.0"></text>
</g>
<g>
<title>MachTypeNode::bottom_type() const (1 samples, 0.02%)</title><rect x="881.2" y="2035.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="884.2" y="2046.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (12 samples, 0.29%)</title><rect x="881.5" y="2035.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="884.5" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (19 samples, 0.46%)</title><rect x="884.9" y="2035.0" width="5.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="887.9" y="2046.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (11 samples, 0.27%)</title><rect x="887.2" y="2019.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="890.2" y="2030.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="888.9" y="2003.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="891.9" y="2014.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.10%)</title><rect x="889.2" y="2003.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="892.2" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (11 samples, 0.27%)</title><rect x="890.3" y="2035.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="893.3" y="2046.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (5 samples, 0.12%)</title><rect x="892.1" y="2019.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="895.1" y="2030.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="893.2" y="2003.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="896.2" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (31 samples, 0.75%)</title><rect x="893.5" y="2035.0" width="8.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="896.5" y="2046.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.02%)</title><rect x="901.0" y="2019.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="904.0" y="2030.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.02%)</title><rect x="901.2" y="2019.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="904.2" y="2030.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="901.2" y="2003.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="904.2" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (1 samples, 0.02%)</title><rect x="901.5" y="2019.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="904.5" y="2030.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.02%)</title><rect x="901.5" y="2003.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="904.5" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (2 samples, 0.05%)</title><rect x="901.8" y="2019.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="904.8" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.02%)</title><rect x="901.8" y="2003.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="904.8" y="2014.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.02%)</title><rect x="901.8" y="1987.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="904.8" y="1998.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.02%)</title><rect x="901.8" y="1971.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="904.8" y="1982.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="902.1" y="2003.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="905.1" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.02%)</title><rect x="902.4" y="2035.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="905.4" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (48 samples, 1.17%)</title><rect x="902.7" y="2035.0" width="13.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="905.7" y="2046.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (2 samples, 0.05%)</title><rect x="905.5" y="2019.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="908.5" y="2030.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.05%)</title><rect x="906.1" y="2019.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="909.1" y="2030.0"></text>
</g>
<g>
<title>MachNode::Opcode() const (1 samples, 0.02%)</title><rect x="906.7" y="2019.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="909.7" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (5 samples, 0.12%)</title><rect x="907.0" y="2019.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="910.0" y="2030.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="908.1" y="2003.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="911.1" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (1 samples, 0.02%)</title><rect x="908.4" y="2019.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="911.4" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;, double) [clone .part.0] [clone .isra.0] (1 samples, 0.02%)</title><rect x="908.7" y="2019.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="911.7" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0] (22 samples, 0.53%)</title><rect x="909.0" y="2019.0" width="6.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="912.0" y="2030.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="913.0" y="2003.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="916.0" y="2014.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.17%)</title><rect x="913.3" y="2003.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="916.3" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) [clone .part.0] (2 samples, 0.05%)</title><rect x="915.3" y="2019.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="918.3" y="2030.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(unsigned int) (1 samples, 0.02%)</title><rect x="915.9" y="2019.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="918.9" y="2030.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="916.1" y="2019.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="919.1" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.05%)</title><rect x="916.4" y="2035.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="919.4" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) [clone .part.0] (1 samples, 0.02%)</title><rect x="916.7" y="2019.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="919.7" y="2030.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="916.7" y="2003.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="919.7" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.02%)</title><rect x="917.0" y="2035.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="920.0" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (3 samples, 0.07%)</title><rect x="917.3" y="2035.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="920.3" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (1 samples, 0.02%)</title><rect x="918.2" y="2035.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="921.2" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (22 samples, 0.53%)</title><rect x="918.4" y="2035.0" width="6.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="921.4" y="2046.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.02%)</title><rect x="922.5" y="2019.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="925.5" y="2030.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (2 samples, 0.05%)</title><rect x="922.7" y="2019.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="925.7" y="2030.0"></text>
</g>
<g>
<title>MachOper::num_edges() const (1 samples, 0.02%)</title><rect x="923.3" y="2019.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="926.3" y="2030.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (4 samples, 0.10%)</title><rect x="923.6" y="2019.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="926.6" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="924.8" y="2035.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="927.8" y="2046.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (1 samples, 0.02%)</title><rect x="925.0" y="2019.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="928.0" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (3 samples, 0.07%)</title><rect x="925.3" y="2035.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="928.3" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (38 samples, 0.92%)</title><rect x="926.2" y="2035.0" width="10.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="929.2" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List*, Node_List*, bool) (23 samples, 0.56%)</title><rect x="930.5" y="2019.0" width="6.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="933.5" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.0] (2 samples, 0.05%)</title><rect x="936.5" y="2003.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="939.5" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::yank(Node*, Block*, Node_List*, Node_List*) (2 samples, 0.05%)</title><rect x="936.5" y="1987.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="939.5" y="1998.0"></text>
</g>
<g>
<title>Block::find_remove(Node const*) (2 samples, 0.05%)</title><rect x="936.5" y="1971.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="939.5" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.02%)</title><rect x="937.1" y="2035.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="940.1" y="2046.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.02%)</title><rect x="937.1" y="2019.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="940.1" y="2030.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (5 samples, 0.12%)</title><rect x="937.4" y="2035.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="940.4" y="2046.0"></text>
</g>
<g>
<title>MachNode::two_adr() const (1 samples, 0.02%)</title><rect x="937.4" y="2019.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="940.4" y="2030.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (3 samples, 0.07%)</title><rect x="937.7" y="2019.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="940.7" y="2030.0"></text>
</g>
<g>
<title>PhaseIFG::test_edge_sq(unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="938.2" y="2003.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="941.2" y="2014.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.02%)</title><rect x="938.5" y="2019.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="941.5" y="2030.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) [clone .part.0] (1 samples, 0.02%)</title><rect x="938.5" y="2003.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="941.5" y="2014.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.02%)</title><rect x="938.5" y="1987.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="941.5" y="1998.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="938.5" y="1971.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="941.5" y="1982.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (19 samples, 0.46%)</title><rect x="938.8" y="2035.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="941.8" y="2046.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (19 samples, 0.46%)</title><rect x="938.8" y="2019.0" width="5.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="941.8" y="2030.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (11 samples, 0.27%)</title><rect x="941.1" y="2003.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="944.1" y="2014.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (5 samples, 0.12%)</title><rect x="944.3" y="2035.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="947.3" y="2046.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.05%)</title><rect x="945.1" y="2019.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="948.1" y="2030.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.02%)</title><rect x="945.7" y="2035.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="948.7" y="2046.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.07%)</title><rect x="946.0" y="2035.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="949.0" y="2046.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.05%)</title><rect x="946.3" y="2019.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="949.3" y="2030.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (23 samples, 0.56%)</title><rect x="946.8" y="2035.0" width="6.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="949.8" y="2046.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="949.4" y="2019.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="952.4" y="2030.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.02%)</title><rect x="949.7" y="2019.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="952.7" y="2030.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.02%)</title><rect x="950.0" y="2019.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="953.0" y="2030.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (10 samples, 0.24%)</title><rect x="950.3" y="2019.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="953.3" y="2030.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="952.0" y="2003.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="955.0" y="2014.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="952.3" y="2003.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="955.3" y="2014.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="952.6" y="2003.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="955.6" y="2014.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="952.9" y="2003.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="955.9" y="2014.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="952.9" y="1987.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="955.9" y="1998.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="952.9" y="1971.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="955.9" y="1982.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="952.9" y="1955.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="955.9" y="1966.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="953.1" y="2019.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="956.1" y="2030.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="953.4" y="2035.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="956.4" y="2046.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (1 samples, 0.02%)</title><rect x="953.7" y="2035.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="956.7" y="2046.0"></text>
</g>
<g>
<title>TypeNode::ideal_reg() const (1 samples, 0.02%)</title><rect x="954.0" y="2035.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="957.0" y="2046.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.02%)</title><rect x="954.3" y="2035.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="957.3" y="2046.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (2 samples, 0.05%)</title><rect x="954.6" y="2035.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="957.6" y="2046.0"></text>
</g>
<g>
<title>rRegLOper::in_RegMask(int) const (1 samples, 0.02%)</title><rect x="955.1" y="2035.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="958.1" y="2046.0"></text>
</g>
<g>
<title>PhaseOutput::Output() (16 samples, 0.39%)</title><rect x="955.4" y="2051.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="958.4" y="2062.0"></text>
</g>
<g>
<title>Node::size(PhaseRegAlloc*) const (1 samples, 0.02%)</title><rect x="955.4" y="2035.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="958.4" y="2046.0"></text>
</g>
<g>
<title>PhaseOutput::BuildOopMaps() (6 samples, 0.15%)</title><rect x="955.7" y="2035.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="958.7" y="2046.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (3 samples, 0.07%)</title><rect x="956.6" y="2019.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="959.6" y="2030.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (2 samples, 0.05%)</title><rect x="956.9" y="2003.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="959.9" y="2014.0"></text>
</g>
<g>
<title>PhaseOutput::init_buffer() (1 samples, 0.02%)</title><rect x="957.4" y="2035.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="960.4" y="2046.0"></text>
</g>
<g>
<title>PhaseOutput::shorten_branches(unsigned int*) (7 samples, 0.17%)</title><rect x="957.7" y="2035.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="960.7" y="2046.0"></text>
</g>
<g>
<title>PhaseOutput::scratch_emit_size(Node const*) (4 samples, 0.10%)</title><rect x="958.0" y="2019.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="961.0" y="2030.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.02%)</title><rect x="958.6" y="2003.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="961.6" y="2014.0"></text>
</g>
<g>
<title>cmpFastLockNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.02%)</title><rect x="958.9" y="2003.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="961.9" y="2014.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, RegisterImpl*) (1 samples, 0.02%)</title><rect x="958.9" y="1987.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="961.9" y="1998.0"></text>
</g>
<g>
<title>jmpConNode::short_branch_version() (1 samples, 0.02%)</title><rect x="959.2" y="2019.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="962.2" y="2030.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.02%)</title><rect x="959.2" y="2003.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="962.2" y="2014.0"></text>
</g>
<g>
<title>salL_rReg_immNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.02%)</title><rect x="959.4" y="2019.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="962.4" y="2030.0"></text>
</g>
<g>
<title>jmpCon_shortNode::size(PhaseRegAlloc*) const (1 samples, 0.02%)</title><rect x="959.7" y="2035.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="962.7" y="2046.0"></text>
</g>
<g>
<title>PhaseOutput::fill_buffer(CodeBuffer*, unsigned int*) (12 samples, 0.29%)</title><rect x="960.0" y="2051.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="963.0" y="2062.0"></text>
</g>
<g>
<title>MachOper::reg(PhaseRegAlloc*, Node const*) const (1 samples, 0.02%)</title><rect x="960.6" y="2035.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="963.6" y="2046.0"></text>
</g>
<g>
<title>MachOper::reg(PhaseRegAlloc*, Node const*, int) const (1 samples, 0.02%)</title><rect x="960.9" y="2035.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="963.9" y="2046.0"></text>
</g>
<g>
<title>Node::disconnect_inputs(Compile*) (1 samples, 0.02%)</title><rect x="961.2" y="2035.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="964.2" y="2046.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (3 samples, 0.07%)</title><rect x="961.5" y="2035.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="964.5" y="2046.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (3 samples, 0.07%)</title><rect x="961.5" y="2019.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="964.5" y="2030.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.05%)</title><rect x="961.7" y="2003.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="964.7" y="2014.0"></text>
</g>
<g>
<title>PhaseOutput::Process_OopMap_Node(MachNode*, int) (4 samples, 0.10%)</title><rect x="962.3" y="2035.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.3" y="2046.0"></text>
</g>
<g>
<title>DebugInformationRecorder::add_safepoint(int, OopMap*) (1 samples, 0.02%)</title><rect x="962.3" y="2019.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="965.3" y="2030.0"></text>
</g>
<g>
<title>OopMapSet::add_gc_map(int, OopMap*) (1 samples, 0.02%)</title><rect x="962.3" y="2003.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="965.3" y="2014.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="962.6" y="2019.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="965.6" y="2030.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.02%)</title><rect x="962.6" y="2003.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="965.6" y="2014.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.02%)</title><rect x="962.9" y="2019.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="965.9" y="2030.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.02%)</title><rect x="962.9" y="2003.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="965.9" y="2014.0"></text>
</g>
<g>
<title>PhaseOutput::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="963.2" y="2019.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="966.2" y="2030.0"></text>
</g>
<g>
<title>PhaseOutput::install() (7 samples, 0.17%)</title><rect x="963.5" y="2051.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="966.5" y="2062.0"></text>
</g>
<g>
<title>PhaseOutput::install_code(ciMethod*, int, AbstractCompiler*, bool, bool, RTMState) (7 samples, 0.17%)</title><rect x="963.5" y="2035.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="966.5" y="2046.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="963.5" y="2019.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="966.5" y="2030.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView&lt;RuntimeStub*&gt; const&amp;) (6 samples, 0.15%)</title><rect x="963.7" y="2019.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="966.7" y="2030.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView&lt;RuntimeStub*&gt; const&amp;, char*, int, int, char const*, FailedSpeculation**) (6 samples, 0.15%)</title><rect x="963.7" y="2003.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="966.7" y="2014.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.02%)</title><rect x="963.7" y="1987.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="966.7" y="1998.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="964.0" y="1987.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="967.0" y="1998.0"></text>
</g>
<g>
<title>metadata_Relocation::metadata_value() (1 samples, 0.02%)</title><rect x="964.0" y="1971.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="967.0" y="1982.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (2 samples, 0.05%)</title><rect x="964.3" y="1987.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="967.3" y="1998.0"></text>
</g>
<g>
<title>DependencyContext::add_dependent_nmethod(nmethod*) (2 samples, 0.05%)</title><rect x="964.3" y="1971.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="967.3" y="1982.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView&lt;RuntimeStub*&gt; const&amp;, char*, int, int) (2 samples, 0.05%)</title><rect x="964.9" y="1987.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="967.9" y="1998.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.02%)</title><rect x="964.9" y="1971.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="967.9" y="1982.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="964.9" y="1955.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="967.9" y="1966.0"></text>
</g>
<g>
<title>CodeBuffer::copy_relocations_to(unsigned char*, int, bool) const (1 samples, 0.02%)</title><rect x="965.2" y="1971.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="968.2" y="1982.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (1 samples, 0.02%)</title><rect x="965.5" y="2051.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="968.5" y="2062.0"></text>
</g>
<g>
<title>Compile::Optimize() (244 samples, 5.93%)</title><rect x="965.8" y="2067.0" width="69.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="968.8" y="2078.0">Compile..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() [clone .part.0] (4 samples, 0.10%)</title><rect x="965.8" y="2051.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="968.8" y="2062.0"></text>
</g>
<g>
<title>CallNode::has_non_debug_use(Node*) (1 samples, 0.02%)</title><rect x="965.8" y="2035.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="968.8" y="2046.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;, Unique_Node_List&amp;) (3 samples, 0.07%)</title><rect x="966.0" y="2035.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="969.0" y="2046.0"></text>
</g>
<g>
<title>JVMState::interpreter_frame_size() const (1 samples, 0.02%)</title><rect x="966.6" y="2019.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="969.6" y="2030.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (1 samples, 0.02%)</title><rect x="966.9" y="2051.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="969.9" y="2062.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_cleanup(PhaseIterGVN&amp;) (1 samples, 0.02%)</title><rect x="966.9" y="2035.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="969.9" y="2046.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.02%)</title><rect x="966.9" y="2019.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="969.9" y="2030.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="966.9" y="2003.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="969.9" y="2014.0"></text>
</g>
<g>
<title>Type::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="966.9" y="1987.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="969.9" y="1998.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.0] (2 samples, 0.05%)</title><rect x="967.2" y="2051.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="970.2" y="2062.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.05%)</title><rect x="967.2" y="2035.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="970.2" y="2046.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.05%)</title><rect x="967.2" y="2019.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="970.2" y="2030.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="967.2" y="2003.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="970.2" y="2014.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="967.2" y="1987.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="970.2" y="1998.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.0] (1 samples, 0.02%)</title><rect x="967.2" y="1971.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="970.2" y="1982.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="967.2" y="1955.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="970.2" y="1966.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="967.5" y="2003.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="970.5" y="2014.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseGVN*, bool) [clone .part.0] (1 samples, 0.02%)</title><rect x="967.5" y="1987.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="970.5" y="1998.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, PhaseGVN*) (1 samples, 0.02%)</title><rect x="967.5" y="1971.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="970.5" y="1982.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.0] (1 samples, 0.02%)</title><rect x="967.5" y="1955.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="970.5" y="1966.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="967.5" y="1939.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="970.5" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (8 samples, 0.19%)</title><rect x="967.8" y="2051.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="970.8" y="2062.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (8 samples, 0.19%)</title><rect x="967.8" y="2035.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="970.8" y="2046.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (1 samples, 0.02%)</title><rect x="968.1" y="2019.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="971.1" y="2030.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.02%)</title><rect x="968.1" y="2003.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="971.1" y="2014.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.02%)</title><rect x="968.1" y="1987.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="971.1" y="1998.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.0] (1 samples, 0.02%)</title><rect x="968.1" y="1971.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="971.1" y="1982.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.02%)</title><rect x="968.1" y="1955.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="971.1" y="1966.0"></text>
</g>
<g>
<title>ciVirtualCallData::translate_from(ProfileData const*) (1 samples, 0.02%)</title><rect x="968.1" y="1939.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="971.1" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) [clone .part.0] (5 samples, 0.12%)</title><rect x="968.3" y="2019.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="971.3" y="2030.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (2 samples, 0.05%)</title><rect x="968.6" y="2003.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="971.6" y="2014.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) (1 samples, 0.02%)</title><rect x="969.2" y="2003.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="972.2" y="2014.0"></text>
</g>
<g>
<title>GrowableArrayWithAllocator&lt;PointsToNode*, GrowableArray&lt;PointsToNode*&gt; &gt;::grow(int) (1 samples, 0.02%)</title><rect x="969.2" y="1987.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="972.2" y="1998.0"></text>
</g>
<g>
<title>ConnectionGraph::find_non_escaped_objects(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.5" y="2003.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="972.5" y="2014.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="2019.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="972.8" y="2030.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="2003.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="972.8" y="2014.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1987.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="972.8" y="1998.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1971.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="972.8" y="1982.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1955.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="972.8" y="1966.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1939.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="972.8" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1923.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="972.8" y="1934.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1907.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="972.8" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1891.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="972.8" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1875.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="972.8" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1859.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="972.8" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="969.8" y="1843.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="972.8" y="1854.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.0] (1 samples, 0.02%)</title><rect x="969.8" y="1827.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="972.8" y="1838.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.02%)</title><rect x="969.8" y="1811.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="972.8" y="1822.0"></text>
</g>
<g>
<title>CreateExNode::Opcode() const (1 samples, 0.02%)</title><rect x="970.1" y="2051.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="973.1" y="2062.0"></text>
</g>
<g>
<title>IfNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="970.3" y="2051.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="973.3" y="2062.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (7 samples, 0.17%)</title><rect x="970.6" y="2051.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="973.6" y="2062.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="972.1" y="2035.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="975.1" y="2046.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.02%)</title><rect x="972.1" y="2019.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="975.1" y="2030.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="972.4" y="2035.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="975.4" y="2046.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (11 samples, 0.27%)</title><rect x="972.6" y="2051.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="975.6" y="2062.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (11 samples, 0.27%)</title><rect x="972.6" y="2035.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="975.6" y="2046.0"></text>
</g>
<g>
<title>CastP2XNode::Opcode() const (1 samples, 0.02%)</title><rect x="973.5" y="2019.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="976.5" y="2030.0"></text>
</g>
<g>
<title>Compile::disconnect_useless_nodes(Unique_Node_List&amp;, Unique_Node_List*) (4 samples, 0.10%)</title><rect x="973.8" y="2019.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="976.8" y="2030.0"></text>
</g>
<g>
<title>IfFalseNode::Opcode() const (1 samples, 0.02%)</title><rect x="974.4" y="2003.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="977.4" y="2014.0"></text>
</g>
<g>
<title>Node::has_special_unique_user() const (1 samples, 0.02%)</title><rect x="974.6" y="2003.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="977.6" y="2014.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.02%)</title><rect x="974.9" y="2019.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="977.9" y="2030.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="974.9" y="2003.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="977.9" y="2014.0"></text>
</g>
<g>
<title>TypeInt::singleton() const (1 samples, 0.02%)</title><rect x="975.2" y="2019.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="978.2" y="2030.0"></text>
</g>
<g>
<title>TypeLong::singleton() const (1 samples, 0.02%)</title><rect x="975.5" y="2019.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="978.5" y="2030.0"></text>
</g>
<g>
<title>PhaseIdealLoop::optimize(PhaseIterGVN&amp;, LoopOptsMode) (153 samples, 3.72%)</title><rect x="975.8" y="2051.0" width="43.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="978.8" y="2062.0">Phas..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize() (135 samples, 3.28%)</title><rect x="975.8" y="2035.0" width="38.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="978.8" y="2046.0">Pha..</text>
</g>
<g>
<title>GrowableArrayWithAllocator&lt;long, GrowableArray&lt;long&gt; &gt;::grow(int) (1 samples, 0.02%)</title><rect x="975.8" y="2019.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="978.8" y="2030.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="976.1" y="2019.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="979.1" y="2030.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="976.1" y="2003.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="979.1" y="2014.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="976.1" y="1987.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="979.1" y="1998.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="976.1" y="1971.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="979.1" y="1982.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="976.1" y="1955.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="979.1" y="1966.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="976.1" y="1939.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="979.1" y="1950.0"></text>
</g>
<g>
<title>IdealLoopTree::remove_safepoints(PhaseIdealLoop*, bool) (1 samples, 0.02%)</title><rect x="976.1" y="1923.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="979.1" y="1934.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (5 samples, 0.12%)</title><rect x="976.4" y="2019.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="979.4" y="2030.0"></text>
</g>
<g>
<title>CmpINode::Opcode() const (1 samples, 0.02%)</title><rect x="976.4" y="2003.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="979.4" y="2014.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.07%)</title><rect x="976.7" y="2003.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="979.7" y="2014.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.05%)</title><rect x="976.7" y="1987.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="979.7" y="1998.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.05%)</title><rect x="976.7" y="1971.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="979.7" y="1982.0"></text>
</g>
<g>
<title>IdealLoopTree::estimate_peeling(PhaseIdealLoop*) [clone .part.0] (1 samples, 0.02%)</title><rect x="976.7" y="1955.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="979.7" y="1966.0"></text>
</g>
<g>
<title>IdealLoopTree::est_loop_clone_sz(unsigned int) const (1 samples, 0.02%)</title><rect x="976.7" y="1939.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="979.7" y="1950.0"></text>
</g>
<g>
<title>IdealLoopTree::est_loop_flow_merge_sz() const (1 samples, 0.02%)</title><rect x="976.7" y="1923.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="979.7" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.02%)</title><rect x="976.9" y="1955.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="979.9" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.02%)</title><rect x="976.9" y="1939.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="979.9" y="1950.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.02%)</title><rect x="976.9" y="1923.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="979.9" y="1934.0"></text>
</g>
<g>
<title>TypeLong::hash() const (1 samples, 0.02%)</title><rect x="976.9" y="1907.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="979.9" y="1918.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="977.2" y="1987.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="980.2" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.02%)</title><rect x="977.2" y="1971.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="980.2" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.02%)</title><rect x="977.2" y="1955.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="980.2" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop_handle_data_uses(Node*, Node_List&amp;, IdealLoopTree*, IdealLoopTree*, Node_List*&amp;, Node_List*&amp;, Node_List*&amp;, Node_List&amp;, unsigned int, PhaseIdealLoop::CloneLoopMode) (1 samples, 0.02%)</title><rect x="977.2" y="1939.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="980.2" y="1950.0"></text>
</g>
<g>
<title>Node::set_req_X(unsigned int, Node*, PhaseIterGVN*) (1 samples, 0.02%)</title><rect x="977.2" y="1923.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="980.2" y="1934.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="977.5" y="2003.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="980.5" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="977.5" y="1987.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="980.5" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.02%)</title><rect x="977.5" y="1971.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="980.5" y="1982.0"></text>
</g>
<g>
<title>LoadNode::hash() const (1 samples, 0.02%)</title><rect x="977.5" y="1955.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="980.5" y="1966.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.05%)</title><rect x="977.8" y="2019.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="980.8" y="2030.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="977.8" y="2003.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="980.8" y="2014.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="977.8" y="1987.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="980.8" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.0] (1 samples, 0.02%)</title><rect x="977.8" y="1971.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="980.8" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.02%)</title><rect x="977.8" y="1955.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="980.8" y="1966.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_proj(Deoptimization::DeoptReason) (1 samples, 0.02%)</title><rect x="977.8" y="1939.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="980.8" y="1950.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.02%)</title><rect x="977.8" y="1923.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="980.8" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.0] (1 samples, 0.02%)</title><rect x="978.1" y="2003.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="981.1" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_should_follow_branches(IdealLoopTree*, ProjNode*, float&amp;) [clone .part.0] (1 samples, 0.02%)</title><rect x="978.1" y="1987.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="981.1" y="1998.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.02%)</title><rect x="978.4" y="2019.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="981.4" y="2030.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.02%)</title><rect x="978.7" y="2019.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="981.7" y="2030.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.10%)</title><rect x="978.9" y="2019.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="981.9" y="2030.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.02%)</title><rect x="979.5" y="2003.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="982.5" y="2014.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="979.8" y="2003.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="982.8" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (19 samples, 0.46%)</title><rect x="980.1" y="2019.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="983.1" y="2030.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (3 samples, 0.07%)</title><rect x="984.7" y="2003.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="987.7" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (47 samples, 1.14%)</title><rect x="985.5" y="2019.0" width="13.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="988.5" y="2030.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post_work(Node*, bool) (33 samples, 0.80%)</title><rect x="989.3" y="2003.0" width="9.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="992.3" y="2014.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.02%)</title><rect x="992.1" y="1987.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="995.1" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (5 samples, 0.12%)</title><rect x="992.4" y="1987.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="995.4" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (5 samples, 0.12%)</title><rect x="992.4" y="1971.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="995.4" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) [clone .isra.0] (3 samples, 0.07%)</title><rect x="993.9" y="1987.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="996.9" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl_with_anti_dep(LoadNode*, Node*, Node*) (11 samples, 0.27%)</title><rect x="994.7" y="1987.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="997.7" y="1998.0"></text>
</g>
<g>
<title>Compile::can_alias(TypePtr const*, int) (1 samples, 0.02%)</title><rect x="995.3" y="1971.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="998.3" y="1982.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (2 samples, 0.05%)</title><rect x="995.6" y="1971.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="998.6" y="1982.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (2 samples, 0.05%)</title><rect x="995.6" y="1955.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="998.6" y="1966.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.02%)</title><rect x="995.9" y="1939.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="998.9" y="1950.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.02%)</title><rect x="995.9" y="1923.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="998.9" y="1934.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.02%)</title><rect x="995.9" y="1907.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="998.9" y="1918.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.02%)</title><rect x="995.9" y="1891.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="998.9" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="996.2" y="1971.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="999.2" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (4 samples, 0.10%)</title><rect x="996.4" y="1971.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="999.4" y="1982.0"></text>
</g>
<g>
<title>VectorSet::grow(unsigned int) (1 samples, 0.02%)</title><rect x="997.6" y="1971.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1000.6" y="1982.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_proj(Deoptimization::DeoptReason) (2 samples, 0.05%)</title><rect x="997.9" y="1987.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1000.9" y="1998.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (2 samples, 0.05%)</title><rect x="997.9" y="1971.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1000.9" y="1982.0"></text>
</g>
<g>
<title>SafePointNode::Opcode() const (1 samples, 0.02%)</title><rect x="998.4" y="1987.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1001.4" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.02%)</title><rect x="998.7" y="2003.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1001.7" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (14 samples, 0.34%)</title><rect x="999.0" y="2019.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1002.0" y="2030.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.02%)</title><rect x="1001.3" y="2003.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1004.3" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (5 samples, 0.12%)</title><rect x="1001.6" y="2003.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1004.6" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::eliminate_useless_predicates() (2 samples, 0.05%)</title><rect x="1003.0" y="2019.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1006.0" y="2030.0"></text>
</g>
<g>
<title>PhaseIdealLoop::collect_potentially_useful_predicates(IdealLoopTree*, Unique_Node_List&amp;) (1 samples, 0.02%)</title><rect x="1003.3" y="2003.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1006.3" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::collect_potentially_useful_predicates(IdealLoopTree*, Unique_Node_List&amp;) (1 samples, 0.02%)</title><rect x="1003.3" y="1987.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1006.3" y="1998.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.02%)</title><rect x="1003.3" y="1971.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.3" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (28 samples, 0.68%)</title><rect x="1003.6" y="2019.0" width="8.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.6" y="2030.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*) (10 samples, 0.24%)</title><rect x="1004.8" y="2003.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1007.8" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::try_sink_out_of_loop(Node*) (9 samples, 0.22%)</title><rect x="1005.0" y="1987.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1008.0" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_early_ctrl(Node*, Node*) (2 samples, 0.05%)</title><rect x="1005.3" y="1971.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1008.3" y="1982.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1005.6" y="1955.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1008.6" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::ctrl_of_all_uses_out_of_loop(Node const*, Node*, IdealLoopTree*) (6 samples, 0.15%)</title><rect x="1005.9" y="1971.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1008.9" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::ctrl_of_use_out_of_loop(Node const*, Node*, IdealLoopTree*, Node*) (5 samples, 0.12%)</title><rect x="1006.2" y="1955.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.2" y="1966.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl_with_anti_dep(LoadNode*, Node*, Node*) (5 samples, 0.12%)</title><rect x="1006.2" y="1939.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.2" y="1950.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (2 samples, 0.05%)</title><rect x="1006.8" y="1923.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.8" y="1934.0"></text>
</g>
<g>
<title>ThreadLocalNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1006.8" y="1907.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.8" y="1918.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1007.0" y="1907.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1010.0" y="1918.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1007.0" y="1891.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1010.0" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1007.3" y="1923.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1010.3" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (14 samples, 0.34%)</title><rect x="1007.6" y="2003.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1010.6" y="2014.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1007.9" y="1987.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1010.9" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.02%)</title><rect x="1008.2" y="1987.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1011.2" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (5 samples, 0.12%)</title><rect x="1008.5" y="1987.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1011.5" y="1998.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) [clone .isra.0] (2 samples, 0.05%)</title><rect x="1009.1" y="1971.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1012.1" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.02%)</title><rect x="1009.6" y="1971.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1012.6" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (4 samples, 0.10%)</title><rect x="1009.9" y="1987.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1012.9" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.05%)</title><rect x="1009.9" y="1971.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1012.9" y="1982.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.02%)</title><rect x="1010.2" y="1955.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1013.2" y="1966.0"></text>
</g>
<g>
<title>SubNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1010.5" y="1971.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1013.5" y="1982.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1010.5" y="1955.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1013.5" y="1966.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1010.5" y="1939.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1013.5" y="1950.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1010.8" y="1971.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1013.8" y="1982.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.02%)</title><rect x="1010.8" y="1955.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1013.8" y="1966.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.02%)</title><rect x="1010.8" y="1939.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1013.8" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::try_move_store_before_loop(Node*, Node*) (1 samples, 0.02%)</title><rect x="1011.1" y="1987.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1014.1" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1011.4" y="1987.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1014.4" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1011.4" y="1971.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1014.4" y="1982.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*) (1 samples, 0.02%)</title><rect x="1011.6" y="2019.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.6" y="2030.0"></text>
</g>
<g>
<title>PhiNode::Opcode() const (1 samples, 0.02%)</title><rect x="1011.9" y="2019.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1014.9" y="2030.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.02%)</title><rect x="1012.2" y="2019.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1015.2" y="2030.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (3 samples, 0.07%)</title><rect x="1012.5" y="2019.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1015.5" y="2030.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (2 samples, 0.05%)</title><rect x="1013.4" y="2019.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1016.4" y="2030.0"></text>
</g>
<g>
<title>SafePointNode::pinned() const (1 samples, 0.02%)</title><rect x="1013.9" y="2019.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1016.9" y="2030.0"></text>
</g>
<g>
<title>StartNode::pinned() const (1 samples, 0.02%)</title><rect x="1014.2" y="2019.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1017.2" y="2030.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (16 samples, 0.39%)</title><rect x="1014.5" y="2035.0" width="4.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1017.5" y="2046.0"></text>
</g>
<g>
<title>CallNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1014.8" y="2019.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1017.8" y="2030.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1015.1" y="2019.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1018.1" y="2030.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1015.4" y="2019.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1018.4" y="2030.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (10 samples, 0.24%)</title><rect x="1015.7" y="2019.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1018.7" y="2030.0"></text>
</g>
<g>
<title>CallDynamicJavaNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1015.7" y="2003.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1018.7" y="2014.0"></text>
</g>
<g>
<title>Compile::optimize_virtual_call(ciMethod*, ciInstanceKlass*, ciKlass*, ciMethod*, TypeOopPtr const*, bool, bool&amp;, int&amp;, bool) (1 samples, 0.02%)</title><rect x="1015.7" y="1987.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1018.7" y="1998.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.02%)</title><rect x="1015.7" y="1971.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1018.7" y="1982.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1015.7" y="1955.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1018.7" y="1966.0"></text>
</g>
<g>
<title>ConNode::hash() const (1 samples, 0.02%)</title><rect x="1015.9" y="2003.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1018.9" y="2014.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1016.2" y="2003.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1019.2" y="2014.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1016.2" y="1987.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1019.2" y="1998.0"></text>
</g>
<g>
<title>AddPNode::Ideal_base_and_offset(Node*, PhaseTransform*, long&amp;) (1 samples, 0.02%)</title><rect x="1016.2" y="1971.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1019.2" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.02%)</title><rect x="1016.5" y="2003.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1019.5" y="2014.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (2 samples, 0.05%)</title><rect x="1016.8" y="2003.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1019.8" y="2014.0"></text>
</g>
<g>
<title>PhiNode::is_data_loop(RegionNode*, Node*, PhaseGVN const*) (2 samples, 0.05%)</title><rect x="1016.8" y="1987.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1019.8" y="1998.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_from_root(PhaseGVN const*) const (2 samples, 0.05%)</title><rect x="1016.8" y="1971.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1019.8" y="1982.0"></text>
</g>
<g>
<title>RangeCheckNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1017.4" y="2003.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1020.4" y="2014.0"></text>
</g>
<g>
<title>RangeCheckNode::is_range_check(Node*&amp;, Node*&amp;, int&amp;) (1 samples, 0.02%)</title><rect x="1017.4" y="1987.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1020.4" y="1998.0"></text>
</g>
<g>
<title>CallStaticJavaNode::uncommon_trap_request() const (1 samples, 0.02%)</title><rect x="1017.4" y="1971.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1020.4" y="1982.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1017.7" y="2003.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1020.7" y="2014.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_from_root(PhaseGVN const*) const (1 samples, 0.02%)</title><rect x="1017.7" y="1987.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1020.7" y="1998.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.05%)</title><rect x="1017.9" y="2003.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1020.9" y="2014.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseGVN*, bool) [clone .part.0] (2 samples, 0.05%)</title><rect x="1017.9" y="1987.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1020.9" y="1998.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, PhaseGVN*) (2 samples, 0.05%)</title><rect x="1017.9" y="1971.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.9" y="1982.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.0] (2 samples, 0.05%)</title><rect x="1017.9" y="1955.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1020.9" y="1966.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.05%)</title><rect x="1017.9" y="1939.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1020.9" y="1950.0"></text>
</g>
<g>
<title>ProjNode::hash() const (1 samples, 0.02%)</title><rect x="1018.5" y="2019.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1021.5" y="2030.0"></text>
</g>
<g>
<title>RootNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1018.8" y="2019.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1021.8" y="2030.0"></text>
</g>
<g>
<title>__memset_avx2_erms (2 samples, 0.05%)</title><rect x="1019.1" y="2035.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1022.1" y="2046.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (2 samples, 0.05%)</title><rect x="1019.7" y="2051.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1022.7" y="2062.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (1 samples, 0.02%)</title><rect x="1020.0" y="2035.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1023.0" y="2046.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (40 samples, 0.97%)</title><rect x="1020.2" y="2051.0" width="11.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1023.2" y="2062.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (40 samples, 0.97%)</title><rect x="1020.2" y="2035.0" width="11.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1023.2" y="2046.0"></text>
</g>
<g>
<title>ConvI2LNode::Ideal(PhaseGVN*, bool) (2 samples, 0.05%)</title><rect x="1021.1" y="2019.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1024.1" y="2030.0"></text>
</g>
<g>
<title>Compile::push_thru_add(PhaseGVN*, Node*, TypeInteger const*, TypeInteger const*&amp;, TypeInteger const*&amp;, BasicType) (2 samples, 0.05%)</title><rect x="1021.1" y="2003.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1024.1" y="2014.0"></text>
</g>
<g>
<title>Type::hashcons() (2 samples, 0.05%)</title><rect x="1021.1" y="1987.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1024.1" y="1998.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1021.4" y="1971.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1024.4" y="1982.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1021.7" y="2019.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1024.7" y="2030.0"></text>
</g>
<g>
<title>IfNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1021.7" y="2003.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1024.7" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1021.7" y="1987.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1024.7" y="1998.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1021.7" y="1971.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1024.7" y="1982.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.02%)</title><rect x="1021.7" y="1955.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1024.7" y="1966.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (2 samples, 0.05%)</title><rect x="1022.0" y="2019.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1025.0" y="2030.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1022.5" y="2019.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1025.5" y="2030.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1022.5" y="2003.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1025.5" y="2014.0"></text>
</g>
<g>
<title>MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*) (1 samples, 0.02%)</title><rect x="1022.8" y="2019.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1025.8" y="2030.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (1 samples, 0.02%)</title><rect x="1023.1" y="2019.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1026.1" y="2030.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (1 samples, 0.02%)</title><rect x="1023.4" y="2019.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1026.4" y="2030.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (5 samples, 0.12%)</title><rect x="1023.7" y="2019.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1026.7" y="2030.0"></text>
</g>
<g>
<title>NodeHash::grow() (2 samples, 0.05%)</title><rect x="1024.5" y="2003.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1027.5" y="2014.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.02%)</title><rect x="1024.8" y="1987.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1027.8" y="1998.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.02%)</title><rect x="1024.8" y="1971.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1027.8" y="1982.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.02%)</title><rect x="1025.1" y="2019.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1028.1" y="2030.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1025.4" y="2019.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1028.4" y="2030.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1025.4" y="2003.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1028.4" y="2014.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (3 samples, 0.07%)</title><rect x="1025.7" y="2019.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1028.7" y="2030.0"></text>
</g>
<g>
<title>MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*) (1 samples, 0.02%)</title><rect x="1026.0" y="2003.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1029.0" y="2014.0"></text>
</g>
<g>
<title>PhiNode::wait_for_region_igvn(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1026.3" y="2003.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1029.3" y="2014.0"></text>
</g>
<g>
<title>PhiNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1026.5" y="2019.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1029.5" y="2030.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (2 samples, 0.05%)</title><rect x="1026.8" y="2019.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1029.8" y="2030.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1026.8" y="2003.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1029.8" y="2014.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1026.8" y="1987.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1029.8" y="1998.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1027.1" y="2003.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1030.1" y="2014.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1027.1" y="1987.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1030.1" y="1998.0"></text>
</g>
<g>
<title>TypePtr::xmeet_speculative(TypePtr const*) const (1 samples, 0.02%)</title><rect x="1027.1" y="1971.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1030.1" y="1982.0"></text>
</g>
<g>
<title>PhiNode::is_diamond_phi(bool) const (1 samples, 0.02%)</title><rect x="1027.4" y="2019.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1030.4" y="2030.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (10 samples, 0.24%)</title><rect x="1027.7" y="2019.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1030.7" y="2030.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.02%)</title><rect x="1028.0" y="2003.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1031.0" y="2014.0"></text>
</g>
<g>
<title>Node::is_dead_loop_safe() const (1 samples, 0.02%)</title><rect x="1028.3" y="2003.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1031.3" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.05%)</title><rect x="1028.6" y="2003.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1031.6" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1028.8" y="1987.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1031.8" y="1998.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*, PhaseGVN*) (1 samples, 0.02%)</title><rect x="1028.8" y="1971.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1031.8" y="1982.0"></text>
</g>
<g>
<title>Node::set_req_X(unsigned int, Node*, PhaseIterGVN*) (1 samples, 0.02%)</title><rect x="1028.8" y="1955.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1031.8" y="1966.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.02%)</title><rect x="1028.8" y="1939.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1031.8" y="1950.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.02%)</title><rect x="1029.1" y="2003.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1032.1" y="2014.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const [clone .part.0] (1 samples, 0.02%)</title><rect x="1029.4" y="2003.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1032.4" y="2014.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_from_root(PhaseGVN const*) const (2 samples, 0.05%)</title><rect x="1029.7" y="2003.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1032.7" y="2014.0"></text>
</g>
<g>
<title>RegionNode::optimize_trichotomy(PhaseIterGVN*) (1 samples, 0.02%)</title><rect x="1030.3" y="2003.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1033.3" y="2014.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (4 samples, 0.10%)</title><rect x="1030.6" y="2019.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1033.6" y="2030.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseGVN*, bool) [clone .part.0] (4 samples, 0.10%)</title><rect x="1030.6" y="2003.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1033.6" y="2014.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, PhaseGVN*) (4 samples, 0.10%)</title><rect x="1030.6" y="1987.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1033.6" y="1998.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.0] (4 samples, 0.10%)</title><rect x="1030.6" y="1971.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1033.6" y="1982.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (4 samples, 0.10%)</title><rect x="1030.6" y="1955.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1033.6" y="1966.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_macro_nodes() (1 samples, 0.02%)</title><rect x="1031.7" y="2051.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1034.7" y="2062.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_allocate_node(AllocateNode*) [clone .part.0] (1 samples, 0.02%)</title><rect x="1031.7" y="2035.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1034.7" y="2046.0"></text>
</g>
<g>
<title>PhaseMacroExpand::process_users_of_allocation(CallNode*) (1 samples, 0.02%)</title><rect x="1031.7" y="2019.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1034.7" y="2030.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.02%)</title><rect x="1031.7" y="2003.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1034.7" y="2014.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (10 samples, 0.24%)</title><rect x="1032.0" y="2051.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1035.0" y="2062.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.02%)</title><rect x="1032.0" y="2035.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1035.0" y="2046.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.10%)</title><rect x="1032.3" y="2035.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1035.3" y="2046.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.10%)</title><rect x="1032.3" y="2019.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1035.3" y="2030.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1032.3" y="2003.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1035.3" y="2014.0"></text>
</g>
<g>
<title>LoadNode::is_new_object_mark_load(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1032.3" y="1987.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1035.3" y="1998.0"></text>
</g>
<g>
<title>Node::destruct(PhaseValues*) (1 samples, 0.02%)</title><rect x="1032.6" y="2003.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1035.6" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.02%)</title><rect x="1032.9" y="2003.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1035.9" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1033.1" y="2003.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1036.1" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1033.1" y="1987.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1036.1" y="1998.0"></text>
</g>
<g>
<title>Compile::remove_useless_node(Node*) (1 samples, 0.02%)</title><rect x="1033.1" y="1971.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1036.1" y="1982.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_array(AllocateArrayNode*) (1 samples, 0.02%)</title><rect x="1033.4" y="2035.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1036.4" y="2046.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_Type() (1 samples, 0.02%)</title><rect x="1033.4" y="2019.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1036.4" y="2030.0"></text>
</g>
<g>
<title>TypeTuple::make(unsigned int, Type const**) (1 samples, 0.02%)</title><rect x="1033.4" y="2003.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1036.4" y="2014.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1033.4" y="1987.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1036.4" y="1998.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*, Node*) (2 samples, 0.05%)</title><rect x="1033.7" y="2035.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1036.7" y="2046.0"></text>
</g>
<g>
<title>BarrierSetC2::obj_allocate(PhaseMacroExpand*, Node*, Node*, Node*, Node*&amp;, Node*&amp;, Node*&amp;, Node*&amp;, long) const (1 samples, 0.02%)</title><rect x="1033.7" y="2019.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1036.7" y="2030.0"></text>
</g>
<g>
<title>PhaseMacroExpand::make_load(Node*, Node*, Node*, int, Type const*, BasicType) (1 samples, 0.02%)</title><rect x="1033.7" y="2003.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1036.7" y="2014.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool, unsigned char) (1 samples, 0.02%)</title><rect x="1033.7" y="1987.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1036.7" y="1998.0"></text>
</g>
<g>
<title>PhaseMacroExpand::migrate_outs(Node*, Node*) (1 samples, 0.02%)</title><rect x="1034.0" y="2019.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1037.0" y="2030.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.02%)</title><rect x="1034.0" y="2003.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1037.0" y="2014.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_subtypecheck_node(SubTypeCheckNode*) (2 samples, 0.05%)</title><rect x="1034.3" y="2035.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1037.3" y="2046.0"></text>
</g>
<g>
<title>PhaseIterGVN::register_new_node_with_optimizer(Node*, Node*) (1 samples, 0.02%)</title><rect x="1034.3" y="2019.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1037.3" y="2030.0"></text>
</g>
<g>
<title>ProjNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1034.3" y="2003.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1037.3" y="2014.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1034.6" y="2019.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1037.6" y="2030.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1034.6" y="2003.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1037.6" y="2014.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.05%)</title><rect x="1034.9" y="2051.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1037.9" y="2062.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.05%)</title><rect x="1034.9" y="2035.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1037.9" y="2046.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.02%)</title><rect x="1035.2" y="2019.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.2" y="2030.0"></text>
</g>
<g>
<title>StoreNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1035.4" y="2051.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1038.4" y="2062.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (4 samples, 0.10%)</title><rect x="1035.7" y="2067.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1038.7" y="2078.0"></text>
</g>
<g>
<title>CallGenerator::do_late_inline_helper() (4 samples, 0.10%)</title><rect x="1035.7" y="2051.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1038.7" y="2062.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1035.7" y="2035.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.7" y="2046.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1035.7" y="2019.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1038.7" y="2030.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1035.7" y="2003.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1038.7" y="2014.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1035.7" y="1987.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1038.7" y="1998.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1035.7" y="1971.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1038.7" y="1982.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1035.7" y="1955.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1038.7" y="1966.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1035.7" y="1939.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1038.7" y="1950.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1035.7" y="1923.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.7" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1035.7" y="1907.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1038.7" y="1918.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1035.7" y="1891.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1038.7" y="1902.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1035.7" y="1875.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1038.7" y="1886.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1035.7" y="1859.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.7" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1035.7" y="1843.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1038.7" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1035.7" y="1827.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.7" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1035.7" y="1811.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1038.7" y="1822.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1035.7" y="1795.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1038.7" y="1806.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1035.7" y="1779.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.7" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1035.7" y="1763.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1038.7" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1035.7" y="1747.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1038.7" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1035.7" y="1731.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.7" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1035.7" y="1715.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1038.7" y="1726.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1035.7" y="1699.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.7" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1035.7" y="1683.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1038.7" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1035.7" y="1667.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1038.7" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1035.7" y="1651.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1038.7" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1035.7" y="1635.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1038.7" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1035.7" y="1619.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1038.7" y="1630.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1035.7" y="1603.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1038.7" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1035.7" y="1587.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1038.7" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1035.7" y="1571.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1038.7" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1035.7" y="1555.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.7" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1035.7" y="1539.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1038.7" y="1550.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1035.7" y="1523.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1038.7" y="1534.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1035.7" y="1507.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1038.7" y="1518.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1035.7" y="1491.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1038.7" y="1502.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1035.7" y="1475.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1038.7" y="1486.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1035.7" y="1459.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1038.7" y="1470.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.02%)</title><rect x="1035.7" y="1443.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1038.7" y="1454.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.02%)</title><rect x="1035.7" y="1427.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1038.7" y="1438.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1036.0" y="1587.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1039.0" y="1598.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1036.0" y="1571.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1039.0" y="1582.0"></text>
</g>
<g>
<title>ConstantPool::has_local_signature_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.02%)</title><rect x="1036.0" y="1555.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1039.0" y="1566.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1036.3" y="2035.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1039.3" y="2046.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1036.3" y="2019.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1039.3" y="2030.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1036.3" y="2003.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1039.3" y="2014.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1036.3" y="1987.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1039.3" y="1998.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1036.3" y="1971.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1039.3" y="1982.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1036.3" y="1955.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1039.3" y="1966.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1036.3" y="1939.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1039.3" y="1950.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1036.3" y="1923.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1039.3" y="1934.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1036.3" y="1907.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1039.3" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1036.3" y="1891.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1039.3" y="1902.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1036.3" y="1875.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1039.3" y="1886.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1036.3" y="1859.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1039.3" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1036.3" y="1843.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1039.3" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1036.3" y="1827.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1039.3" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1036.3" y="1811.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1039.3" y="1822.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1036.3" y="1795.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1039.3" y="1806.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1036.3" y="1779.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1039.3" y="1790.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_arraycopy() (1 samples, 0.02%)</title><rect x="1036.3" y="1763.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1039.3" y="1774.0"></text>
</g>
<g>
<title>GraphKit::load_array_length(Node*) (1 samples, 0.02%)</title><rect x="1036.3" y="1747.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1039.3" y="1758.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1036.6" y="1859.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1039.6" y="1870.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1036.6" y="1843.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1039.6" y="1854.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1036.6" y="1827.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1039.6" y="1838.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1036.6" y="1811.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1039.6" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1036.6" y="1795.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1039.6" y="1806.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1036.6" y="1779.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1039.6" y="1790.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1036.6" y="1763.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1039.6" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1036.6" y="1747.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1039.6" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1036.6" y="1731.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1039.6" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1036.6" y="1715.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1039.6" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1036.6" y="1699.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1039.6" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1036.6" y="1683.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1039.6" y="1694.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1036.6" y="1667.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1039.6" y="1678.0"></text>
</g>
<g>
<title>ConnectionGraph::has_candidates(Compile*) (1 samples, 0.02%)</title><rect x="1036.9" y="2067.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1039.9" y="2078.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (67 samples, 1.63%)</title><rect x="1037.2" y="2067.0" width="19.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1040.2" y="2078.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (67 samples, 1.63%)</title><rect x="1037.2" y="2051.0" width="19.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1040.2" y="2062.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (67 samples, 1.63%)</title><rect x="1037.2" y="2035.0" width="19.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1040.2" y="2046.0"></text>
</g>
<g>
<title>Parse::do_one_block() (67 samples, 1.63%)</title><rect x="1037.2" y="2019.0" width="19.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1040.2" y="2030.0"></text>
</g>
<g>
<title>Parse::do_call() (63 samples, 1.53%)</title><rect x="1037.2" y="2003.0" width="18.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1040.2" y="2014.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (3 samples, 0.07%)</title><rect x="1037.2" y="1987.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1040.2" y="1998.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (2 samples, 0.05%)</title><rect x="1037.2" y="1971.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1040.2" y="1982.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.05%)</title><rect x="1037.2" y="1955.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1040.2" y="1966.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.05%)</title><rect x="1037.2" y="1939.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1040.2" y="1950.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.05%)</title><rect x="1037.2" y="1923.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1040.2" y="1934.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.05%)</title><rect x="1037.2" y="1907.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1040.2" y="1918.0"></text>
</g>
<g>
<title>ciTypeFlow::build_loop_tree(ciTypeFlow::Block*) (1 samples, 0.02%)</title><rect x="1037.2" y="1891.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1040.2" y="1902.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1037.4" y="1891.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1040.4" y="1902.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1037.7" y="1971.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1040.7" y="1982.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1037.7" y="1955.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1040.7" y="1966.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="1037.7" y="1939.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1040.7" y="1950.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="1037.7" y="1923.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1040.7" y="1934.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.29%)</title><rect x="1038.0" y="1987.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1041.0" y="1998.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.29%)</title><rect x="1038.0" y="1971.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1041.0" y="1982.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.29%)</title><rect x="1038.0" y="1955.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1041.0" y="1966.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.29%)</title><rect x="1038.0" y="1939.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1041.0" y="1950.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.27%)</title><rect x="1038.0" y="1923.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.0" y="1934.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1038.0" y="1907.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1041.0" y="1918.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1038.0" y="1891.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.0" y="1902.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1038.0" y="1875.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.0" y="1886.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1038.0" y="1859.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1041.0" y="1870.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1038.0" y="1843.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1041.0" y="1854.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1038.0" y="1827.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1041.0" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1038.0" y="1811.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1041.0" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1038.0" y="1795.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1041.0" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1038.0" y="1779.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1041.0" y="1790.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="1038.0" y="1763.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.0" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1038.0" y="1747.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.0" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1038.0" y="1731.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1041.0" y="1742.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1038.0" y="1715.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.0" y="1726.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1038.0" y="1699.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.0" y="1710.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1038.0" y="1683.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1041.0" y="1694.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1038.0" y="1667.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1041.0" y="1678.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.02%)</title><rect x="1038.0" y="1651.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1041.0" y="1662.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.02%)</title><rect x="1038.0" y="1635.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1041.0" y="1646.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1038.0" y="1619.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.0" y="1630.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1038.0" y="1603.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1041.0" y="1614.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1038.0" y="1587.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1041.0" y="1598.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1038.0" y="1571.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1041.0" y="1582.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1038.0" y="1555.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1041.0" y="1566.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="1038.0" y="1539.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1041.0" y="1550.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1038.0" y="1523.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1041.0" y="1534.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1038.0" y="1507.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1041.0" y="1518.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1038.0" y="1491.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1041.0" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1038.3" y="1907.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1041.3" y="1918.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.12%)</title><rect x="1038.3" y="1891.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1041.3" y="1902.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.12%)</title><rect x="1038.3" y="1875.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.3" y="1886.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.12%)</title><rect x="1038.3" y="1859.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1041.3" y="1870.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.10%)</title><rect x="1038.3" y="1843.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.3" y="1854.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.3" y="1827.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.3" y="1838.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.3" y="1811.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.3" y="1822.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.3" y="1795.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1041.3" y="1806.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.3" y="1779.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1041.3" y="1790.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.3" y="1763.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1041.3" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.3" y="1747.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1041.3" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.3" y="1731.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1041.3" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.3" y="1715.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.3" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.3" y="1699.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1041.3" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.3" y="1683.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1041.3" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.3" y="1667.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1041.3" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.3" y="1651.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.3" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.3" y="1635.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1041.3" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.3" y="1619.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1041.3" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.3" y="1603.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1041.3" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.3" y="1587.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.3" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.3" y="1571.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1041.3" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.3" y="1555.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1041.3" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.3" y="1539.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.3" y="1550.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.02%)</title><rect x="1038.3" y="1523.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.3" y="1534.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1038.3" y="1507.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.3" y="1518.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1038.3" y="1491.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.3" y="1502.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1038.3" y="1475.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.3" y="1486.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.02%)</title><rect x="1038.3" y="1459.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1041.3" y="1470.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1038.3" y="1443.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1041.3" y="1454.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1038.3" y="1427.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1041.3" y="1438.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1038.3" y="1411.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1041.3" y="1422.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1038.3" y="1395.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1041.3" y="1406.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1038.6" y="1827.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.6" y="1838.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1038.6" y="1811.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1041.6" y="1822.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1038.6" y="1795.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1041.6" y="1806.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1038.6" y="1779.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1041.6" y="1790.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1038.6" y="1763.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1041.6" y="1774.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1038.6" y="1747.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1041.6" y="1758.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.6" y="1731.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.6" y="1742.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.6" y="1715.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1041.6" y="1726.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.6" y="1699.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.6" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.6" y="1683.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.6" y="1694.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.6" y="1667.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.6" y="1678.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.6" y="1651.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.6" y="1662.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.6" y="1635.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1041.6" y="1646.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.6" y="1619.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1041.6" y="1630.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.6" y="1603.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1041.6" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.6" y="1587.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.6" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.6" y="1571.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.6" y="1582.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.6" y="1555.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1041.6" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.6" y="1539.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1041.6" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.6" y="1523.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.6" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.6" y="1507.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.6" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.6" y="1491.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1041.6" y="1502.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.6" y="1475.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1041.6" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.6" y="1459.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1041.6" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.6" y="1443.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1041.6" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.6" y="1427.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1041.6" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.6" y="1411.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1041.6" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.6" y="1395.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1041.6" y="1406.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1038.6" y="1379.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1041.6" y="1390.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1038.6" y="1363.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.6" y="1374.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1038.6" y="1347.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1041.6" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1038.6" y="1331.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.6" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1038.6" y="1315.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1041.6" y="1326.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1038.6" y="1299.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1041.6" y="1310.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.9" y="1731.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1041.9" y="1742.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.9" y="1715.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1041.9" y="1726.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.9" y="1699.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.9" y="1710.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.9" y="1683.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.9" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.9" y="1667.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.9" y="1678.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.9" y="1651.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1041.9" y="1662.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.9" y="1635.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1041.9" y="1646.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.9" y="1619.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.9" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.9" y="1603.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1041.9" y="1614.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.9" y="1587.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1041.9" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.9" y="1571.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1041.9" y="1582.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.9" y="1555.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1041.9" y="1566.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.9" y="1539.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.9" y="1550.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1038.9" y="1523.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1041.9" y="1534.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1038.9" y="1507.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.9" y="1518.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1038.9" y="1491.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.9" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1038.9" y="1475.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1041.9" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1038.9" y="1459.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1041.9" y="1470.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1038.9" y="1443.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.9" y="1454.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1038.9" y="1427.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1041.9" y="1438.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1038.9" y="1411.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.9" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1038.9" y="1395.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1041.9" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1038.9" y="1379.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.9" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1038.9" y="1363.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1041.9" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1038.9" y="1347.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1041.9" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1038.9" y="1331.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1041.9" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1038.9" y="1315.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1041.9" y="1326.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1038.9" y="1299.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.9" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1038.9" y="1283.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.9" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1038.9" y="1267.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.9" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1038.9" y="1251.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.9" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1038.9" y="1235.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1041.9" y="1246.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1038.9" y="1219.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.9" y="1230.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.02%)</title><rect x="1038.9" y="1203.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1041.9" y="1214.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1038.9" y="1187.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1041.9" y="1198.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1039.2" y="1811.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1042.2" y="1822.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1039.2" y="1795.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1042.2" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1039.2" y="1779.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1042.2" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1039.2" y="1763.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1042.2" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1039.2" y="1747.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1042.2" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1039.2" y="1731.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1042.2" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1039.2" y="1715.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1042.2" y="1726.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1039.2" y="1699.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1042.2" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1039.2" y="1683.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1042.2" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1039.2" y="1667.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1042.2" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1039.2" y="1651.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1042.2" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1039.2" y="1635.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1042.2" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1039.2" y="1619.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1042.2" y="1630.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1039.2" y="1603.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1042.2" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1039.2" y="1587.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1042.2" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1039.2" y="1571.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1042.2" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1039.2" y="1555.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1042.2" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1039.2" y="1539.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1042.2" y="1550.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1039.2" y="1523.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1042.2" y="1534.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1039.2" y="1507.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1042.2" y="1518.0"></text>
</g>
<g>
<title>GraphKit::make_constant_from_field(ciField*, Node*) (1 samples, 0.02%)</title><rect x="1039.2" y="1491.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1042.2" y="1502.0"></text>
</g>
<g>
<title>Type::make_constant_from_field(ciField*, ciInstance*, BasicType, bool) (1 samples, 0.02%)</title><rect x="1039.2" y="1475.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1042.2" y="1486.0"></text>
</g>
<g>
<title>Type::make_from_constant(ciConstant, bool, int, bool, bool) (1 samples, 0.02%)</title><rect x="1039.2" y="1459.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1042.2" y="1470.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_constant(ciObject*, bool) (1 samples, 0.02%)</title><rect x="1039.2" y="1443.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1042.2" y="1454.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1039.2" y="1427.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1042.2" y="1438.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1039.2" y="1411.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1042.2" y="1422.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1039.5" y="1843.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1042.5" y="1854.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1039.5" y="1827.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1042.5" y="1838.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1039.5" y="1811.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1042.5" y="1822.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1039.5" y="1795.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1042.5" y="1806.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1039.5" y="1779.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1042.5" y="1790.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.02%)</title><rect x="1039.5" y="1763.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1042.5" y="1774.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.02%)</title><rect x="1039.5" y="1747.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1042.5" y="1758.0"></text>
</g>
<g>
<title>IdealKit::copy_cvstate() (1 samples, 0.02%)</title><rect x="1039.5" y="1731.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1042.5" y="1742.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.02%)</title><rect x="1039.5" y="1715.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1042.5" y="1726.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.02%)</title><rect x="1039.5" y="1699.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1042.5" y="1710.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.10%)</title><rect x="1039.7" y="1907.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1042.7" y="1918.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1039.7" y="1891.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1042.7" y="1902.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1039.7" y="1875.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1042.7" y="1886.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1039.7" y="1859.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1042.7" y="1870.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1039.7" y="1843.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1042.7" y="1854.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="1039.7" y="1827.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1042.7" y="1838.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1039.7" y="1811.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1042.7" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1039.7" y="1795.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1042.7" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1039.7" y="1779.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1042.7" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1039.7" y="1763.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1042.7" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1039.7" y="1747.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1042.7" y="1758.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1039.7" y="1731.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1042.7" y="1742.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1039.7" y="1715.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1042.7" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1039.7" y="1699.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1042.7" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1039.7" y="1683.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1042.7" y="1694.0"></text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.02%)</title><rect x="1039.7" y="1667.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1042.7" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.0" y="1667.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1043.0" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.0" y="1651.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1043.0" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1040.0" y="1635.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1043.0" y="1646.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.0" y="1619.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1043.0" y="1630.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.0" y="1603.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1043.0" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1040.0" y="1587.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1043.0" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.0" y="1571.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1043.0" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.0" y="1555.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1043.0" y="1566.0"></text>
</g>
<g>
<title>Parse::do_anewarray() (1 samples, 0.02%)</title><rect x="1040.0" y="1539.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1043.0" y="1550.0"></text>
</g>
<g>
<title>GraphKit::new_array(Node*, Node*, int, Node**, bool) (1 samples, 0.02%)</title><rect x="1040.0" y="1523.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1043.0" y="1534.0"></text>
</g>
<g>
<title>GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool) (1 samples, 0.02%)</title><rect x="1040.0" y="1507.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1043.0" y="1518.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.0] (1 samples, 0.02%)</title><rect x="1040.0" y="1491.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1043.0" y="1502.0"></text>
</g>
<g>
<title>TypeInstPtr::cast_to_ptr_type(TypePtr::PTR) const (1 samples, 0.02%)</title><rect x="1040.0" y="1475.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1043.0" y="1486.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.02%)</title><rect x="1040.3" y="1747.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1043.3" y="1758.0"></text>
</g>
<g>
<title>Parse::merge_memory_edges(MergeMemNode*, int, bool) (1 samples, 0.02%)</title><rect x="1040.3" y="1731.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1043.3" y="1742.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1891.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1043.6" y="1902.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1875.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.6" y="1886.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1040.6" y="1859.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1043.6" y="1870.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.6" y="1843.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1043.6" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.6" y="1827.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1043.6" y="1838.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1040.6" y="1811.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1043.6" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1795.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1043.6" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1040.6" y="1779.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1043.6" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.6" y="1763.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1043.6" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.6" y="1747.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1043.6" y="1758.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1040.6" y="1731.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1043.6" y="1742.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1715.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1043.6" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1699.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.6" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1040.6" y="1683.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1043.6" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.6" y="1667.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.6" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.6" y="1651.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.6" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1040.6" y="1635.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1043.6" y="1646.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1619.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.6" y="1630.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1603.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1043.6" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1040.6" y="1587.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1043.6" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.6" y="1571.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1043.6" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.6" y="1555.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1043.6" y="1566.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1040.6" y="1539.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1043.6" y="1550.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1523.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1043.6" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1507.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1043.6" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1040.6" y="1491.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1043.6" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.6" y="1475.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1043.6" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.6" y="1459.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1043.6" y="1470.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1040.6" y="1443.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.6" y="1454.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1427.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1043.6" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1411.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1043.6" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1040.6" y="1395.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1043.6" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.6" y="1379.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1043.6" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.6" y="1363.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1043.6" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1040.6" y="1347.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1043.6" y="1358.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1331.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1043.6" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1315.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1043.6" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1040.6" y="1299.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1043.6" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.6" y="1283.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1043.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.6" y="1267.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1043.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1040.6" y="1251.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.6" y="1262.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1235.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1043.6" y="1246.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1040.6" y="1219.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1043.6" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1040.6" y="1203.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1043.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1040.6" y="1187.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1043.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1040.6" y="1171.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1043.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1040.6" y="1155.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1043.6" y="1166.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*) (1 samples, 0.02%)</title><rect x="1040.6" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.6" y="1150.0"></text>
</g>
<g>
<title>Parse::sharpen_type_after_if(BoolTest::mask, Node*, Type const*, Node*, Type const*) (1 samples, 0.02%)</title><rect x="1040.6" y="1123.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1043.6" y="1134.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.02%)</title><rect x="1040.6" y="1107.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1043.6" y="1118.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1040.6" y="1091.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1043.6" y="1102.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1040.6" y="1075.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1043.6" y="1086.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1040.6" y="1059.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1043.6" y="1070.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1040.6" y="1043.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1043.6" y="1054.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1040.9" y="1907.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1043.9" y="1918.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1040.9" y="1891.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1043.9" y="1902.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.02%)</title><rect x="1040.9" y="1875.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1043.9" y="1886.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1040.9" y="1859.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1043.9" y="1870.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="1040.9" y="1843.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1043.9" y="1854.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="1040.9" y="1827.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1043.9" y="1838.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, JavaThread*) (1 samples, 0.02%)</title><rect x="1040.9" y="1811.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1043.9" y="1822.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1041.2" y="1923.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1044.2" y="1934.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="1041.2" y="1907.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1044.2" y="1918.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1041.2" y="1891.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1044.2" y="1902.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1041.2" y="1875.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1044.2" y="1886.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1041.2" y="1859.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1044.2" y="1870.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.02%)</title><rect x="1041.2" y="1843.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1044.2" y="1854.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_in_package_impl(char const*, int) (1 samples, 0.02%)</title><rect x="1041.2" y="1827.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1044.2" y="1838.0"></text>
</g>
<g>
<title>ciSymbol::starts_with(char const*, int) const (1 samples, 0.02%)</title><rect x="1041.2" y="1811.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1044.2" y="1822.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1041.2" y="1795.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1044.2" y="1806.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1041.2" y="1779.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.2" y="1790.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1041.2" y="1763.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1044.2" y="1774.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1041.2" y="1747.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1044.2" y="1758.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1041.2" y="1731.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1044.2" y="1742.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1041.2" y="1715.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1044.2" y="1726.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1041.2" y="1699.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1044.2" y="1710.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (48 samples, 1.17%)</title><rect x="1041.5" y="1987.0" width="13.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1044.5" y="1998.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.0] (3 samples, 0.07%)</title><rect x="1041.5" y="1971.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1044.5" y="1982.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) [clone .part.0] (1 samples, 0.02%)</title><rect x="1041.5" y="1955.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1044.5" y="1966.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1041.5" y="1939.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1044.5" y="1950.0"></text>
</g>
<g>
<title>GraphKit::set_predefined_input_for_runtime_call(SafePointNode*, Node*) (1 samples, 0.02%)</title><rect x="1041.5" y="1923.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1044.5" y="1934.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1041.5" y="1907.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1044.5" y="1918.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1041.7" y="1955.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1044.7" y="1966.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.02%)</title><rect x="1042.0" y="1955.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1045.0" y="1966.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1042.0" y="1939.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1045.0" y="1950.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1042.0" y="1923.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1045.0" y="1934.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1042.0" y="1907.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1045.0" y="1918.0"></text>
</g>
<g>
<title>TypeInstPtr::eq(Type const*) const (1 samples, 0.02%)</title><rect x="1042.0" y="1891.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1045.0" y="1902.0"></text>
</g>
<g>
<title>GraphKit::subtype_check_receiver(Node*, ciKlass*, Node**) (1 samples, 0.02%)</title><rect x="1042.3" y="1971.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1045.3" y="1982.0"></text>
</g>
<g>
<title>GraphKit::gen_subtype_check(Node*, Node*) (1 samples, 0.02%)</title><rect x="1042.3" y="1955.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1045.3" y="1966.0"></text>
</g>
<g>
<title>IfNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1042.3" y="1939.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1045.3" y="1950.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (2 samples, 0.05%)</title><rect x="1042.6" y="1971.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1045.6" y="1982.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.02%)</title><rect x="1042.6" y="1955.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1045.6" y="1966.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1042.6" y="1939.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1045.6" y="1950.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1042.6" y="1923.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1045.6" y="1934.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1042.9" y="1955.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1045.9" y="1966.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1042.9" y="1939.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1045.9" y="1950.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (30 samples, 0.73%)</title><rect x="1043.2" y="1971.0" width="8.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1046.2" y="1982.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (30 samples, 0.73%)</title><rect x="1043.2" y="1955.0" width="8.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1046.2" y="1966.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.02%)</title><rect x="1043.2" y="1939.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.2" y="1950.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1043.2" y="1923.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1046.2" y="1934.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method_index() (1 samples, 0.02%)</title><rect x="1043.2" y="1907.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.2" y="1918.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (29 samples, 0.70%)</title><rect x="1043.5" y="1939.0" width="8.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.5" y="1950.0"></text>
</g>
<g>
<title>Parse::do_one_block() (29 samples, 0.70%)</title><rect x="1043.5" y="1923.0" width="8.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.5" y="1934.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.02%)</title><rect x="1043.5" y="1907.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1046.5" y="1918.0"></text>
</g>
<g>
<title>Parse::array_store_check() (1 samples, 0.02%)</title><rect x="1043.5" y="1891.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1046.5" y="1902.0"></text>
</g>
<g>
<title>GraphKit::basic_plus_adr(Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1043.5" y="1875.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1046.5" y="1886.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1043.5" y="1859.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.5" y="1870.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.02%)</title><rect x="1043.5" y="1843.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.5" y="1854.0"></text>
</g>
<g>
<title>Parse::do_call() (27 samples, 0.66%)</title><rect x="1043.8" y="1907.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.8" y="1918.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (4 samples, 0.10%)</title><rect x="1043.8" y="1891.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1046.8" y="1902.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (2 samples, 0.05%)</title><rect x="1044.0" y="1875.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1047.0" y="1886.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (2 samples, 0.05%)</title><rect x="1044.0" y="1859.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.0" y="1870.0"></text>
</g>
<g>
<title>InlineTree::build_inline_tree_for_callee(ciMethod*, JVMState*, int) (1 samples, 0.02%)</title><rect x="1044.0" y="1843.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1047.0" y="1854.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1044.3" y="1843.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1047.3" y="1854.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1044.3" y="1827.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1047.3" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1044.3" y="1811.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1047.3" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1044.3" y="1795.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1047.3" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1044.3" y="1779.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1047.3" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1044.3" y="1763.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.3" y="1774.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1044.3" y="1747.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1047.3" y="1758.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1044.3" y="1731.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.3" y="1742.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1044.3" y="1715.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1047.3" y="1726.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.02%)</title><rect x="1044.3" y="1699.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1047.3" y="1710.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1044.3" y="1683.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1047.3" y="1694.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="1044.3" y="1667.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1047.3" y="1678.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="1044.3" y="1651.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1047.3" y="1662.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.02%)</title><rect x="1044.3" y="1635.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1047.3" y="1646.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="1044.3" y="1619.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1047.3" y="1630.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1044.3" y="1603.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1047.3" y="1614.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1044.6" y="1875.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1047.6" y="1886.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1044.6" y="1859.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1047.6" y="1870.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1044.6" y="1843.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1047.6" y="1854.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1044.6" y="1827.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1047.6" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1044.6" y="1811.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1047.6" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1044.6" y="1795.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1047.6" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1044.6" y="1779.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1047.6" y="1790.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1044.9" y="1891.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1047.9" y="1902.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_unsafe_load_store(BasicType, LibraryCallKit::LoadStoreKind, LibraryCallKit::AccessKind) [clone .part.0] (1 samples, 0.02%)</title><rect x="1044.9" y="1875.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.9" y="1886.0"></text>
</g>
<g>
<title>GraphKit::access_atomic_cmpxchg_bool_at(Node*, Node*, TypePtr const*, int, Node*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1044.9" y="1859.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1047.9" y="1870.0"></text>
</g>
<g>
<title>BarrierSetC2::atomic_cmpxchg_bool_at(C2AtomicParseAccess&amp;, Node*, Node*, Type const*) const (1 samples, 0.02%)</title><rect x="1044.9" y="1843.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1047.9" y="1854.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar(int, Node*) (1 samples, 0.02%)</title><rect x="1044.9" y="1827.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1047.9" y="1838.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory_call(Node*, bool) (1 samples, 0.02%)</title><rect x="1044.9" y="1811.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.9" y="1822.0"></text>
</g>
<g>
<title>Type::singleton() const (1 samples, 0.02%)</title><rect x="1044.9" y="1795.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.9" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1045.2" y="1891.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.2" y="1902.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1045.2" y="1875.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1048.2" y="1886.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1045.2" y="1859.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.2" y="1870.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1045.2" y="1843.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1048.2" y="1854.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1045.2" y="1827.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.2" y="1838.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1045.2" y="1811.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1048.2" y="1822.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1045.2" y="1795.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1048.2" y="1806.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1045.2" y="1779.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1048.2" y="1790.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1045.2" y="1763.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.2" y="1774.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1045.2" y="1747.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1048.2" y="1758.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1045.2" y="1731.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1048.2" y="1742.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.02%)</title><rect x="1045.2" y="1715.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1048.2" y="1726.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.0] (1 samples, 0.02%)</title><rect x="1045.2" y="1699.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1048.2" y="1710.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1045.2" y="1683.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1048.2" y="1694.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1045.5" y="1811.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1048.5" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1045.5" y="1795.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1048.5" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1045.5" y="1779.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.5" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1045.5" y="1763.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1048.5" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1045.5" y="1747.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1048.5" y="1758.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.02%)</title><rect x="1045.5" y="1731.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1048.5" y="1742.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.02%)</title><rect x="1045.5" y="1715.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.5" y="1726.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.02%)</title><rect x="1045.5" y="1699.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.5" y="1710.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1045.5" y="1683.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1048.5" y="1694.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (20 samples, 0.49%)</title><rect x="1045.8" y="1891.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.8" y="1902.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.27%)</title><rect x="1045.8" y="1875.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1048.8" y="1886.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.27%)</title><rect x="1045.8" y="1859.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1048.8" y="1870.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.27%)</title><rect x="1045.8" y="1843.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1048.8" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.27%)</title><rect x="1045.8" y="1827.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.8" y="1838.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.22%)</title><rect x="1045.8" y="1811.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.8" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1045.8" y="1795.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.8" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1045.8" y="1779.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.8" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1045.8" y="1763.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.8" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1045.8" y="1747.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1048.8" y="1758.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1045.8" y="1731.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.8" y="1742.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1045.8" y="1715.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1048.8" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1045.8" y="1699.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1048.8" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1045.8" y="1683.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1048.8" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1045.8" y="1667.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1048.8" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1045.8" y="1651.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1048.8" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1045.8" y="1635.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.8" y="1646.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1045.8" y="1619.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1048.8" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1045.8" y="1603.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.8" y="1614.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1045.8" y="1587.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1048.8" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1045.8" y="1571.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1048.8" y="1582.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1045.8" y="1555.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1048.8" y="1566.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1045.8" y="1539.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1048.8" y="1550.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1045.8" y="1523.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1048.8" y="1534.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1045.8" y="1507.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1048.8" y="1518.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1045.8" y="1491.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1048.8" y="1502.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1045.8" y="1475.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1048.8" y="1486.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1045.8" y="1459.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.8" y="1470.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1045.8" y="1443.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1048.8" y="1454.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1045.8" y="1427.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1048.8" y="1438.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseGVN*, bool) [clone .part.0] (1 samples, 0.02%)</title><rect x="1045.8" y="1411.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1048.8" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, PhaseGVN*) (1 samples, 0.02%)</title><rect x="1045.8" y="1395.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1048.8" y="1406.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.0] (1 samples, 0.02%)</title><rect x="1045.8" y="1379.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.8" y="1390.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1045.8" y="1363.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1048.8" y="1374.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (8 samples, 0.19%)</title><rect x="1046.0" y="1795.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1049.0" y="1806.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1046.0" y="1779.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1049.0" y="1790.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.02%)</title><rect x="1046.0" y="1763.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1049.0" y="1774.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.0] (1 samples, 0.02%)</title><rect x="1046.0" y="1747.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1049.0" y="1758.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1046.0" y="1731.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1049.0" y="1742.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1046.0" y="1715.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.0" y="1726.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1046.0" y="1699.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1049.0" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1046.3" y="1779.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.3" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.12%)</title><rect x="1046.3" y="1763.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1049.3" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.12%)</title><rect x="1046.3" y="1747.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1049.3" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.12%)</title><rect x="1046.3" y="1731.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1049.3" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.12%)</title><rect x="1046.3" y="1715.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1049.3" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1046.3" y="1699.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1049.3" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1046.3" y="1683.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1049.3" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1046.3" y="1667.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1049.3" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1046.3" y="1651.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1049.3" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1046.3" y="1635.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1049.3" y="1646.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1046.3" y="1619.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1049.3" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1046.3" y="1603.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1049.3" y="1614.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1046.3" y="1587.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1049.3" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1046.3" y="1571.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1049.3" y="1582.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1046.3" y="1555.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1049.3" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1046.3" y="1539.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1049.3" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1046.3" y="1523.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1049.3" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1046.3" y="1507.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.3" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1046.3" y="1491.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1049.3" y="1502.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1046.3" y="1475.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1049.3" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1046.3" y="1459.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1049.3" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1046.3" y="1443.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.3" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1046.3" y="1427.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.3" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1046.3" y="1411.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1049.3" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1046.3" y="1395.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1049.3" y="1406.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1046.3" y="1379.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1049.3" y="1390.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1046.3" y="1363.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1049.3" y="1374.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1046.3" y="1347.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1049.3" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1046.3" y="1331.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1049.3" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1046.3" y="1315.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1049.3" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1046.3" y="1299.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1049.3" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1046.3" y="1283.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1049.3" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1046.3" y="1267.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1049.3" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1046.3" y="1251.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1049.3" y="1262.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1046.3" y="1235.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1049.3" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1046.3" y="1219.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1049.3" y="1230.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1046.3" y="1203.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1049.3" y="1214.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1046.3" y="1187.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1049.3" y="1198.0"></text>
</g>
<g>
<title>CompilerOracle::tag_blackhole_if_possible(methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="1046.3" y="1171.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1049.3" y="1182.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.10%)</title><rect x="1046.6" y="1699.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1049.6" y="1710.0"></text>
</g>
<g>
<title>GraphKit::subtype_check_receiver(Node*, ciKlass*, Node**) (1 samples, 0.02%)</title><rect x="1046.6" y="1683.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.6" y="1694.0"></text>
</g>
<g>
<title>TypeKlassPtr::as_instance_type() const (1 samples, 0.02%)</title><rect x="1046.6" y="1667.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1049.6" y="1678.0"></text>
</g>
<g>
<title>TypeInstPtr::cast_to_ptr_type(TypePtr::PTR) const (1 samples, 0.02%)</title><rect x="1046.6" y="1651.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1049.6" y="1662.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.02%)</title><rect x="1046.6" y="1635.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1049.6" y="1646.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1046.9" y="1683.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1049.9" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1046.9" y="1667.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1049.9" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1046.9" y="1651.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.9" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1046.9" y="1635.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.9" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1046.9" y="1619.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1049.9" y="1630.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1046.9" y="1603.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1049.9" y="1614.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1046.9" y="1587.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1049.9" y="1598.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1046.9" y="1571.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1049.9" y="1582.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1046.9" y="1555.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.9" y="1566.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1046.9" y="1539.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1049.9" y="1550.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1046.9" y="1523.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1049.9" y="1534.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1046.9" y="1507.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1049.9" y="1518.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1046.9" y="1491.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1049.9" y="1502.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1046.9" y="1475.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1049.9" y="1486.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1046.9" y="1459.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.9" y="1470.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1046.9" y="1443.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1049.9" y="1454.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1046.9" y="1427.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1049.9" y="1438.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1046.9" y="1411.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1049.9" y="1422.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1046.9" y="1395.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.9" y="1406.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1046.9" y="1379.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1049.9" y="1390.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1046.9" y="1363.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1049.9" y="1374.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="1046.9" y="1347.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.9" y="1358.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="1046.9" y="1331.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1049.9" y="1342.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.02%)</title><rect x="1047.2" y="1651.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.2" y="1662.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1047.2" y="1635.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1050.2" y="1646.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1047.2" y="1619.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.2" y="1630.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1683.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1050.5" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1667.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1050.5" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.5" y="1651.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1050.5" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.5" y="1635.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.5" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.5" y="1619.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.5" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.5" y="1603.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.5" y="1614.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1587.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1050.5" y="1598.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1571.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.5" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1555.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.5" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.5" y="1539.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.5" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.5" y="1523.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.5" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.5" y="1507.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.5" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.5" y="1491.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.5" y="1502.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1475.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1050.5" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1459.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.5" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.5" y="1443.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.5" y="1427.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.5" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.5" y="1411.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.5" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.5" y="1395.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1050.5" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1379.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1050.5" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.5" y="1363.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1050.5" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.5" y="1347.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.5" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.5" y="1331.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1050.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.5" y="1315.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1050.5" y="1326.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1299.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.5" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1283.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.5" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.5" y="1267.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1050.5" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.5" y="1251.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.5" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.5" y="1235.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1050.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.5" y="1219.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.5" y="1230.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1203.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1050.5" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.5" y="1187.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.5" y="1171.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1050.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.5" y="1155.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.5" y="1166.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.5" y="1139.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.5" y="1150.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.5" y="1123.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1050.5" y="1134.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_arraycopy() (1 samples, 0.02%)</title><rect x="1047.5" y="1107.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.5" y="1118.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.02%)</title><rect x="1047.5" y="1091.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.5" y="1102.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.02%)</title><rect x="1047.5" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1050.5" y="1086.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1047.5" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.5" y="1070.0"></text>
</g>
<g>
<title>TypeNarrowKlass::make(TypePtr const*) (1 samples, 0.02%)</title><rect x="1047.5" y="1043.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1050.5" y="1054.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1047.5" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.5" y="1038.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1047.8" y="1779.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.8" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1763.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.8" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.8" y="1747.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1050.8" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.8" y="1731.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.8" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.8" y="1715.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1050.8" y="1726.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.8" y="1699.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1050.8" y="1710.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1683.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.8" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1667.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1050.8" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.8" y="1651.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.8" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.8" y="1635.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1050.8" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.8" y="1619.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1050.8" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.8" y="1603.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.8" y="1614.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1587.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1050.8" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1571.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1050.8" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.8" y="1555.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.8" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.8" y="1539.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.8" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.8" y="1523.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1050.8" y="1534.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.8" y="1507.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.8" y="1518.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1491.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.8" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1475.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1050.8" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.8" y="1459.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.8" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.8" y="1443.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.8" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.8" y="1427.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.8" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.8" y="1411.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1050.8" y="1422.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1395.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1050.8" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1379.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.8" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.8" y="1363.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.8" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.8" y="1347.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.8" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.8" y="1331.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.8" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.8" y="1315.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.8" y="1326.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1299.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1050.8" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1283.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1050.8" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1047.8" y="1267.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.8" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1047.8" y="1251.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.8" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1047.8" y="1235.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.8" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1047.8" y="1219.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.8" y="1230.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1047.8" y="1203.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.8" y="1214.0"></text>
</g>
<g>
<title>GraphKit::subtype_check_receiver(Node*, ciKlass*, Node**) (1 samples, 0.02%)</title><rect x="1047.8" y="1187.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.8" y="1198.0"></text>
</g>
<g>
<title>GraphKit::gen_subtype_check(Node*, Node*) (1 samples, 0.02%)</title><rect x="1047.8" y="1171.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.8" y="1182.0"></text>
</g>
<g>
<title>Node::Node(Node*) (1 samples, 0.02%)</title><rect x="1047.8" y="1155.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1050.8" y="1166.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1048.1" y="1763.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1051.1" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1048.1" y="1747.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1051.1" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1048.1" y="1731.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1051.1" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1048.1" y="1715.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1051.1" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1048.1" y="1699.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1051.1" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1048.1" y="1683.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1051.1" y="1694.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1048.1" y="1667.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1051.1" y="1678.0"></text>
</g>
<g>
<title>UncommonTrapCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1048.1" y="1651.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1051.1" y="1662.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1048.1" y="1635.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1051.1" y="1646.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1048.1" y="1619.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1051.1" y="1630.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1048.1" y="1603.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1051.1" y="1614.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.02%)</title><rect x="1048.1" y="1587.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1051.1" y="1598.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (2 samples, 0.05%)</title><rect x="1048.3" y="1811.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1051.3" y="1822.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.02%)</title><rect x="1048.3" y="1795.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1051.3" y="1806.0"></text>
</g>
<g>
<title>PhiNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1048.3" y="1779.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1051.3" y="1790.0"></text>
</g>
<g>
<title>PreserveJVMState::PreserveJVMState(GraphKit*, bool) (1 samples, 0.02%)</title><rect x="1048.6" y="1795.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1051.6" y="1806.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1048.6" y="1779.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1051.6" y="1790.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1048.6" y="1763.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1051.6" y="1774.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (9 samples, 0.22%)</title><rect x="1048.9" y="1875.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1051.9" y="1886.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.22%)</title><rect x="1048.9" y="1859.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1051.9" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.22%)</title><rect x="1048.9" y="1843.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1051.9" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.22%)</title><rect x="1048.9" y="1827.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1051.9" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.22%)</title><rect x="1048.9" y="1811.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1051.9" y="1822.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.22%)</title><rect x="1048.9" y="1795.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1051.9" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1048.9" y="1779.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1051.9" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1048.9" y="1763.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1051.9" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1048.9" y="1747.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1051.9" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1048.9" y="1731.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1051.9" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1048.9" y="1715.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1051.9" y="1726.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1048.9" y="1699.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1051.9" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1048.9" y="1683.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1051.9" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1048.9" y="1667.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1051.9" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1048.9" y="1651.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1051.9" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1048.9" y="1635.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1051.9" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1048.9" y="1619.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1051.9" y="1630.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1048.9" y="1603.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1051.9" y="1614.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_native_clone(bool) (1 samples, 0.02%)</title><rect x="1048.9" y="1587.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1051.9" y="1598.0"></text>
</g>
<g>
<title>GraphKit::new_array(Node*, Node*, int, Node**, bool) (1 samples, 0.02%)</title><rect x="1048.9" y="1571.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1051.9" y="1582.0"></text>
</g>
<g>
<title>GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool) (1 samples, 0.02%)</title><rect x="1048.9" y="1555.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1051.9" y="1566.0"></text>
</g>
<g>
<title>MergeMemNode::set_memory_at(unsigned int, Node*) (1 samples, 0.02%)</title><rect x="1048.9" y="1539.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1051.9" y="1550.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (8 samples, 0.19%)</title><rect x="1049.2" y="1779.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1052.2" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.15%)</title><rect x="1049.2" y="1763.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.2" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.15%)</title><rect x="1049.2" y="1747.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1052.2" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.15%)</title><rect x="1049.2" y="1731.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1052.2" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.15%)</title><rect x="1049.2" y="1715.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1052.2" y="1726.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.15%)</title><rect x="1049.2" y="1699.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.2" y="1710.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.15%)</title><rect x="1049.2" y="1683.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1052.2" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.15%)</title><rect x="1049.2" y="1667.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1052.2" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.15%)</title><rect x="1049.2" y="1651.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1052.2" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.15%)</title><rect x="1049.2" y="1635.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1052.2" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.15%)</title><rect x="1049.2" y="1619.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1052.2" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.15%)</title><rect x="1049.2" y="1603.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1052.2" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1049.2" y="1587.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1052.2" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1049.2" y="1571.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1052.2" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1049.2" y="1555.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1052.2" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1049.2" y="1539.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.2" y="1550.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1049.2" y="1523.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1052.2" y="1534.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1049.2" y="1507.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1052.2" y="1518.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1049.2" y="1491.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1052.2" y="1502.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1049.2" y="1475.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1052.2" y="1486.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1049.2" y="1459.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1052.2" y="1470.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.02%)</title><rect x="1049.2" y="1443.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1052.2" y="1454.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.02%)</title><rect x="1049.2" y="1427.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1052.2" y="1438.0"></text>
</g>
<g>
<title>IdealKit::copy_cvstate() (1 samples, 0.02%)</title><rect x="1049.2" y="1411.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1052.2" y="1422.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.02%)</title><rect x="1049.2" y="1395.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1052.2" y="1406.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.02%)</title><rect x="1049.2" y="1379.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1052.2" y="1390.0"></text>
</g>
<g>
<title>MergeMemNode::iteration_setup(MergeMemNode const*) (1 samples, 0.02%)</title><rect x="1049.2" y="1363.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1052.2" y="1374.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.02%)</title><rect x="1049.2" y="1347.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1052.2" y="1358.0"></text>
</g>
<g>
<title>Node::grow(unsigned int) (1 samples, 0.02%)</title><rect x="1049.2" y="1331.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1052.2" y="1342.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1049.5" y="1587.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1052.5" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1049.5" y="1571.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1052.5" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.12%)</title><rect x="1049.5" y="1555.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1052.5" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.12%)</title><rect x="1049.5" y="1539.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1052.5" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.12%)</title><rect x="1049.5" y="1523.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1052.5" y="1534.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.12%)</title><rect x="1049.5" y="1507.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1052.5" y="1518.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1049.5" y="1491.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1052.5" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.10%)</title><rect x="1049.5" y="1475.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1052.5" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.10%)</title><rect x="1049.5" y="1459.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1052.5" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.10%)</title><rect x="1049.5" y="1443.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1052.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.10%)</title><rect x="1049.5" y="1427.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1052.5" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.10%)</title><rect x="1049.5" y="1411.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1052.5" y="1422.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1049.5" y="1395.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1052.5" y="1406.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1049.5" y="1379.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1052.5" y="1390.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1049.5" y="1363.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1052.5" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1049.5" y="1347.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1052.5" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1049.5" y="1331.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1052.5" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1049.5" y="1315.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1052.5" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1049.5" y="1299.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1052.5" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1049.5" y="1283.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1052.5" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1049.5" y="1267.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1052.5" y="1278.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1049.5" y="1251.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1052.5" y="1262.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1049.5" y="1235.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1052.5" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1049.5" y="1219.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1052.5" y="1230.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1049.5" y="1203.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1052.5" y="1214.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1049.5" y="1187.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.5" y="1198.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1049.5" y="1171.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1052.5" y="1182.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.02%)</title><rect x="1049.5" y="1155.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1052.5" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1049.8" y="1395.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1052.8" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1049.8" y="1379.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1052.8" y="1390.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1049.8" y="1363.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1052.8" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1049.8" y="1347.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1052.8" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1049.8" y="1331.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1052.8" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1049.8" y="1315.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1052.8" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1049.8" y="1299.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1052.8" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1049.8" y="1283.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1052.8" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1049.8" y="1267.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1052.8" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1049.8" y="1251.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1052.8" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1049.8" y="1235.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1052.8" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1049.8" y="1219.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.8" y="1230.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.02%)</title><rect x="1049.8" y="1203.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1052.8" y="1214.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1049.8" y="1187.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1052.8" y="1198.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.02%)</title><rect x="1049.8" y="1171.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1052.8" y="1182.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.02%)</title><rect x="1049.8" y="1155.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1052.8" y="1166.0"></text>
</g>
<g>
<title>MergeMemNode::iteration_setup(MergeMemNode const*) (1 samples, 0.02%)</title><rect x="1049.8" y="1139.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1052.8" y="1150.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1050.1" y="1395.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1053.1" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.1" y="1379.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1053.1" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.1" y="1363.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1053.1" y="1374.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.02%)</title><rect x="1050.1" y="1347.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.1" y="1358.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="1379.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.3" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="1363.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1053.3" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.3" y="1347.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1053.3" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.3" y="1331.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1053.3" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.3" y="1315.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.3" y="1326.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.3" y="1299.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1053.3" y="1310.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="1283.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1053.3" y="1294.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="1267.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1053.3" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.3" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1053.3" y="1262.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.3" y="1235.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1053.3" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.3" y="1219.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1053.3" y="1230.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.3" y="1203.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1053.3" y="1214.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1053.3" y="1198.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="1171.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1053.3" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="1155.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1053.3" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.3" y="1139.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1053.3" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.3" y="1123.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1053.3" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.3" y="1107.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1053.3" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.3" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1053.3" y="1102.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="1075.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1053.3" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1053.3" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.3" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.3" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.3" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1053.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.3" y="1011.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1053.3" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.3" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1053.3" y="1006.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.3" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1053.3" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.3" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1053.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.3" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1053.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.3" y="915.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1053.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.3" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1053.3" y="910.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1053.3" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.3" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.3" y="851.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1053.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.3" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1053.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.3" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1053.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.3" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1053.3" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1053.3" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.3" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1053.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.3" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1053.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.3" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.3" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1053.3" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.3" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1053.3" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.3" y="691.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1053.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.3" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.3" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1053.3" y="670.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.02%)</title><rect x="1050.3" y="643.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1053.3" y="654.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (1 samples, 0.02%)</title><rect x="1050.3" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.3" y="638.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1050.3" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1053.3" y="622.0"></text>
</g>
<g>
<title>MulNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1050.3" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1053.3" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.6" y="1475.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1053.6" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.6" y="1459.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.6" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.6" y="1443.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1053.6" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.6" y="1427.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1053.6" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.6" y="1411.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1053.6" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.6" y="1395.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1053.6" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.6" y="1379.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1053.6" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.6" y="1363.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1053.6" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.6" y="1347.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1053.6" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.6" y="1331.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1053.6" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.6" y="1315.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1053.6" y="1326.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.6" y="1299.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1053.6" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.6" y="1283.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1053.6" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1050.6" y="1267.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1053.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1050.6" y="1251.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1053.6" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1050.6" y="1235.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1053.6" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1050.6" y="1219.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1053.6" y="1230.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1050.6" y="1203.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1053.6" y="1214.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.0] (1 samples, 0.02%)</title><rect x="1050.6" y="1187.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1053.6" y="1198.0"></text>
</g>
<g>
<title>Compile::too_many_traps(ciMethod*, int, Deoptimization::DeoptReason) (1 samples, 0.02%)</title><rect x="1050.6" y="1171.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1053.6" y="1182.0"></text>
</g>
<g>
<title>ciMethodData::data_from(DataLayout*) (1 samples, 0.02%)</title><rect x="1050.6" y="1155.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1053.6" y="1166.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1050.6" y="1139.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.6" y="1150.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1050.9" y="1763.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1053.9" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1050.9" y="1747.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1053.9" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1050.9" y="1731.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1053.9" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1050.9" y="1715.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.9" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1050.9" y="1699.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1053.9" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1050.9" y="1683.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1053.9" y="1694.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1050.9" y="1667.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1053.9" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1050.9" y="1651.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1053.9" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1050.9" y="1635.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.9" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1050.9" y="1619.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1053.9" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1050.9" y="1603.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.9" y="1614.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1050.9" y="1587.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1053.9" y="1598.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1050.9" y="1571.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1053.9" y="1582.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1050.9" y="1555.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.9" y="1566.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1050.9" y="1539.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.9" y="1550.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1050.9" y="1523.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1053.9" y="1534.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1050.9" y="1507.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1053.9" y="1518.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1050.9" y="1491.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1053.9" y="1502.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1050.9" y="1475.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1053.9" y="1486.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1050.9" y="1459.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1053.9" y="1470.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1050.9" y="1443.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1053.9" y="1454.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1050.9" y="1427.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1053.9" y="1438.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1050.9" y="1411.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1053.9" y="1422.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1050.9" y="1395.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1053.9" y="1406.0"></text>
</g>
<g>
<title>Metadata::is_klass() const (1 samples, 0.02%)</title><rect x="1050.9" y="1379.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1053.9" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1051.2" y="1571.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1054.2" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1051.2" y="1555.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1054.2" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1051.2" y="1539.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1054.2" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1051.2" y="1523.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1054.2" y="1534.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1051.2" y="1507.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1054.2" y="1518.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1051.2" y="1491.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1054.2" y="1502.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1051.2" y="1475.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1054.2" y="1486.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1051.2" y="1459.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1054.2" y="1470.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1051.2" y="1443.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1054.2" y="1454.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1051.2" y="1427.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1054.2" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1051.2" y="1411.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1054.2" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1051.2" y="1395.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1054.2" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1051.2" y="1379.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1054.2" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1051.2" y="1363.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1054.2" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1051.2" y="1347.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1054.2" y="1358.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1051.2" y="1331.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1054.2" y="1342.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1051.2" y="1315.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1054.2" y="1326.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1051.2" y="1299.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1054.2" y="1310.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1051.2" y="1283.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1054.2" y="1294.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1051.2" y="1267.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1054.2" y="1278.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="1051.2" y="1251.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1054.2" y="1262.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="1051.2" y="1235.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1054.2" y="1246.0"></text>
</g>
<g>
<title>rcu_do_batch (1 samples, 0.02%)</title><rect x="1051.2" y="1219.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1054.2" y="1230.0"></text>
</g>
<g>
<title>invoke_rcu_core (1 samples, 0.02%)</title><rect x="1051.2" y="1203.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1054.2" y="1214.0"></text>
</g>
<g>
<title>raise_softirq (1 samples, 0.02%)</title><rect x="1051.2" y="1187.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1054.2" y="1198.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1051.5" y="1907.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1054.5" y="1918.0"></text>
</g>
<g>
<title>TypePtr::speculative_maybe_null() const (1 samples, 0.02%)</title><rect x="1051.5" y="1891.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.5" y="1902.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1051.5" y="1875.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1054.5" y="1886.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1051.5" y="1859.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1054.5" y="1870.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1051.5" y="1843.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1054.5" y="1854.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1051.5" y="1827.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1054.5" y="1838.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.02%)</title><rect x="1051.5" y="1811.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1054.5" y="1822.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (11 samples, 0.27%)</title><rect x="1051.8" y="1971.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1054.8" y="1982.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.24%)</title><rect x="1051.8" y="1955.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1054.8" y="1966.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.24%)</title><rect x="1051.8" y="1939.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1054.8" y="1950.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.24%)</title><rect x="1051.8" y="1923.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1054.8" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.24%)</title><rect x="1051.8" y="1907.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1054.8" y="1918.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.24%)</title><rect x="1051.8" y="1891.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1054.8" y="1902.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1051.8" y="1875.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1054.8" y="1886.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1051.8" y="1859.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1054.8" y="1870.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1051.8" y="1843.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1054.8" y="1854.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1051.8" y="1827.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1054.8" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1051.8" y="1811.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1054.8" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1051.8" y="1795.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1054.8" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1051.8" y="1779.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1054.8" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1051.8" y="1763.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1054.8" y="1774.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1051.8" y="1747.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1054.8" y="1758.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1051.8" y="1731.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1054.8" y="1742.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1051.8" y="1715.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1054.8" y="1726.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1051.8" y="1699.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.8" y="1710.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1051.8" y="1683.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1054.8" y="1694.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1051.8" y="1667.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1054.8" y="1678.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1051.8" y="1651.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.8" y="1662.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.02%)</title><rect x="1051.8" y="1635.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1054.8" y="1646.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.02%)</title><rect x="1051.8" y="1619.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1054.8" y="1630.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (1 samples, 0.02%)</title><rect x="1051.8" y="1603.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.8" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1052.1" y="1875.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1055.1" y="1886.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1052.1" y="1859.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1055.1" y="1870.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1052.1" y="1843.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1055.1" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1052.1" y="1827.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1055.1" y="1838.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1052.1" y="1811.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1055.1" y="1822.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1052.1" y="1795.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1055.1" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1052.1" y="1779.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1055.1" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1052.1" y="1763.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1055.1" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1052.1" y="1747.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1055.1" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1052.1" y="1731.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1055.1" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1052.1" y="1715.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1055.1" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1052.1" y="1699.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1055.1" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1052.1" y="1683.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1055.1" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1052.1" y="1667.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1055.1" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1052.1" y="1651.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1055.1" y="1662.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1052.1" y="1635.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1055.1" y="1646.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1052.1" y="1619.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1055.1" y="1630.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (8 samples, 0.19%)</title><rect x="1052.4" y="1875.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1055.4" y="1886.0"></text>
</g>
<g>
<title>GraphKit::transfer_exceptions_into_jvms() (1 samples, 0.02%)</title><rect x="1052.4" y="1859.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1055.4" y="1870.0"></text>
</g>
<g>
<title>SafePointNode::set_next_exception(SafePointNode*) (1 samples, 0.02%)</title><rect x="1052.4" y="1843.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1055.4" y="1854.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1052.6" y="1859.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1055.6" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.12%)</title><rect x="1052.6" y="1843.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1055.6" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.12%)</title><rect x="1052.6" y="1827.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1055.6" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.12%)</title><rect x="1052.6" y="1811.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1055.6" y="1822.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.12%)</title><rect x="1052.6" y="1795.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1055.6" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1052.6" y="1779.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1055.6" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1052.6" y="1763.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1055.6" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1052.6" y="1747.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1055.6" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1052.6" y="1731.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1055.6" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1052.6" y="1715.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1055.6" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1052.6" y="1699.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1055.6" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1052.6" y="1683.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1055.6" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1052.6" y="1667.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1055.6" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1052.6" y="1651.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1055.6" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1052.6" y="1635.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1055.6" y="1646.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.02%)</title><rect x="1052.6" y="1619.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1055.6" y="1630.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.02%)</title><rect x="1052.6" y="1603.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1055.6" y="1614.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.02%)</title><rect x="1052.6" y="1587.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1055.6" y="1598.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.02%)</title><rect x="1052.6" y="1571.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1055.6" y="1582.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_range(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1052.6" y="1555.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1055.6" y="1566.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1052.9" y="1715.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1055.9" y="1726.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1052.9" y="1699.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1055.9" y="1710.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1052.9" y="1683.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1055.9" y="1694.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1052.9" y="1667.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1055.9" y="1678.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1053.2" y="1779.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1056.2" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1053.2" y="1763.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1056.2" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1053.2" y="1747.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1056.2" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1053.2" y="1731.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1056.2" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1053.2" y="1715.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1056.2" y="1726.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1053.2" y="1699.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1056.2" y="1710.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1053.2" y="1683.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.2" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.2" y="1667.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1056.2" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1053.2" y="1651.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1056.2" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1053.2" y="1635.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1056.2" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1053.2" y="1619.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1056.2" y="1630.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1053.2" y="1603.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1056.2" y="1614.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1053.2" y="1587.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1056.2" y="1598.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1053.2" y="1571.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1056.2" y="1582.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1053.2" y="1555.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1056.2" y="1566.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1053.2" y="1539.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1056.2" y="1550.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool, unsigned char) (1 samples, 0.02%)</title><rect x="1053.2" y="1523.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1056.2" y="1534.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool, unsigned char) (1 samples, 0.02%)</title><rect x="1053.2" y="1507.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1056.2" y="1518.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1053.2" y="1491.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1056.2" y="1502.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1053.2" y="1475.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1056.2" y="1486.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1053.2" y="1459.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1056.2" y="1470.0"></text>
</g>
<g>
<title>TypePtr::remove_speculative() const (1 samples, 0.02%)</title><rect x="1053.2" y="1443.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1056.2" y="1454.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.5" y="1667.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1056.5" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.5" y="1651.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1056.5" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1053.5" y="1635.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1056.5" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1053.5" y="1619.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1056.5" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1053.5" y="1603.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1056.5" y="1614.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1053.5" y="1587.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1056.5" y="1598.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.5" y="1571.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1056.5" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.5" y="1555.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1056.5" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1053.5" y="1539.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.5" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1053.5" y="1523.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1056.5" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1053.5" y="1507.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1056.5" y="1518.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1053.5" y="1491.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1056.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1053.5" y="1475.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1056.5" y="1486.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1053.5" y="1459.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1056.5" y="1470.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1053.5" y="1443.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1056.5" y="1454.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1053.5" y="1427.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1056.5" y="1438.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.02%)</title><rect x="1053.5" y="1411.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1056.5" y="1422.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1053.5" y="1395.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1056.5" y="1406.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1053.5" y="1379.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1056.5" y="1390.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1053.5" y="1363.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1056.5" y="1374.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1053.5" y="1347.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1056.5" y="1358.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.8" y="1763.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1056.8" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.8" y="1747.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1056.8" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1053.8" y="1731.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1056.8" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1053.8" y="1715.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1056.8" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1053.8" y="1699.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1056.8" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1053.8" y="1683.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1056.8" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.8" y="1667.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1056.8" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1053.8" y="1651.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1056.8" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1053.8" y="1635.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1056.8" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1053.8" y="1619.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1056.8" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1053.8" y="1603.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1056.8" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.8" y="1587.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1056.8" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1053.8" y="1571.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1056.8" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1053.8" y="1555.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.8" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1053.8" y="1539.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.8" y="1550.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1053.8" y="1523.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1056.8" y="1534.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.8" y="1507.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1056.8" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1053.8" y="1491.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1056.8" y="1502.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1053.8" y="1475.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1056.8" y="1486.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1053.8" y="1459.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1056.8" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1053.8" y="1443.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1056.8" y="1454.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1053.8" y="1427.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1056.8" y="1438.0"></text>
</g>
<g>
<title>Node::Node(Node*) (1 samples, 0.02%)</title><rect x="1053.8" y="1411.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1056.8" y="1422.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1053.8" y="1395.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1056.8" y="1406.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1054.1" y="1859.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.1" y="1870.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1054.1" y="1843.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1057.1" y="1854.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1054.1" y="1827.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1057.1" y="1838.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1054.1" y="1811.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1057.1" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1054.1" y="1795.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1057.1" y="1806.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1054.1" y="1779.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1057.1" y="1790.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1054.1" y="1763.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1057.1" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.1" y="1747.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1057.1" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.1" y="1731.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1057.1" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.1" y="1715.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1057.1" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.1" y="1699.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1057.1" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.1" y="1683.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.1" y="1694.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.1" y="1667.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1057.1" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.1" y="1651.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1057.1" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.1" y="1635.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1057.1" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.1" y="1619.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1057.1" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.1" y="1603.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1057.1" y="1614.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1054.1" y="1587.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.1" y="1598.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1054.1" y="1571.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.1" y="1582.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1054.1" y="1555.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1057.1" y="1566.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1054.1" y="1539.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.1" y="1550.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1054.1" y="1523.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1057.1" y="1534.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool, unsigned char) (1 samples, 0.02%)</title><rect x="1054.1" y="1507.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.1" y="1518.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool, unsigned char) (1 samples, 0.02%)</title><rect x="1054.1" y="1491.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1057.1" y="1502.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1054.1" y="1475.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1057.1" y="1486.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1054.1" y="1459.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1057.1" y="1470.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1054.1" y="1443.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.1" y="1454.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1054.1" y="1427.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1057.1" y="1438.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1054.1" y="1411.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.1" y="1422.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1054.1" y="1395.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1057.1" y="1406.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1747.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1057.4" y="1758.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1731.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1057.4" y="1742.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.4" y="1715.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1057.4" y="1726.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.4" y="1699.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1057.4" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.4" y="1683.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1057.4" y="1694.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.4" y="1667.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1057.4" y="1678.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1651.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1057.4" y="1662.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1635.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1057.4" y="1646.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.4" y="1619.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.4" y="1630.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.4" y="1603.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1057.4" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.4" y="1587.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1057.4" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.4" y="1571.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1057.4" y="1582.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1555.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1057.4" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1539.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.4" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.4" y="1523.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.4" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.4" y="1507.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1057.4" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.4" y="1491.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.4" y="1502.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.4" y="1475.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1057.4" y="1486.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1459.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1057.4" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1443.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.4" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.4" y="1427.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1057.4" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.4" y="1411.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.4" y="1395.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.4" y="1379.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1057.4" y="1390.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1363.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1057.4" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.4" y="1347.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.4" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.4" y="1331.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1057.4" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.4" y="1315.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1057.4" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.4" y="1299.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1057.4" y="1310.0"></text>
</g>
<g>
<title>Compile::needs_clinit_barrier(ciInstanceKlass*, ciMethod*) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1054.4" y="1283.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.4" y="1294.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1955.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1057.7" y="1966.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1939.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1057.7" y="1950.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.7" y="1923.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1057.7" y="1934.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.7" y="1907.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1057.7" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.7" y="1891.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.7" y="1902.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.7" y="1875.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1057.7" y="1886.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1859.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1057.7" y="1870.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1843.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1057.7" y="1854.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1827.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1057.7" y="1838.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.7" y="1811.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1057.7" y="1822.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.7" y="1795.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.7" y="1806.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.7" y="1779.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1057.7" y="1790.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.7" y="1763.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1057.7" y="1774.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1747.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1057.7" y="1758.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1731.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1057.7" y="1742.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.7" y="1715.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1057.7" y="1726.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.7" y="1699.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.7" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.7" y="1683.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1057.7" y="1694.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.7" y="1667.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.7" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1651.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.7" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.7" y="1635.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1057.7" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.7" y="1619.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1057.7" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.7" y="1603.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.7" y="1614.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.7" y="1587.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1057.7" y="1598.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1571.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1057.7" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1555.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1057.7" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.7" y="1539.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.7" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.7" y="1523.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.7" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.7" y="1507.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.7" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.7" y="1491.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.7" y="1502.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1475.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.7" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1459.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.7" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.7" y="1443.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1057.7" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1054.7" y="1427.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1057.7" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1054.7" y="1411.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1057.7" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1054.7" y="1395.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1057.7" y="1406.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1379.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1057.7" y="1390.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1363.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1057.7" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1054.7" y="1347.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.7" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1054.7" y="1331.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1057.7" y="1342.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.02%)</title><rect x="1054.7" y="1315.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1057.7" y="1326.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1054.7" y="1299.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.7" y="1310.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1054.7" y="1283.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.7" y="1294.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.02%)</title><rect x="1054.7" y="1267.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1057.7" y="1278.0"></text>
</g>
<g>
<title>PreserveJVMState::PreserveJVMState(GraphKit*, bool) (1 samples, 0.02%)</title><rect x="1054.9" y="1971.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1057.9" y="1982.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1054.9" y="1955.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1057.9" y="1966.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.02%)</title><rect x="1054.9" y="1939.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1057.9" y="1950.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.07%)</title><rect x="1055.2" y="2003.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1058.2" y="2014.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.05%)</title><rect x="1055.2" y="1987.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1058.2" y="1998.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (2 samples, 0.05%)</title><rect x="1055.2" y="1971.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1058.2" y="1982.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (2 samples, 0.05%)</title><rect x="1055.2" y="1955.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1058.2" y="1966.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.05%)</title><rect x="1055.2" y="1939.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1058.2" y="1950.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool, unsigned char) (2 samples, 0.05%)</title><rect x="1055.2" y="1923.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1058.2" y="1934.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool, unsigned char) (2 samples, 0.05%)</title><rect x="1055.2" y="1907.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1058.2" y="1918.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1055.2" y="1891.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1058.2" y="1902.0"></text>
</g>
<g>
<title>TypeNarrowOop::make(TypePtr const*) (1 samples, 0.02%)</title><rect x="1055.5" y="1891.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1058.5" y="1902.0"></text>
</g>
<g>
<title>TypeNarrowOop::isa_same_narrowptr(Type const*) const (1 samples, 0.02%)</title><rect x="1055.5" y="1875.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1058.5" y="1886.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="1055.8" y="1987.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1058.8" y="1998.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1055.8" y="1971.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1058.8" y="1982.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1055.8" y="1955.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1058.8" y="1966.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1056.1" y="2003.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1059.1" y="2014.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.07%)</title><rect x="1056.4" y="2067.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1059.4" y="2078.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.02%)</title><rect x="1056.4" y="2051.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1059.4" y="2062.0"></text>
</g>
<g>
<title>Compile::update_dead_node_list(Unique_Node_List&amp;) (1 samples, 0.02%)</title><rect x="1056.7" y="2051.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1059.7" y="2062.0"></text>
</g>
<g>
<title>Unique_Node_List::remove_useless_nodes(VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1056.9" y="2051.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1059.9" y="2062.0"></text>
</g>
<g>
<title>CompileBroker::post_compile(CompilerThread*, CompileTask*, bool, ciEnv*, int, char const*) (1 samples, 0.02%)</title><rect x="1057.2" y="2099.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1060.2" y="2110.0"></text>
</g>
<g>
<title>FormatStringEventLog&lt;256ul&gt;::log(Thread*, char const*, ...) (1 samples, 0.02%)</title><rect x="1057.2" y="2083.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1060.2" y="2094.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1057.2" y="2067.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1060.2" y="2078.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (4 samples, 0.10%)</title><rect x="1057.5" y="2099.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1060.5" y="2110.0"></text>
</g>
<g>
<title>CompileTask::print_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool, bool, long, long) (4 samples, 0.10%)</title><rect x="1057.5" y="2083.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1060.5" y="2094.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (3 samples, 0.07%)</title><rect x="1057.5" y="2067.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1060.5" y="2078.0"></text>
</g>
<g>
<title>Klass::external_name() const (1 samples, 0.02%)</title><rect x="1057.5" y="2051.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1060.5" y="2062.0"></text>
</g>
<g>
<title>os::free(void*) (1 samples, 0.02%)</title><rect x="1057.8" y="2051.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1060.8" y="2062.0"></text>
</g>
<g>
<title>os::strdup(char const*, MEMFLAGS) (1 samples, 0.02%)</title><rect x="1058.1" y="2051.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1061.1" y="2062.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.02%)</title><rect x="1058.4" y="2067.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1061.4" y="2078.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="1058.4" y="2051.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.4" y="2062.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) (379 samples, 9.21%)</title><rect x="1058.7" y="2099.0" width="108.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1061.7" y="2110.0">Compiler::com..</text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.02%)</title><rect x="1059.0" y="2083.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1062.0" y="2094.0"></text>
</g>
<g>
<title>CodeBuffer::CodeBuffer(CodeBlob*) (1 samples, 0.02%)</title><rect x="1059.2" y="2083.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1062.2" y="2094.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*) (376 samples, 9.14%)</title><rect x="1059.5" y="2083.0" width="107.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1062.5" y="2094.0">Compilation::..</text>
</g>
<g>
<title>Compilation::compile_method() (376 samples, 9.14%)</title><rect x="1059.5" y="2067.0" width="107.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1062.5" y="2078.0">Compilation::..</text>
</g>
<g>
<title>Compilation::compile_java_method() (350 samples, 8.51%)</title><rect x="1059.5" y="2051.0" width="100.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1062.5" y="2062.0">Compilation:..</text>
</g>
<g>
<title>Assembler::init_attributes() (1 samples, 0.02%)</title><rect x="1059.5" y="2035.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.5" y="2046.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.0] (142 samples, 3.45%)</title><rect x="1059.8" y="2035.0" width="40.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1062.8" y="2046.0">Com..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (14 samples, 0.34%)</title><rect x="1059.8" y="2019.0" width="4.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1062.8" y="2030.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (5 samples, 0.12%)</title><rect x="1061.5" y="2003.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1064.5" y="2014.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (5 samples, 0.12%)</title><rect x="1061.5" y="1987.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1064.5" y="1998.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.10%)</title><rect x="1061.5" y="1971.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1064.5" y="1982.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.10%)</title><rect x="1061.5" y="1955.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1064.5" y="1966.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.10%)</title><rect x="1061.5" y="1939.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1064.5" y="1950.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.10%)</title><rect x="1061.5" y="1923.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1064.5" y="1934.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.07%)</title><rect x="1061.5" y="1907.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1064.5" y="1918.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.05%)</title><rect x="1061.5" y="1891.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1064.5" y="1902.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.05%)</title><rect x="1061.5" y="1875.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1064.5" y="1886.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.05%)</title><rect x="1061.5" y="1859.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1064.5" y="1870.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.05%)</title><rect x="1061.5" y="1843.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1064.5" y="1854.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.05%)</title><rect x="1061.5" y="1827.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1064.5" y="1838.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1811.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1064.5" y="1822.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1795.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1064.5" y="1806.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1779.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1064.5" y="1790.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1763.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1064.5" y="1774.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1747.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1064.5" y="1758.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1731.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1064.5" y="1742.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1715.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1064.5" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1699.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1064.5" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1683.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1064.5" y="1694.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1061.5" y="1667.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.5" y="1678.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1061.5" y="1651.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1064.5" y="1662.0"></text>
</g>
<g>
<title>StateSplit::state_values_do(ValueVisitor*) (1 samples, 0.02%)</title><rect x="1061.5" y="1635.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1064.5" y="1646.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1061.8" y="1811.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1064.8" y="1822.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.02%)</title><rect x="1061.8" y="1795.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1064.8" y="1806.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1062.1" y="1891.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1065.1" y="1902.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.02%)</title><rect x="1062.1" y="1875.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1065.1" y="1886.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1062.4" y="1907.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1065.4" y="1918.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.02%)</title><rect x="1062.4" y="1891.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1065.4" y="1902.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1062.7" y="1971.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1065.7" y="1982.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (2 samples, 0.05%)</title><rect x="1063.0" y="2003.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1066.0" y="2014.0"></text>
</g>
<g>
<title>Constant::is_equal(Instruction*) const (1 samples, 0.02%)</title><rect x="1063.0" y="1987.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1066.0" y="1998.0"></text>
</g>
<g>
<title>ObjectType::is_loaded() const (1 samples, 0.02%)</title><rect x="1063.3" y="1987.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1066.3" y="1998.0"></text>
</g>
<g>
<title>ValueMap::kill_memory() (1 samples, 0.02%)</title><rect x="1063.5" y="2003.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.5" y="2014.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (111 samples, 2.70%)</title><rect x="1063.8" y="2019.0" width="31.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1066.8" y="2030.0">IR..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.02%)</title><rect x="1063.8" y="2003.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1066.8" y="2014.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (110 samples, 2.67%)</title><rect x="1064.1" y="2003.0" width="31.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.1" y="2014.0">IR..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (110 samples, 2.67%)</title><rect x="1064.1" y="1987.0" width="31.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1067.1" y="1998.0">Gr..</text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1971.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1067.1" y="1982.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1955.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1067.1" y="1966.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1939.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1067.1" y="1950.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1923.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1067.1" y="1934.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1907.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1067.1" y="1918.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1891.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1067.1" y="1902.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1875.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1067.1" y="1886.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1859.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1067.1" y="1870.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1843.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.1" y="1854.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1827.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1067.1" y="1838.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1811.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1067.1" y="1822.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1795.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1067.1" y="1806.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1779.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1067.1" y="1790.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1763.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1067.1" y="1774.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1747.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.1" y="1758.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1731.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1067.1" y="1742.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1715.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1067.1" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1699.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1067.1" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1683.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1067.1" y="1694.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1667.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1067.1" y="1678.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1651.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.1" y="1662.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1635.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1067.1" y="1646.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1619.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1067.1" y="1630.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1603.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1067.1" y="1614.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1587.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1067.1" y="1598.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1571.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1067.1" y="1582.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1064.1" y="1555.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1067.1" y="1566.0"></text>
</g>
<g>
<title>PhiSimplifier::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1064.1" y="1539.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1067.1" y="1550.0"></text>
</g>
<g>
<title>PhiSimplifier::simplify(Instruction*) (1 samples, 0.02%)</title><rect x="1064.1" y="1523.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.1" y="1534.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (4 samples, 0.10%)</title><rect x="1064.4" y="1971.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1067.4" y="1982.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (4 samples, 0.10%)</title><rect x="1064.4" y="1955.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1067.4" y="1966.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (3 samples, 0.07%)</title><rect x="1064.7" y="1939.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.7" y="1950.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::propagate(MethodLiveness*) (1 samples, 0.02%)</title><rect x="1064.7" y="1923.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.7" y="1934.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.05%)</title><rect x="1065.0" y="1923.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1068.0" y="1934.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (2 samples, 0.05%)</title><rect x="1065.0" y="1907.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1068.0" y="1918.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (2 samples, 0.05%)</title><rect x="1065.0" y="1891.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1068.0" y="1902.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.02%)</title><rect x="1065.0" y="1875.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1068.0" y="1886.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.02%)</title><rect x="1065.0" y="1859.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1068.0" y="1870.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.02%)</title><rect x="1065.3" y="1875.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1068.3" y="1886.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (104 samples, 2.53%)</title><rect x="1065.5" y="1971.0" width="29.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1068.5" y="1982.0">Gr..</text>
</g>
<g>
<title>BlockEnd::set_begin(BlockBegin*) (1 samples, 0.02%)</title><rect x="1065.5" y="1955.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1068.5" y="1966.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (103 samples, 2.50%)</title><rect x="1065.8" y="1955.0" width="29.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1068.8" y="1966.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (16 samples, 0.39%)</title><rect x="1066.4" y="1939.0" width="4.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1069.4" y="1950.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1066.4" y="1923.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1069.4" y="1934.0"></text>
</g>
<g>
<title>GraphBuilder::handle_exception(Instruction*) (1 samples, 0.02%)</title><rect x="1066.4" y="1907.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1069.4" y="1918.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1066.4" y="1891.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1069.4" y="1902.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1066.4" y="1875.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1069.4" y="1886.0"></text>
</g>
<g>
<title>GrowableArrayWithAllocator&lt;Instruction*, GrowableArray&lt;Instruction*&gt; &gt;::grow(int) (1 samples, 0.02%)</title><rect x="1066.7" y="1923.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1069.7" y="1934.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (14 samples, 0.34%)</title><rect x="1067.0" y="1923.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1070.0" y="1934.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (12 samples, 0.29%)</title><rect x="1067.0" y="1907.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1070.0" y="1918.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (12 samples, 0.29%)</title><rect x="1067.0" y="1891.0" width="3.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1070.0" y="1902.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.02%)</title><rect x="1067.0" y="1875.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1070.0" y="1886.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (11 samples, 0.27%)</title><rect x="1067.3" y="1875.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1070.3" y="1886.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (2 samples, 0.05%)</title><rect x="1067.3" y="1859.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1070.3" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (2 samples, 0.05%)</title><rect x="1067.3" y="1843.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1070.3" y="1854.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (6 samples, 0.15%)</title><rect x="1067.8" y="1859.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1070.8" y="1870.0"></text>
</g>
<g>
<title>ciEnv::check_klass_accessibility(ciKlass*, Klass*) (1 samples, 0.02%)</title><rect x="1067.8" y="1843.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1070.8" y="1854.0"></text>
</g>
<g>
<title>Reflection::verify_class_access(Klass const*, InstanceKlass const*, bool) (1 samples, 0.02%)</title><rect x="1067.8" y="1827.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1070.8" y="1838.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (5 samples, 0.12%)</title><rect x="1068.1" y="1843.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1071.1" y="1854.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.05%)</title><rect x="1068.1" y="1827.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1071.1" y="1838.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (2 samples, 0.05%)</title><rect x="1068.1" y="1811.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1071.1" y="1822.0"></text>
</g>
<g>
<title>syscall (2 samples, 0.05%)</title><rect x="1068.1" y="1795.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1071.1" y="1806.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1068.7" y="1827.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1071.7" y="1838.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (2 samples, 0.05%)</title><rect x="1069.0" y="1827.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1072.0" y="1838.0"></text>
</g>
<g>
<title>syscall (2 samples, 0.05%)</title><rect x="1069.0" y="1811.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1072.0" y="1822.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1069.0" y="1795.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1072.0" y="1806.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1069.0" y="1779.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.0" y="1790.0"></text>
</g>
<g>
<title>ciInstanceKlass::loader() (1 samples, 0.02%)</title><rect x="1069.6" y="1859.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1072.6" y="1870.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (2 samples, 0.05%)</title><rect x="1069.8" y="1859.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1072.8" y="1870.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (2 samples, 0.05%)</title><rect x="1069.8" y="1843.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1072.8" y="1854.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (2 samples, 0.05%)</title><rect x="1070.4" y="1907.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1073.4" y="1918.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="1070.4" y="1891.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1073.4" y="1902.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.02%)</title><rect x="1070.4" y="1875.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1073.4" y="1886.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.02%)</title><rect x="1070.4" y="1859.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1073.4" y="1870.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Klass*, Handle, Handle, bool) (1 samples, 0.02%)</title><rect x="1070.7" y="1891.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1073.7" y="1902.0"></text>
</g>
<g>
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (2 samples, 0.05%)</title><rect x="1071.0" y="1939.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1074.0" y="1950.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1071.3" y="1923.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1074.3" y="1934.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.02%)</title><rect x="1071.3" y="1907.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1074.3" y="1918.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1071.3" y="1891.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1074.3" y="1902.0"></text>
</g>
<g>
<title>GraphBuilder::increment() (1 samples, 0.02%)</title><rect x="1071.6" y="1939.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1074.6" y="1950.0"></text>
</g>
<g>
<title>GraphBuilder::arithmetic_op(ValueType*, Bytecodes::Code, ValueStack*) (1 samples, 0.02%)</title><rect x="1071.6" y="1923.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1074.6" y="1934.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1071.6" y="1907.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1074.6" y="1918.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.02%)</title><rect x="1071.6" y="1891.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1074.6" y="1902.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (78 samples, 1.90%)</title><rect x="1071.9" y="1939.0" width="22.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1074.9" y="1950.0">G..</text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.02%)</title><rect x="1071.9" y="1923.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1074.9" y="1934.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (60 samples, 1.46%)</title><rect x="1072.1" y="1923.0" width="17.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1075.1" y="1934.0"></text>
</g>
<g>
<title>GraphBuilder::args_list_for_profiling(ciMethod*, int&amp;, bool) (1 samples, 0.02%)</title><rect x="1072.1" y="1907.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1075.1" y="1918.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (59 samples, 1.43%)</title><rect x="1072.4" y="1907.0" width="16.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1075.4" y="1918.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1072.7" y="1891.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1075.7" y="1902.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (51 samples, 1.24%)</title><rect x="1073.0" y="1891.0" width="14.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1076.0" y="1902.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (51 samples, 1.24%)</title><rect x="1073.0" y="1875.0" width="14.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1076.0" y="1886.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (7 samples, 0.17%)</title><rect x="1073.0" y="1859.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1076.0" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1073.0" y="1843.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1076.0" y="1854.0"></text>
</g>
<g>
<title>StoreField::visit(InstructionVisitor*) (1 samples, 0.02%)</title><rect x="1073.0" y="1827.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.0" y="1838.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (5 samples, 0.12%)</title><rect x="1073.3" y="1843.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1076.3" y="1854.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (4 samples, 0.10%)</title><rect x="1073.3" y="1827.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1076.3" y="1838.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (4 samples, 0.10%)</title><rect x="1073.3" y="1811.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1076.3" y="1822.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (4 samples, 0.10%)</title><rect x="1073.3" y="1795.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1076.3" y="1806.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (2 samples, 0.05%)</title><rect x="1073.3" y="1779.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1076.3" y="1790.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (2 samples, 0.05%)</title><rect x="1073.3" y="1763.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1076.3" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.05%)</title><rect x="1073.9" y="1779.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1076.9" y="1790.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1073.9" y="1763.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1076.9" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1073.9" y="1747.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1076.9" y="1758.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="1073.9" y="1731.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.9" y="1742.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="1073.9" y="1715.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1076.9" y="1726.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1074.2" y="1763.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1077.2" y="1774.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1074.4" y="1827.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1077.4" y="1838.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1074.7" y="1843.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1077.7" y="1854.0"></text>
</g>
<g>
<title>GraphBuilder::arithmetic_op(ValueType*, Bytecodes::Code, ValueStack*) (1 samples, 0.02%)</title><rect x="1075.0" y="1859.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1078.0" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1075.0" y="1843.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1078.0" y="1854.0"></text>
</g>
<g>
<title>ValueType::is_constant() const (1 samples, 0.02%)</title><rect x="1075.0" y="1827.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1078.0" y="1838.0"></text>
</g>
<g>
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (2 samples, 0.05%)</title><rect x="1075.3" y="1859.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1078.3" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1075.6" y="1843.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1078.6" y="1854.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (36 samples, 0.87%)</title><rect x="1075.9" y="1859.0" width="10.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1078.9" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (29 samples, 0.70%)</title><rect x="1075.9" y="1843.0" width="8.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1078.9" y="1854.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (25 samples, 0.61%)</title><rect x="1075.9" y="1827.0" width="7.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1078.9" y="1838.0"></text>
</g>
<g>
<title>CompilationPolicy::should_not_inline(ciEnv*, ciMethod*) (1 samples, 0.02%)</title><rect x="1075.9" y="1811.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1078.9" y="1822.0"></text>
</g>
<g>
<title>ciMethod::highest_osr_comp_level() (1 samples, 0.02%)</title><rect x="1075.9" y="1795.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1078.9" y="1806.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1076.2" y="1811.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1079.2" y="1822.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.02%)</title><rect x="1076.2" y="1795.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1079.2" y="1806.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (20 samples, 0.49%)</title><rect x="1076.4" y="1811.0" width="5.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1079.4" y="1822.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (20 samples, 0.49%)</title><rect x="1076.4" y="1795.0" width="5.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1079.4" y="1806.0"></text>
</g>
<g>
<title>GraphBuilder::ScopeData::add_to_work_list(BlockBegin*) (1 samples, 0.02%)</title><rect x="1076.4" y="1779.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1079.4" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (4 samples, 0.10%)</title><rect x="1076.7" y="1779.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1079.7" y="1790.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (4 samples, 0.10%)</title><rect x="1076.7" y="1763.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1079.7" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.05%)</title><rect x="1076.7" y="1747.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1079.7" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (2 samples, 0.05%)</title><rect x="1076.7" y="1731.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1079.7" y="1742.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.05%)</title><rect x="1076.7" y="1715.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1079.7" y="1726.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1076.7" y="1699.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1079.7" y="1710.0"></text>
</g>
<g>
<title>ciObjectFactory::get_unloaded_klass(ciKlass*, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1076.7" y="1683.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1079.7" y="1694.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.02%)</title><rect x="1077.0" y="1699.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1080.0" y="1710.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (2 samples, 0.05%)</title><rect x="1077.3" y="1747.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1080.3" y="1758.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, JavaThread*) (2 samples, 0.05%)</title><rect x="1077.3" y="1731.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1080.3" y="1742.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.02%)</title><rect x="1077.6" y="1715.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1080.6" y="1726.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.02%)</title><rect x="1077.6" y="1699.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1080.6" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (13 samples, 0.32%)</title><rect x="1077.9" y="1779.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1080.9" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1077.9" y="1763.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1080.9" y="1774.0"></text>
</g>
<g>
<title>GraphBuilder::handle_exception(Instruction*) (1 samples, 0.02%)</title><rect x="1077.9" y="1747.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1080.9" y="1758.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 0.24%)</title><rect x="1078.2" y="1763.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1081.2" y="1774.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.17%)</title><rect x="1078.2" y="1747.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1081.2" y="1758.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.12%)</title><rect x="1078.2" y="1731.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1081.2" y="1742.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.12%)</title><rect x="1078.2" y="1715.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1081.2" y="1726.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.05%)</title><rect x="1078.2" y="1699.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1081.2" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1078.2" y="1683.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1081.2" y="1694.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1078.2" y="1667.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1081.2" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1078.2" y="1651.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.2" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1078.2" y="1635.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1081.2" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1078.2" y="1619.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.2" y="1630.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1078.2" y="1603.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.2" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1078.2" y="1587.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1081.2" y="1598.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1078.2" y="1571.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1081.2" y="1582.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1078.2" y="1555.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1081.2" y="1566.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1078.2" y="1539.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1081.2" y="1550.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1078.2" y="1523.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1081.2" y="1534.0"></text>
</g>
<g>
<title>ciObjectFactory::get_unloaded_klass(ciKlass*, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1078.2" y="1507.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1081.2" y="1518.0"></text>
</g>
<g>
<title>GraphBuilder::print_inlining(ciMethod*, char const*, bool) (1 samples, 0.02%)</title><rect x="1078.5" y="1651.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1081.5" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (2 samples, 0.05%)</title><rect x="1078.7" y="1699.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1081.7" y="1710.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.02%)</title><rect x="1078.7" y="1683.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1081.7" y="1694.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1079.0" y="1683.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1082.0" y="1694.0"></text>
</g>
<g>
<title>GraphBuilder::new_instance(int) (1 samples, 0.02%)</title><rect x="1079.3" y="1699.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1082.3" y="1710.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass() (1 samples, 0.02%)</title><rect x="1079.3" y="1683.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1082.3" y="1694.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.02%)</title><rect x="1079.3" y="1667.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1082.3" y="1678.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1079.3" y="1651.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1082.3" y="1662.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.02%)</title><rect x="1079.3" y="1635.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1082.3" y="1646.0"></text>
</g>
<g>
<title>ProtectionDomainEntry::object_no_keepalive() (1 samples, 0.02%)</title><rect x="1079.3" y="1619.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1082.3" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (2 samples, 0.05%)</title><rect x="1079.6" y="1731.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1082.6" y="1742.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.02%)</title><rect x="1079.9" y="1715.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1082.9" y="1726.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.02%)</title><rect x="1079.9" y="1699.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1082.9" y="1710.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.02%)</title><rect x="1079.9" y="1683.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1082.9" y="1694.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.02%)</title><rect x="1079.9" y="1667.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1082.9" y="1678.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.02%)</title><rect x="1079.9" y="1651.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1082.9" y="1662.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.02%)</title><rect x="1079.9" y="1635.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1082.9" y="1646.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.02%)</title><rect x="1079.9" y="1619.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1082.9" y="1630.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.02%)</title><rect x="1079.9" y="1603.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1082.9" y="1614.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (3 samples, 0.07%)</title><rect x="1080.2" y="1747.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1083.2" y="1758.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.07%)</title><rect x="1080.2" y="1731.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1083.2" y="1742.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.07%)</title><rect x="1080.2" y="1715.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1083.2" y="1726.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.07%)</title><rect x="1080.2" y="1699.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1083.2" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.07%)</title><rect x="1080.2" y="1683.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1083.2" y="1694.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.07%)</title><rect x="1080.2" y="1667.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1083.2" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.07%)</title><rect x="1080.2" y="1651.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1083.2" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1080.2" y="1635.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1083.2" y="1646.0"></text>
</g>
<g>
<title>ciMethod::code_size_for_inlining() (1 samples, 0.02%)</title><rect x="1080.2" y="1619.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1083.2" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (2 samples, 0.05%)</title><rect x="1080.5" y="1635.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1083.5" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1080.5" y="1619.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1083.5" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1080.5" y="1603.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1083.5" y="1614.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.05%)</title><rect x="1080.5" y="1587.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1083.5" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.05%)</title><rect x="1080.5" y="1571.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1083.5" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.05%)</title><rect x="1080.5" y="1555.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1083.5" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1080.5" y="1539.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1083.5" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::args_list_for_profiling(ciMethod*, int&amp;, bool) (1 samples, 0.02%)</title><rect x="1080.5" y="1523.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1083.5" y="1534.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.02%)</title><rect x="1080.7" y="1523.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1083.7" y="1534.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1080.7" y="1507.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1083.7" y="1518.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1080.7" y="1491.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1083.7" y="1502.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.05%)</title><rect x="1081.0" y="1763.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1084.0" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1081.0" y="1747.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1084.0" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1081.0" y="1731.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1084.0" y="1742.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1081.3" y="1747.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1084.3" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1081.3" y="1731.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1084.3" y="1742.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Thread*, Symbol*, Handle) (1 samples, 0.02%)</title><rect x="1081.3" y="1715.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1084.3" y="1726.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.02%)</title><rect x="1081.3" y="1699.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1084.3" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (2 samples, 0.05%)</title><rect x="1081.6" y="1779.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1084.6" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1081.6" y="1763.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1084.6" y="1774.0"></text>
</g>
<g>
<title>Constant::hash() const (1 samples, 0.02%)</title><rect x="1081.6" y="1747.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1084.6" y="1758.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.02%)</title><rect x="1081.9" y="1763.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1084.9" y="1774.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (2 samples, 0.05%)</title><rect x="1082.2" y="1811.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1085.2" y="1822.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops() (1 samples, 0.02%)</title><rect x="1082.2" y="1795.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1085.2" y="1806.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(IRScope*, ValueStack*) (1 samples, 0.02%)</title><rect x="1082.5" y="1795.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1085.5" y="1806.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.02%)</title><rect x="1082.8" y="1811.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1085.8" y="1822.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.02%)</title><rect x="1082.8" y="1795.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1085.8" y="1806.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1082.8" y="1779.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1085.8" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (4 samples, 0.10%)</title><rect x="1083.0" y="1827.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1086.0" y="1838.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.10%)</title><rect x="1083.0" y="1811.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1086.0" y="1822.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.10%)</title><rect x="1083.0" y="1795.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.0" y="1806.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.10%)</title><rect x="1083.0" y="1779.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1086.0" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.10%)</title><rect x="1083.0" y="1763.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1086.0" y="1774.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.10%)</title><rect x="1083.0" y="1747.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.0" y="1758.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1083.0" y="1731.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1086.0" y="1742.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (2 samples, 0.05%)</title><rect x="1083.0" y="1715.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1086.0" y="1726.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1083.0" y="1699.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1086.0" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1083.0" y="1683.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1086.0" y="1694.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1083.0" y="1667.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1086.0" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1083.0" y="1651.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1086.0" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1083.0" y="1635.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1086.0" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1083.0" y="1619.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1086.0" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.02%)</title><rect x="1083.0" y="1603.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.0" y="1614.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1083.0" y="1587.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.0" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1083.0" y="1571.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1086.0" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1083.0" y="1555.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.0" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1083.0" y="1539.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1086.0" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1083.0" y="1523.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1086.0" y="1534.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1083.0" y="1507.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1086.0" y="1518.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1083.0" y="1491.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.0" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1083.0" y="1475.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.0" y="1486.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1083.0" y="1459.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1086.0" y="1470.0"></text>
</g>
<g>
<title>GraphBuilder::if_zero(ValueType*, Instruction::Condition) (1 samples, 0.02%)</title><rect x="1083.0" y="1443.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1086.0" y="1454.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.02%)</title><rect x="1083.0" y="1427.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1086.0" y="1438.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.02%)</title><rect x="1083.3" y="1667.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1086.3" y="1678.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.02%)</title><rect x="1083.3" y="1651.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1086.3" y="1662.0"></text>
</g>
<g>
<title>Instruction::as_Intrinsic() (1 samples, 0.02%)</title><rect x="1083.6" y="1731.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1086.6" y="1742.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1083.9" y="1731.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.9" y="1742.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1083.9" y="1715.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1086.9" y="1726.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1083.9" y="1699.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1086.9" y="1710.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1083.9" y="1683.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1086.9" y="1694.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1083.9" y="1667.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.9" y="1678.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1083.9" y="1651.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.9" y="1662.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1083.9" y="1635.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1086.9" y="1646.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="1083.9" y="1619.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1086.9" y="1630.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="1083.9" y="1603.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1086.9" y="1614.0"></text>
</g>
<g>
<title>as_BasicType(ValueType*) (1 samples, 0.02%)</title><rect x="1084.2" y="1843.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1087.2" y="1854.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.05%)</title><rect x="1084.5" y="1843.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1087.5" y="1854.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.05%)</title><rect x="1084.5" y="1827.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.5" y="1838.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.05%)</title><rect x="1084.5" y="1811.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1087.5" y="1822.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.05%)</title><rect x="1084.5" y="1795.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1087.5" y="1806.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.05%)</title><rect x="1084.5" y="1779.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.5" y="1790.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.05%)</title><rect x="1084.5" y="1763.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1087.5" y="1774.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol const*, bool) (1 samples, 0.02%)</title><rect x="1084.5" y="1747.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1087.5" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1084.8" y="1747.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1087.8" y="1758.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="1084.8" y="1731.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1087.8" y="1742.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="1084.8" y="1715.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1087.8" y="1726.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_appendix() (3 samples, 0.07%)</title><rect x="1085.0" y="1843.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1088.0" y="1854.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.02%)</title><rect x="1085.9" y="1843.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1088.9" y="1854.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1085.9" y="1827.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1088.9" y="1838.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1085.9" y="1811.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1088.9" y="1822.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1085.9" y="1795.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.9" y="1806.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1085.9" y="1779.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1088.9" y="1790.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1085.9" y="1763.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1088.9" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1085.9" y="1747.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1088.9" y="1758.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Thread*, Symbol*, Handle) (1 samples, 0.02%)</title><rect x="1085.9" y="1731.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1088.9" y="1742.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.02%)</title><rect x="1085.9" y="1715.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1088.9" y="1726.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (3 samples, 0.07%)</title><rect x="1086.2" y="1859.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1089.2" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (2 samples, 0.05%)</title><rect x="1086.2" y="1843.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.2" y="1854.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (2 samples, 0.05%)</title><rect x="1086.2" y="1827.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.2" y="1838.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1086.5" y="1811.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1089.5" y="1822.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.02%)</title><rect x="1086.8" y="1843.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1089.8" y="1854.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1086.8" y="1827.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1089.8" y="1838.0"></text>
</g>
<g>
<title>GraphBuilder::stack_op(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1087.1" y="1859.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.1" y="1870.0"></text>
</g>
<g>
<title>ciMethod::is_compiled_lambda_form() const (1 samples, 0.02%)</title><rect x="1087.3" y="1859.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1090.3" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (4 samples, 0.10%)</title><rect x="1087.6" y="1891.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1090.6" y="1902.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.05%)</title><rect x="1087.6" y="1875.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.6" y="1886.0"></text>
</g>
<g>
<title>BlockListBuilder::set_entries(int) (1 samples, 0.02%)</title><rect x="1087.9" y="1859.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1090.9" y="1870.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1087.9" y="1843.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1090.9" y="1854.0"></text>
</g>
<g>
<title>ResourceBitMap::initialize(unsigned long) (1 samples, 0.02%)</title><rect x="1087.9" y="1827.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.9" y="1838.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1087.9" y="1811.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1090.9" y="1822.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops() (2 samples, 0.05%)</title><rect x="1088.2" y="1875.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1091.2" y="1886.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.02%)</title><rect x="1088.2" y="1859.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1091.2" y="1870.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.02%)</title><rect x="1088.2" y="1843.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1091.2" y="1854.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.02%)</title><rect x="1088.2" y="1827.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1091.2" y="1838.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1088.5" y="1859.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1091.5" y="1870.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.05%)</title><rect x="1088.8" y="1891.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1091.8" y="1902.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (2 samples, 0.05%)</title><rect x="1088.8" y="1875.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1091.8" y="1886.0"></text>
</g>
<g>
<title>VirtualCallData::cell_count() const (1 samples, 0.02%)</title><rect x="1089.1" y="1859.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1092.1" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1089.3" y="1923.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1092.3" y="1934.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1089.6" y="1923.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1092.6" y="1934.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (2 samples, 0.05%)</title><rect x="1089.9" y="1923.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1092.9" y="1934.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.05%)</title><rect x="1089.9" y="1907.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1092.9" y="1918.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (8 samples, 0.19%)</title><rect x="1090.5" y="1923.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1093.5" y="1934.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (8 samples, 0.19%)</title><rect x="1090.5" y="1907.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1093.5" y="1918.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (3 samples, 0.07%)</title><rect x="1090.5" y="1891.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1093.5" y="1902.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1090.5" y="1875.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1093.5" y="1886.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="1090.5" y="1859.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1093.5" y="1870.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="1090.5" y="1843.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1093.5" y="1854.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.02%)</title><rect x="1090.5" y="1827.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1093.5" y="1838.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="1090.5" y="1811.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1093.5" y="1822.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (2 samples, 0.05%)</title><rect x="1090.8" y="1875.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1093.8" y="1886.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="1090.8" y="1859.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1093.8" y="1870.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, JavaThread*) (1 samples, 0.02%)</title><rect x="1090.8" y="1843.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1093.8" y="1854.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.02%)</title><rect x="1090.8" y="1827.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1093.8" y="1838.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="1090.8" y="1811.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1093.8" y="1822.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1090.8" y="1795.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1093.8" y="1806.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_special_method(CallInfo&amp;, LinkInfo const&amp;, methodHandle const&amp;, Handle, JavaThread*) (1 samples, 0.02%)</title><rect x="1091.1" y="1859.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1094.1" y="1870.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, JavaThread*) (1 samples, 0.02%)</title><rect x="1091.1" y="1843.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1094.1" y="1854.0"></text>
</g>
<g>
<title>CompilationPolicy::can_be_compiled(methodHandle const&amp;, int) (1 samples, 0.02%)</title><rect x="1091.1" y="1827.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1094.1" y="1838.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (5 samples, 0.12%)</title><rect x="1091.4" y="1891.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1094.4" y="1902.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (5 samples, 0.12%)</title><rect x="1091.4" y="1875.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1094.4" y="1886.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (3 samples, 0.07%)</title><rect x="1091.4" y="1859.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1094.4" y="1870.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.02%)</title><rect x="1091.4" y="1843.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1094.4" y="1854.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.02%)</title><rect x="1091.4" y="1827.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1094.4" y="1838.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.05%)</title><rect x="1091.6" y="1843.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1094.6" y="1854.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.02%)</title><rect x="1091.6" y="1827.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1094.6" y="1838.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.02%)</title><rect x="1091.6" y="1811.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.6" y="1822.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (1 samples, 0.02%)</title><rect x="1091.6" y="1795.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1094.6" y="1806.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1091.9" y="1827.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1094.9" y="1838.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="1091.9" y="1811.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1094.9" y="1822.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="1091.9" y="1795.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1094.9" y="1806.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1091.9" y="1779.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1094.9" y="1790.0"></text>
</g>
<g>
<title>__x64_sys_gettid (1 samples, 0.02%)</title><rect x="1091.9" y="1763.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.9" y="1774.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1092.2" y="1859.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1095.2" y="1870.0"></text>
</g>
<g>
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.02%)</title><rect x="1092.5" y="1859.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1095.5" y="1870.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1092.8" y="1923.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1095.8" y="1934.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (3 samples, 0.07%)</title><rect x="1093.1" y="1923.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1096.1" y="1934.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(InstanceKlass*, Method*, Klass*, Method*) (1 samples, 0.02%)</title><rect x="1093.4" y="1907.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1096.4" y="1918.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1093.7" y="1907.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1096.7" y="1918.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1093.7" y="1891.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1096.7" y="1902.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, JavaThread*) (1 samples, 0.02%)</title><rect x="1093.7" y="1875.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.7" y="1886.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(Klass*, Symbol*, Symbol*, Klass::PrivateLookupMode) (1 samples, 0.02%)</title><rect x="1093.7" y="1859.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1096.7" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="1093.7" y="1843.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1096.7" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1093.7" y="1827.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1096.7" y="1838.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1093.9" y="1923.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1096.9" y="1934.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1093.9" y="1907.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1096.9" y="1918.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="1093.9" y="1891.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1096.9" y="1902.0"></text>
</g>
<g>
<title>GraphBuilder::load_constant() (1 samples, 0.02%)</title><rect x="1094.2" y="1939.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1097.2" y="1950.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_constant() (1 samples, 0.02%)</title><rect x="1094.2" y="1923.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1097.2" y="1934.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index_impl(constantPoolHandle const&amp;, int, int, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1094.2" y="1907.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1097.2" y="1918.0"></text>
</g>
<g>
<title>ConstantPool::string_at_impl(constantPoolHandle const&amp;, int, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1094.2" y="1891.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1097.2" y="1902.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, JavaThread*) (1 samples, 0.02%)</title><rect x="1094.2" y="1875.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.2" y="1886.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short const*, int, unsigned long, JavaThread*) (1 samples, 0.02%)</title><rect x="1094.2" y="1859.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1097.2" y="1870.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short const*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1094.2" y="1843.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1097.2" y="1854.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;286822ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 286822ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.02%)</title><rect x="1094.2" y="1827.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1097.2" y="1838.0"></text>
</g>
<g>
<title>GraphBuilder::throw_op(int) (1 samples, 0.02%)</title><rect x="1094.5" y="1939.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1097.5" y="1950.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.02%)</title><rect x="1094.5" y="1923.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1097.5" y="1934.0"></text>
</g>
<g>
<title>Invoke::Invoke(Bytecodes::Code, ValueType*, Instruction*, GrowableArray&lt;Instruction*&gt;*, ciMethod*, ValueStack*) (1 samples, 0.02%)</title><rect x="1094.8" y="1939.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.8" y="1950.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="1095.1" y="1939.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1098.1" y="1950.0"></text>
</g>
<g>
<title>GraphBuilder::state_at_entry() (1 samples, 0.02%)</title><rect x="1095.4" y="1971.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1098.4" y="1982.0"></text>
</g>
<g>
<title>IR::compute_code() (2 samples, 0.05%)</title><rect x="1095.7" y="2019.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.7" y="2030.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1095.7" y="2003.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1098.7" y="2014.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1095.7" y="1987.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1098.7" y="1998.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1095.7" y="1971.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1098.7" y="1982.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1095.7" y="1955.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1098.7" y="1966.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1095.7" y="1939.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1098.7" y="1950.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1095.7" y="1923.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.7" y="1934.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1095.7" y="1907.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1098.7" y="1918.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1095.7" y="1891.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1098.7" y="1902.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1095.9" y="2003.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1098.9" y="2014.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (9 samples, 0.22%)</title><rect x="1096.2" y="2019.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1099.2" y="2030.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (9 samples, 0.22%)</title><rect x="1096.2" y="2003.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1099.2" y="2014.0"></text>
</g>
<g>
<title>BitMap::set_intersection_with_result(BitMap const&amp;) (2 samples, 0.05%)</title><rect x="1096.5" y="1987.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1099.5" y="1998.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (5 samples, 0.12%)</title><rect x="1097.1" y="1987.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1100.1" y="1998.0"></text>
</g>
<g>
<title>NullCheckVisitor::do_Invoke(Invoke*) (1 samples, 0.02%)</title><rect x="1098.5" y="1987.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1101.5" y="1998.0"></text>
</g>
<g>
<title>IR::optimize_blocks() (2 samples, 0.05%)</title><rect x="1098.8" y="2019.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1101.8" y="2030.0"></text>
</g>
<g>
<title>Optimizer::eliminate_conditional_expressions() (2 samples, 0.05%)</title><rect x="1098.8" y="2003.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1101.8" y="2014.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (2 samples, 0.05%)</title><rect x="1098.8" y="1987.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.8" y="1998.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.05%)</title><rect x="1098.8" y="1971.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1101.8" y="1982.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.05%)</title><rect x="1098.8" y="1955.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1101.8" y="1966.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1939.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1101.8" y="1950.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1923.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1101.8" y="1934.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1907.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1101.8" y="1918.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1891.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1101.8" y="1902.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1875.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1101.8" y="1886.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1859.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1101.8" y="1870.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1843.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1101.8" y="1854.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1827.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1101.8" y="1838.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1811.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.8" y="1822.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1795.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1101.8" y="1806.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1779.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1101.8" y="1790.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1763.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1101.8" y="1774.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1747.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.8" y="1758.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1731.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1101.8" y="1742.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1715.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1101.8" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1699.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1101.8" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1683.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1101.8" y="1694.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1667.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1101.8" y="1678.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1651.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1101.8" y="1662.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1635.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.8" y="1646.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1619.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1101.8" y="1630.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1603.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.8" y="1614.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1587.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1101.8" y="1598.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1571.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1101.8" y="1582.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1555.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1101.8" y="1566.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1098.8" y="1539.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1101.8" y="1550.0"></text>
</g>
<g>
<title>Instruction::as_If() (1 samples, 0.02%)</title><rect x="1099.1" y="1939.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1102.1" y="1950.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (3 samples, 0.07%)</title><rect x="1099.4" y="2019.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1102.4" y="2030.0"></text>
</g>
<g>
<title>BlockBegin::insert_block_between(BlockBegin*) (2 samples, 0.05%)</title><rect x="1099.4" y="2003.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1102.4" y="2014.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (2 samples, 0.05%)</title><rect x="1099.4" y="1987.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1102.4" y="1998.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1099.7" y="1971.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1102.7" y="1982.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="2003.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.0" y="2014.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1987.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1103.0" y="1998.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1971.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.0" y="1982.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1955.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1103.0" y="1966.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1939.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1103.0" y="1950.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1923.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1103.0" y="1934.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1907.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1103.0" y="1918.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1891.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1103.0" y="1902.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1875.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1103.0" y="1886.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1859.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1103.0" y="1870.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1843.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1103.0" y="1854.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1827.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1103.0" y="1838.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1811.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1103.0" y="1822.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1795.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1103.0" y="1806.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1779.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1103.0" y="1790.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1763.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1103.0" y="1774.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1747.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.0" y="1758.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1731.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1103.0" y="1742.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1715.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.0" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1699.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1103.0" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1683.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1103.0" y="1694.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1667.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.0" y="1678.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1651.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1103.0" y="1662.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1635.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.0" y="1646.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1619.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1103.0" y="1630.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1603.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1103.0" y="1614.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1587.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1103.0" y="1598.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1571.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1103.0" y="1582.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1555.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1103.0" y="1566.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1539.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1103.0" y="1550.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1523.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1103.0" y="1534.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1507.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1103.0" y="1518.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1491.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1103.0" y="1502.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1475.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1103.0" y="1486.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1100.0" y="1459.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.0" y="1470.0"></text>
</g>
<g>
<title>CriticalEdgeFinder::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1100.0" y="1443.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1103.0" y="1454.0"></text>
</g>
<g>
<title>GrowableArrayWithAllocator&lt;BlockPair*, GrowableArray&lt;BlockPair*&gt; &gt;::grow(int) (1 samples, 0.02%)</title><rect x="1100.0" y="1427.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1103.0" y="1438.0"></text>
</g>
<g>
<title>ValueMap::ValueMap() (1 samples, 0.02%)</title><rect x="1100.2" y="2019.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1103.2" y="2030.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (53 samples, 1.29%)</title><rect x="1100.5" y="2035.0" width="15.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1103.5" y="2046.0"></text>
</g>
<g>
<title>Compilation::generate_exception_handler_table() (2 samples, 0.05%)</title><rect x="1100.5" y="2019.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1103.5" y="2030.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1100.8" y="2003.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1103.8" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (37 samples, 0.90%)</title><rect x="1101.1" y="2019.0" width="10.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1104.1" y="2030.0"></text>
</g>
<g>
<title>LIR_Assembler::cmove(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, BasicType) (1 samples, 0.02%)</title><rect x="1101.1" y="2003.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1104.1" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lir_list(LIR_List*) (35 samples, 0.85%)</title><rect x="1101.4" y="2003.0" width="10.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1104.4" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::align_call(LIR_Code) (1 samples, 0.02%)</title><rect x="1101.4" y="1987.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1104.4" y="1998.0"></text>
</g>
<g>
<title>LIR_Assembler::const2reg(LIR_OprDesc*, LIR_OprDesc*, LIR_PatchCode, CodeEmitInfo*) (1 samples, 0.02%)</title><rect x="1101.7" y="1987.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1104.7" y="1998.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (4 samples, 0.10%)</title><rect x="1102.0" y="1987.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1105.0" y="1998.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (3 samples, 0.07%)</title><rect x="1102.0" y="1971.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.0" y="1982.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.05%)</title><rect x="1102.0" y="1955.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1105.0" y="1966.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1102.3" y="1939.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1105.3" y="1950.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.02%)</title><rect x="1102.3" y="1923.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.3" y="1934.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.02%)</title><rect x="1102.5" y="1955.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.5" y="1966.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.02%)</title><rect x="1102.5" y="1939.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1105.5" y="1950.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.02%)</title><rect x="1102.5" y="1923.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1105.5" y="1934.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (1 samples, 0.02%)</title><rect x="1102.8" y="1971.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1105.8" y="1982.0"></text>
</g>
<g>
<title>MacroAssembler::call(AddressLiteral) (1 samples, 0.02%)</title><rect x="1102.8" y="1955.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1105.8" y="1966.0"></text>
</g>
<g>
<title>Assembler::call_literal(unsigned char*, RelocationHolder const&amp;) (1 samples, 0.02%)</title><rect x="1102.8" y="1939.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1105.8" y="1950.0"></text>
</g>
<g>
<title>opt_virtual_call_Relocation::pack_data_to(CodeSection*) (1 samples, 0.02%)</title><rect x="1102.8" y="1923.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1105.8" y="1934.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op0(LIR_Op0*) (4 samples, 0.10%)</title><rect x="1103.1" y="1987.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1106.1" y="1998.0"></text>
</g>
<g>
<title>Assembler::nop(int) (1 samples, 0.02%)</title><rect x="1103.1" y="1971.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1106.1" y="1982.0"></text>
</g>
<g>
<title>C1_MacroAssembler::build_frame(int, int) (1 samples, 0.02%)</title><rect x="1103.4" y="1971.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1106.4" y="1982.0"></text>
</g>
<g>
<title>os::vm_page_size() (1 samples, 0.02%)</title><rect x="1103.4" y="1955.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1106.4" y="1966.0"></text>
</g>
<g>
<title>LIR_Assembler::check_icache() (2 samples, 0.05%)</title><rect x="1103.7" y="1971.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1106.7" y="1982.0"></text>
</g>
<g>
<title>Assembler::addq(RegisterImpl*, RegisterImpl*) (1 samples, 0.02%)</title><rect x="1103.7" y="1955.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1106.7" y="1966.0"></text>
</g>
<g>
<title>C1_MacroAssembler::inline_cache_check(RegisterImpl*, RegisterImpl*) (1 samples, 0.02%)</title><rect x="1104.0" y="1955.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.0" y="1966.0"></text>
</g>
<g>
<title>Assembler::reachable(AddressLiteral) (1 samples, 0.02%)</title><rect x="1104.0" y="1939.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1107.0" y="1950.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (8 samples, 0.19%)</title><rect x="1104.3" y="1987.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.3" y="1998.0"></text>
</g>
<g>
<title>LIR_Assembler::const2reg(LIR_OprDesc*, LIR_OprDesc*, LIR_PatchCode, CodeEmitInfo*) (2 samples, 0.05%)</title><rect x="1104.3" y="1971.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.3" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::mem2reg(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool) (1 samples, 0.02%)</title><rect x="1104.8" y="1971.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.8" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::move_op(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1105.1" y="1971.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1108.1" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::reg2mem(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1105.4" y="1971.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1108.4" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::reg2reg(LIR_OprDesc*, LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1105.7" y="1971.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1108.7" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::reg2stack(LIR_OprDesc*, LIR_OprDesc*, BasicType, bool) (1 samples, 0.02%)</title><rect x="1106.0" y="1971.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1109.0" y="1982.0"></text>
</g>
<g>
<title>Assembler::movq(Address, RegisterImpl*) (1 samples, 0.02%)</title><rect x="1106.0" y="1955.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1109.0" y="1966.0"></text>
</g>
<g>
<title>Assembler::emit_compressed_disp_byte(int&amp;) (1 samples, 0.02%)</title><rect x="1106.0" y="1939.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1109.0" y="1950.0"></text>
</g>
<g>
<title>LIR_OprPtr::as_constant() (1 samples, 0.02%)</title><rect x="1106.3" y="1971.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1109.3" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op2(LIR_Op2*) (1 samples, 0.02%)</title><rect x="1106.6" y="1987.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.6" y="1998.0"></text>
</g>
<g>
<title>LIR_Address::as_address() (1 samples, 0.02%)</title><rect x="1106.6" y="1971.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1109.6" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (4 samples, 0.10%)</title><rect x="1106.8" y="1987.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1109.8" y="1998.0"></text>
</g>
<g>
<title>MacroAssembler::load_klass(RegisterImpl*, RegisterImpl*, RegisterImpl*) (1 samples, 0.02%)</title><rect x="1107.1" y="1971.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1110.1" y="1982.0"></text>
</g>
<g>
<title>Assembler::prefix(Address, RegisterImpl*, bool) (1 samples, 0.02%)</title><rect x="1107.1" y="1955.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1110.1" y="1966.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (2 samples, 0.05%)</title><rect x="1107.4" y="1971.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1110.4" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (10 samples, 0.24%)</title><rect x="1108.0" y="1987.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1111.0" y="1998.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (9 samples, 0.22%)</title><rect x="1108.3" y="1971.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1111.3" y="1982.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (8 samples, 0.19%)</title><rect x="1108.6" y="1955.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1111.6" y="1966.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (4 samples, 0.10%)</title><rect x="1109.1" y="1939.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1112.1" y="1950.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (2 samples, 0.05%)</title><rect x="1110.3" y="1939.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1113.3" y="1950.0"></text>
</g>
<g>
<title>LIR_OpAllocObj::emit_code(LIR_Assembler*) (1 samples, 0.02%)</title><rect x="1110.9" y="1987.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1113.9" y="1998.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_alloc_obj(LIR_OpAllocObj*) (1 samples, 0.02%)</title><rect x="1110.9" y="1971.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1113.9" y="1982.0"></text>
</g>
<g>
<title>C1_MacroAssembler::initialize_object(RegisterImpl*, RegisterImpl*, RegisterImpl*, int, RegisterImpl*, RegisterImpl*, bool) (1 samples, 0.02%)</title><rect x="1110.9" y="1955.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1113.9" y="1966.0"></text>
</g>
<g>
<title>MacroAssembler::encode_klass_not_null(RegisterImpl*, RegisterImpl*) (1 samples, 0.02%)</title><rect x="1110.9" y="1939.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1113.9" y="1950.0"></text>
</g>
<g>
<title>LIR_OpTypeCheck::emit_code(LIR_Assembler*) (1 samples, 0.02%)</title><rect x="1111.1" y="1987.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1114.1" y="1998.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*) (1 samples, 0.02%)</title><rect x="1111.1" y="1971.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1114.1" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*) (1 samples, 0.02%)</title><rect x="1111.1" y="1955.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1114.1" y="1966.0"></text>
</g>
<g>
<title>Assembler::mov64(RegisterImpl*, long) (1 samples, 0.02%)</title><rect x="1111.1" y="1939.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1114.1" y="1950.0"></text>
</g>
<g>
<title>LIR_OpJavaCall::emit_code(LIR_Assembler*) (1 samples, 0.02%)</title><rect x="1111.4" y="2003.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1114.4" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (11 samples, 0.27%)</title><rect x="1111.7" y="2019.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1114.7" y="2030.0"></text>
</g>
<g>
<title>ArrayCopyStub::emit_code(LIR_Assembler*) (1 samples, 0.02%)</title><rect x="1111.7" y="2003.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1114.7" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::align_call(LIR_Code) (1 samples, 0.02%)</title><rect x="1111.7" y="1987.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1114.7" y="1998.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (2 samples, 0.05%)</title><rect x="1112.0" y="2003.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1115.0" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.05%)</title><rect x="1112.0" y="1987.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1115.0" y="1998.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.05%)</title><rect x="1112.0" y="1971.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1115.0" y="1982.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1112.3" y="1955.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1115.3" y="1966.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="1112.3" y="1939.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1115.3" y="1950.0"></text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (3 samples, 0.07%)</title><rect x="1112.6" y="2003.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1115.6" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (3 samples, 0.07%)</title><rect x="1112.6" y="1987.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.6" y="1998.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (3 samples, 0.07%)</title><rect x="1112.6" y="1971.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.6" y="1982.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.05%)</title><rect x="1112.6" y="1955.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1115.6" y="1966.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="1112.9" y="1939.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1115.9" y="1950.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.02%)</title><rect x="1113.1" y="1955.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1116.1" y="1966.0"></text>
</g>
<g>
<title>NewInstanceStub::emit_code(LIR_Assembler*) (1 samples, 0.02%)</title><rect x="1113.4" y="2003.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1116.4" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.02%)</title><rect x="1113.4" y="1987.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1116.4" y="1998.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.02%)</title><rect x="1113.4" y="1971.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1116.4" y="1982.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1113.4" y="1955.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1116.4" y="1966.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 0.02%)</title><rect x="1113.4" y="1939.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.4" y="1950.0"></text>
</g>
<g>
<title>NewObjectArrayStub::emit_code(LIR_Assembler*) (1 samples, 0.02%)</title><rect x="1113.7" y="2003.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1116.7" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.02%)</title><rect x="1113.7" y="1987.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1116.7" y="1998.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.02%)</title><rect x="1113.7" y="1971.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1116.7" y="1982.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.02%)</title><rect x="1113.7" y="1955.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1116.7" y="1966.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.02%)</title><rect x="1113.7" y="1939.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1116.7" y="1950.0"></text>
</g>
<g>
<title>PatchingStub::emit_code(LIR_Assembler*) (2 samples, 0.05%)</title><rect x="1114.0" y="2003.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1117.0" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.02%)</title><rect x="1114.3" y="1987.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1117.3" y="1998.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.02%)</title><rect x="1114.3" y="1971.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1117.3" y="1982.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1114.3" y="1955.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1117.3" y="1966.0"></text>
</g>
<g>
<title>RangeCheckStub::emit_code(LIR_Assembler*) (1 samples, 0.02%)</title><rect x="1114.6" y="2003.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1117.6" y="2014.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.02%)</title><rect x="1114.6" y="1987.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1117.6" y="1998.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.02%)</title><rect x="1114.6" y="1971.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1117.6" y="1982.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_unwind_handler() (3 samples, 0.07%)</title><rect x="1114.9" y="2019.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1117.9" y="2030.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, Address) (1 samples, 0.02%)</title><rect x="1115.2" y="2003.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1118.2" y="2014.0"></text>
</g>
<g>
<title>Assembler::emit_compressed_disp_byte(int&amp;) (1 samples, 0.02%)</title><rect x="1115.2" y="1987.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.2" y="1998.0"></text>
</g>
<g>
<title>Assembler::movslq(Address, int) (1 samples, 0.02%)</title><rect x="1115.4" y="2003.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1118.4" y="2014.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (147 samples, 3.57%)</title><rect x="1115.7" y="2035.0" width="42.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1118.7" y="2046.0">Comp..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (26 samples, 0.63%)</title><rect x="1115.7" y="2019.0" width="7.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1118.7" y="2030.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (26 samples, 0.63%)</title><rect x="1115.7" y="2003.0" width="7.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1118.7" y="2014.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.02%)</title><rect x="1115.7" y="1987.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1118.7" y="1998.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1115.7" y="1971.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1118.7" y="1982.0"></text>
</g>
<g>
<title>LIRGenerator::do_CheckCast(CheckCast*) (1 samples, 0.02%)</title><rect x="1116.0" y="1987.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1119.0" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.02%)</title><rect x="1116.0" y="1971.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1119.0" y="1982.0"></text>
</g>
<g>
<title>LIRGenerator::do_ExceptionObject(ExceptionObject*) (1 samples, 0.02%)</title><rect x="1116.3" y="1987.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1119.3" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::do_If(If*) (2 samples, 0.05%)</title><rect x="1116.6" y="1987.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1119.6" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::profile_branch(If*, Instruction::Condition) (1 samples, 0.02%)</title><rect x="1116.6" y="1971.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1119.6" y="1982.0"></text>
</g>
<g>
<title>LIRGenerator::walk(Instruction*) (1 samples, 0.02%)</title><rect x="1116.9" y="1971.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1119.9" y="1982.0"></text>
</g>
<g>
<title>LIRGenerator::can_inline_as_constant(Instruction*) const (1 samples, 0.02%)</title><rect x="1116.9" y="1955.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1119.9" y="1966.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (5 samples, 0.12%)</title><rect x="1117.2" y="1987.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.2" y="1998.0"></text>
</g>
<g>
<title>FrameMap::java_calling_convention(GrowableArray&lt;BasicType&gt; const*, bool) (1 samples, 0.02%)</title><rect x="1117.2" y="1971.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1120.2" y="1982.0"></text>
</g>
<g>
<title>LIRGenerator::invoke_load_arguments(Invoke*, GrowableArray&lt;LIRItem*&gt;*, GrowableArray&lt;LIR_OprDesc*&gt; const*) (3 samples, 0.07%)</title><rect x="1117.5" y="1971.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1120.5" y="1982.0"></text>
</g>
<g>
<title>LIRItem::load_item_force(LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1117.5" y="1955.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.5" y="1966.0"></text>
</g>
<g>
<title>LIR_OprDesc::type() const (2 samples, 0.05%)</title><rect x="1117.7" y="1955.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1120.7" y="1966.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.02%)</title><rect x="1118.3" y="1971.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.3" y="1982.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.02%)</title><rect x="1118.3" y="1955.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1121.3" y="1966.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.02%)</title><rect x="1118.3" y="1939.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1121.3" y="1950.0"></text>
</g>
<g>
<title>LIRGenerator::do_LoadField(LoadField*) (1 samples, 0.02%)</title><rect x="1118.6" y="1987.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.6" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::access_load_at(unsigned long, BasicType, LIRItem&amp;, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, CodeEmitInfo*) (1 samples, 0.02%)</title><rect x="1118.6" y="1971.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.6" y="1982.0"></text>
</g>
<g>
<title>BarrierSetC1::load_at(LIRAccess&amp;, LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1118.6" y="1955.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1121.6" y="1966.0"></text>
</g>
<g>
<title>BarrierSetC1::resolve_address(LIRAccess&amp;, bool) (1 samples, 0.02%)</title><rect x="1118.6" y="1939.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.6" y="1950.0"></text>
</g>
<g>
<title>LIRGenerator::generate_address(LIR_OprDesc*, LIR_OprDesc*, int, int, BasicType) (1 samples, 0.02%)</title><rect x="1118.6" y="1923.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1121.6" y="1934.0"></text>
</g>
<g>
<title>LIRGenerator::do_NewInstance(NewInstance*) (1 samples, 0.02%)</title><rect x="1118.9" y="1987.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.9" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::new_instance(LIR_OprDesc*, ciInstanceKlass*, bool, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) (1 samples, 0.02%)</title><rect x="1118.9" y="1971.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.9" y="1982.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileCall(ProfileCall*) (4 samples, 0.10%)</title><rect x="1119.2" y="1987.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1122.2" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::profile_parameters_at_call(ProfileCall*) (1 samples, 0.02%)</title><rect x="1119.5" y="1971.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.5" y="1982.0"></text>
</g>
<g>
<title>LIRItem::set_instruction(Instruction*) (1 samples, 0.02%)</title><rect x="1119.7" y="1971.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.7" y="1982.0"></text>
</g>
<g>
<title>ciMethod::method_data_or_null() (1 samples, 0.02%)</title><rect x="1120.0" y="1971.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.0" y="1982.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (3 samples, 0.07%)</title><rect x="1120.3" y="1987.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.3" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, LIR_OprDesc*, int, int, bool, bool) (1 samples, 0.02%)</title><rect x="1120.3" y="1971.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1123.3" y="1982.0"></text>
</g>
<g>
<title>LIR_List::metadata2reg(Metadata*, LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1120.3" y="1955.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1123.3" y="1966.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (2 samples, 0.05%)</title><rect x="1120.6" y="1971.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1123.6" y="1982.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (2 samples, 0.05%)</title><rect x="1120.6" y="1955.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.6" y="1966.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (2 samples, 0.05%)</title><rect x="1120.6" y="1939.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1123.6" y="1950.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.02%)</title><rect x="1120.9" y="1923.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1123.9" y="1934.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileReturnType(ProfileReturnType*) (2 samples, 0.05%)</title><rect x="1121.2" y="1987.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.2" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::profile_type(ciMethodData*, int, int, long, Instruction*, LIR_OprDesc*&amp;, bool, ciKlass*, ciKlass*) (1 samples, 0.02%)</title><rect x="1121.2" y="1971.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1124.2" y="1982.0"></text>
</g>
<g>
<title>ciObject::is_null_object() const (1 samples, 0.02%)</title><rect x="1121.2" y="1955.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.2" y="1966.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1121.5" y="1971.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1124.5" y="1982.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1121.5" y="1955.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1124.5" y="1966.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1121.5" y="1939.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1124.5" y="1950.0"></text>
</g>
<g>
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="1121.5" y="1923.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1124.5" y="1934.0"></text>
</g>
<g>
<title>LIRGenerator::do_StoreField(StoreField*) (2 samples, 0.05%)</title><rect x="1121.8" y="1987.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.8" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::access_store_at(unsigned long, BasicType, LIRItem&amp;, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, CodeEmitInfo*) (2 samples, 0.05%)</title><rect x="1121.8" y="1971.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.8" y="1982.0"></text>
</g>
<g>
<title>G1BarrierSetC1::post_barrier(LIRAccess&amp;, LIR_OprDesc*, LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1121.8" y="1955.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1124.8" y="1966.0"></text>
</g>
<g>
<title>ModRefBarrierSetC1::store_at_resolved(LIRAccess&amp;, LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1122.0" y="1955.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.0" y="1966.0"></text>
</g>
<g>
<title>LIRGenerator::volatile_field_store(LIR_OprDesc*, LIR_Address*, CodeEmitInfo*) (1 samples, 0.02%)</title><rect x="1122.0" y="1939.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1125.0" y="1950.0"></text>
</g>
<g>
<title>LIRGenerator::do_StoreIndexed(StoreIndexed*) (2 samples, 0.05%)</title><rect x="1122.3" y="1987.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1125.3" y="1998.0"></text>
</g>
<g>
<title>LIRGenerator::access_store_at(unsigned long, BasicType, LIRItem&amp;, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, CodeEmitInfo*) (1 samples, 0.02%)</title><rect x="1122.3" y="1971.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1125.3" y="1982.0"></text>
</g>
<g>
<title>BarrierSetC1::store_at(LIRAccess&amp;, LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1122.3" y="1955.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1125.3" y="1966.0"></text>
</g>
<g>
<title>BarrierSetC1::resolve_address(LIRAccess&amp;, bool) (1 samples, 0.02%)</title><rect x="1122.3" y="1939.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.3" y="1950.0"></text>
</g>
<g>
<title>LIRGenerator::emit_array_address(LIR_OprDesc*, LIR_OprDesc*, BasicType) (1 samples, 0.02%)</title><rect x="1122.3" y="1923.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1125.3" y="1934.0"></text>
</g>
<g>
<title>LIRGenerator::array_store_check(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, ciMethod*, int) (1 samples, 0.02%)</title><rect x="1122.6" y="1971.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1125.6" y="1982.0"></text>
</g>
<g>
<title>LIR_List::store_check(LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, ciMethod*, int) (1 samples, 0.02%)</title><rect x="1122.6" y="1955.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.6" y="1966.0"></text>
</g>
<g>
<title>LIR_List::branch_destination(Label*) (1 samples, 0.02%)</title><rect x="1122.9" y="1987.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.9" y="1998.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::optimize(BlockList*) (3 samples, 0.07%)</title><rect x="1123.2" y="2019.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1126.2" y="2030.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::delete_empty_blocks(BlockList*) (1 samples, 0.02%)</title><rect x="1123.2" y="2003.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1126.2" y="2014.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::delete_jumps_to_return(BlockList*) (1 samples, 0.02%)</title><rect x="1123.5" y="2003.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1126.5" y="2014.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::delete_unnecessary_jumps(BlockList*) (1 samples, 0.02%)</title><rect x="1123.8" y="2003.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1126.8" y="2014.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (118 samples, 2.87%)</title><rect x="1124.0" y="2019.0" width="33.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1127.0" y="2030.0">Li..</text>
</g>
<g>
<title>FrameMap::finalize_frame(int) (1 samples, 0.02%)</title><rect x="1124.0" y="2003.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1127.0" y="2014.0"></text>
</g>
<g>
<title>Instruction::as_Constant() (2 samples, 0.05%)</title><rect x="1124.3" y="2003.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.3" y="2014.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (32 samples, 0.78%)</title><rect x="1124.9" y="2003.0" width="9.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1127.9" y="2014.0"></text>
</g>
<g>
<title>LIR_List::append(LIR_InsertionBuffer*) (1 samples, 0.02%)</title><rect x="1127.8" y="1987.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1130.8" y="1998.0"></text>
</g>
<g>
<title>GrowableArrayWithAllocator&lt;LIR_Op*, GrowableArray&lt;LIR_Op*&gt; &gt;::grow(int) (1 samples, 0.02%)</title><rect x="1127.8" y="1971.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.8" y="1982.0"></text>
</g>
<g>
<title>LinearScanWalker::LinearScanWalker(LinearScan*, Interval*, Interval*) (1 samples, 0.02%)</title><rect x="1128.1" y="1987.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.1" y="1998.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1128.1" y="1971.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.1" y="1982.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (20 samples, 0.49%)</title><rect x="1128.3" y="1987.0" width="5.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.3" y="1998.0"></text>
</g>
<g>
<title>Interval::split_child_before_op_id(int) (1 samples, 0.02%)</title><rect x="1128.3" y="1971.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.3" y="1982.0"></text>
</g>
<g>
<title>IntervalWalker::append_to_unhandled(Interval**, Interval*) (2 samples, 0.05%)</title><rect x="1128.6" y="1971.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.6" y="1982.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (13 samples, 0.32%)</title><rect x="1129.2" y="1971.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1132.2" y="1982.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (4 samples, 0.10%)</title><rect x="1130.6" y="1955.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1133.6" y="1966.0"></text>
</g>
<g>
<title>LinearScanWalker::split_before_usage(Interval*, int, int) (2 samples, 0.05%)</title><rect x="1131.8" y="1955.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.8" y="1966.0"></text>
</g>
<g>
<title>LinearScan::append_interval(Interval*) (1 samples, 0.02%)</title><rect x="1131.8" y="1939.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.8" y="1950.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1132.1" y="1939.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1135.1" y="1950.0"></text>
</g>
<g>
<title>Range::intersects_at(Range*) const (2 samples, 0.05%)</title><rect x="1132.4" y="1955.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1135.4" y="1966.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (1 samples, 0.02%)</title><rect x="1132.9" y="1971.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1135.9" y="1982.0"></text>
</g>
<g>
<title>LinearScanWalker::spill_block_inactive_fixed(Interval*) (1 samples, 0.02%)</title><rect x="1132.9" y="1955.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.9" y="1966.0"></text>
</g>
<g>
<title>LinearScanWalker::insert_move(int, Interval*, Interval*) (2 samples, 0.05%)</title><rect x="1133.2" y="1971.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1136.2" y="1982.0"></text>
</g>
<g>
<title>MoveResolver::resolve_mappings() (1 samples, 0.02%)</title><rect x="1133.5" y="1955.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1136.5" y="1966.0"></text>
</g>
<g>
<title>LIR_InsertionBuffer::append(int, LIR_Op*) (1 samples, 0.02%)</title><rect x="1133.5" y="1939.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.5" y="1950.0"></text>
</g>
<g>
<title>LinearScanWalker::split_for_spilling(Interval*) (1 samples, 0.02%)</title><rect x="1133.8" y="1971.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1136.8" y="1982.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (29 samples, 0.70%)</title><rect x="1134.1" y="2003.0" width="8.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.1" y="2014.0"></text>
</g>
<g>
<title>G1PreBarrierStub::visit(LIR_OpVisitState*) (1 samples, 0.02%)</title><rect x="1136.7" y="1987.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1139.7" y="1998.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.02%)</title><rect x="1137.0" y="1987.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.0" y="1998.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (2 samples, 0.05%)</title><rect x="1137.2" y="1987.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.2" y="1998.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (8 samples, 0.19%)</title><rect x="1137.8" y="1987.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.8" y="1998.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.05%)</title><rect x="1138.4" y="1971.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.4" y="1982.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value_for_constant(LIR_OprDesc*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1139.0" y="1971.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1142.0" y="1982.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.07%)</title><rect x="1139.2" y="1971.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1142.2" y="1982.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.07%)</title><rect x="1139.2" y="1955.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.2" y="1966.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1139.2" y="1939.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1142.2" y="1950.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.02%)</title><rect x="1139.2" y="1923.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.2" y="1934.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.02%)</title><rect x="1139.5" y="1939.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.5" y="1950.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.02%)</title><rect x="1139.5" y="1923.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.5" y="1934.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1139.5" y="1907.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.5" y="1918.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1139.8" y="1939.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.8" y="1950.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (8 samples, 0.19%)</title><rect x="1140.1" y="1987.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.1" y="1998.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (8 samples, 0.19%)</title><rect x="1140.1" y="1971.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1143.1" y="1982.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (5 samples, 0.12%)</title><rect x="1140.4" y="1955.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.4" y="1966.0"></text>
</g>
<g>
<title>OopMap::set_oop(VMRegImpl*) (2 samples, 0.05%)</title><rect x="1141.8" y="1955.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1144.8" y="1966.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (28 samples, 0.68%)</title><rect x="1142.4" y="2003.0" width="8.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.4" y="2014.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (1 samples, 0.02%)</title><rect x="1146.1" y="1987.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.1" y="1998.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (3 samples, 0.07%)</title><rect x="1146.4" y="1987.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.4" y="1998.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.02%)</title><rect x="1147.0" y="1971.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.0" y="1982.0"></text>
</g>
<g>
<title>LinearScan::add_def(int, int, IntervalUseKind, BasicType) (1 samples, 0.02%)</title><rect x="1147.3" y="1987.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.3" y="1998.0"></text>
</g>
<g>
<title>LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind) (6 samples, 0.15%)</title><rect x="1147.6" y="1987.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.6" y="1998.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (1 samples, 0.02%)</title><rect x="1149.0" y="1971.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.0" y="1982.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_input_operand(LIR_Op*, LIR_OprDesc*) (3 samples, 0.07%)</title><rect x="1149.3" y="1987.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.3" y="1998.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_output_operand(LIR_Op*, LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1150.1" y="1987.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.1" y="1998.0"></text>
</g>
<g>
<title>LinearScan::calc_operand_for_interval(Interval const*) (1 samples, 0.02%)</title><rect x="1150.4" y="2003.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.4" y="2014.0"></text>
</g>
<g>
<title>LinearScan::compute_global_live_sets() (2 samples, 0.05%)</title><rect x="1150.7" y="2003.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.7" y="2014.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (10 samples, 0.24%)</title><rect x="1151.3" y="2003.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.3" y="2014.0"></text>
</g>
<g>
<title>G1PreBarrierStub::visit(LIR_OpVisitState*) (1 samples, 0.02%)</title><rect x="1153.0" y="1987.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.0" y="1998.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.02%)</title><rect x="1153.3" y="1987.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.3" y="1998.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long, bool) (2 samples, 0.05%)</title><rect x="1153.6" y="1987.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.6" y="1998.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1153.6" y="1971.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1156.6" y="1982.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1153.9" y="1971.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.9" y="1982.0"></text>
</g>
<g>
<title>LinearScan::eliminate_spill_moves() (1 samples, 0.02%)</title><rect x="1154.2" y="2003.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.2" y="2014.0"></text>
</g>
<g>
<title>LinearScan::init_compute_oop_maps() (2 samples, 0.05%)</title><rect x="1154.4" y="2003.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.4" y="2014.0"></text>
</g>
<g>
<title>LinearScan::number_instructions() (3 samples, 0.07%)</title><rect x="1155.0" y="2003.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1158.0" y="2014.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (2 samples, 0.05%)</title><rect x="1155.9" y="2003.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.9" y="2014.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (1 samples, 0.02%)</title><rect x="1155.9" y="1987.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.9" y="1998.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (1 samples, 0.02%)</title><rect x="1155.9" y="1971.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1158.9" y="1982.0"></text>
</g>
<g>
<title>MoveResolver::resolve_mappings() (1 samples, 0.02%)</title><rect x="1156.2" y="1987.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.2" y="1998.0"></text>
</g>
<g>
<title>LIR_InsertionBuffer::append(int, LIR_Op*) (1 samples, 0.02%)</title><rect x="1156.2" y="1971.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.2" y="1982.0"></text>
</g>
<g>
<title>LinearScan::resolve_exception_handlers() (3 samples, 0.07%)</title><rect x="1156.4" y="2003.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.4" y="2014.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.02%)</title><rect x="1156.7" y="1987.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.7" y="1998.0"></text>
</g>
<g>
<title>LinearScan::resolve_exception_edge(XHandler*, int, MoveResolver&amp;) (1 samples, 0.02%)</title><rect x="1157.0" y="1987.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.0" y="1998.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (1 samples, 0.02%)</title><rect x="1157.0" y="1971.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.0" y="1982.0"></text>
</g>
<g>
<title>LinearScan::sort_intervals_before_allocation() (1 samples, 0.02%)</title><rect x="1157.3" y="2003.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.3" y="2014.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_input_operand(LIR_Op*, LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1157.6" y="2003.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.6" y="2014.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (5 samples, 0.12%)</title><rect x="1157.9" y="2035.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.9" y="2046.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (5 samples, 0.12%)</title><rect x="1157.9" y="2019.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.9" y="2030.0"></text>
</g>
<g>
<title>Instruction::as_BlockEnd() (1 samples, 0.02%)</title><rect x="1157.9" y="2003.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.9" y="2014.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (4 samples, 0.10%)</title><rect x="1158.2" y="2003.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.2" y="2014.0"></text>
</g>
<g>
<title>UseCountComputer::visit(Instruction**) (1 samples, 0.02%)</title><rect x="1158.5" y="1987.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.5" y="1998.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (2 samples, 0.05%)</title><rect x="1158.7" y="1987.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.7" y="1998.0"></text>
</g>
<g>
<title>UseCountComputer::visit(Instruction**) (1 samples, 0.02%)</title><rect x="1159.0" y="1971.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.0" y="1982.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.05%)</title><rect x="1159.3" y="2035.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.3" y="2046.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="1159.3" y="2019.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.3" y="2030.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1159.3" y="2003.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.3" y="2014.0"></text>
</g>
<g>
<title>Metadata::is_klass() const (1 samples, 0.02%)</title><rect x="1159.3" y="1987.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.3" y="1998.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.02%)</title><rect x="1159.6" y="2019.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.6" y="2030.0"></text>
</g>
<g>
<title>JumpData::cell_count() const (1 samples, 0.02%)</title><rect x="1159.6" y="2003.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.6" y="2014.0"></text>
</g>
<g>
<title>Compilation::initialize() (1 samples, 0.02%)</title><rect x="1159.9" y="2051.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.9" y="2062.0"></text>
</g>
<g>
<title>JVMFlag::is_default(JVMFlagsEnum) (1 samples, 0.02%)</title><rect x="1159.9" y="2035.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.9" y="2046.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (25 samples, 0.61%)</title><rect x="1160.2" y="2051.0" width="7.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.2" y="2062.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.02%)</title><rect x="1160.2" y="2035.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.2" y="2046.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1160.5" y="2035.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1163.5" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1160.5" y="2019.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.5" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1160.5" y="2003.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.5" y="2014.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1160.5" y="1987.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1163.5" y="1998.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1160.5" y="1971.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1163.5" y="1982.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1160.5" y="1955.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.5" y="1966.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1160.5" y="1939.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1163.5" y="1950.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1160.5" y="1923.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.5" y="1934.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1160.5" y="1907.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.5" y="1918.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState, GrowableArrayView&lt;RuntimeStub*&gt; const&amp;) (23 samples, 0.56%)</title><rect x="1160.8" y="2035.0" width="6.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.8" y="2046.0"></text>
</g>
<g>
<title>Dependencies::validate_dependencies(CompileTask*, char**) (1 samples, 0.02%)</title><rect x="1160.8" y="2019.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.8" y="2030.0"></text>
</g>
<g>
<title>Dependencies::DepStream::check_new_klass_dependency(NewKlassDepChange*) (1 samples, 0.02%)</title><rect x="1160.8" y="2003.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.8" y="2014.0"></text>
</g>
<g>
<title>Dependencies::check_unique_concrete_method(InstanceKlass*, Method*, Klass*, Method*, KlassDepChange*) (1 samples, 0.02%)</title><rect x="1160.8" y="1987.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.8" y="1998.0"></text>
</g>
<g>
<title>LinkedConcreteMethodFinder::find_witness_anywhere(InstanceKlass*) (1 samples, 0.02%)</title><rect x="1160.8" y="1971.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.8" y="1982.0"></text>
</g>
<g>
<title>ClassHierarchyIterator::next() (1 samples, 0.02%)</title><rect x="1160.8" y="1955.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.8" y="1966.0"></text>
</g>
<g>
<title>Klass::subklass(bool) const (1 samples, 0.02%)</title><rect x="1160.8" y="1939.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.8" y="1950.0"></text>
</g>
<g>
<title>ServiceThread::enqueue_deferred_event(JvmtiDeferredEvent*) (1 samples, 0.02%)</title><rect x="1161.0" y="2019.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.0" y="2030.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1161.3" y="2019.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1164.3" y="2030.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (5 samples, 0.12%)</title><rect x="1161.6" y="2019.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1164.6" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="1162.2" y="2003.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1165.2" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="1162.2" y="1987.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1165.2" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="1162.2" y="1971.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1165.2" y="1982.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="1162.2" y="1955.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1165.2" y="1966.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="1162.2" y="1939.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1165.2" y="1950.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="1162.2" y="1923.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1165.2" y="1934.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="1162.2" y="1907.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1165.2" y="1918.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="1162.2" y="1891.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1165.2" y="1902.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1162.8" y="1971.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1165.8" y="1982.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1162.8" y="1955.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1165.8" y="1966.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1162.8" y="1939.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.8" y="1950.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1162.8" y="1923.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1165.8" y="1934.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView&lt;RuntimeStub*&gt; const&amp;, char*, int, int, char const*, FailedSpeculation**) (15 samples, 0.36%)</title><rect x="1163.0" y="2019.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.0" y="2030.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, int, bool, int) (3 samples, 0.07%)</title><rect x="1163.0" y="2003.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.0" y="2014.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long) (3 samples, 0.07%)</title><rect x="1163.0" y="1987.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.0" y="1998.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long) (2 samples, 0.05%)</title><rect x="1163.3" y="1971.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.3" y="1982.0"></text>
</g>
<g>
<title>CodeCache::commit(CodeBlob*) (1 samples, 0.02%)</title><rect x="1163.9" y="2003.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.9" y="2014.0"></text>
</g>
<g>
<title>metadata_Relocation::unpack_data() (1 samples, 0.02%)</title><rect x="1164.2" y="2003.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.2" y="2014.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, GrowableArrayView&lt;RuntimeStub*&gt; const&amp;, char*, int, int) (10 samples, 0.24%)</title><rect x="1164.5" y="2003.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.5" y="2014.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (4 samples, 0.10%)</title><rect x="1164.5" y="1987.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.5" y="1998.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (3 samples, 0.07%)</title><rect x="1164.5" y="1971.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.5" y="1982.0"></text>
</g>
<g>
<title>CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*) (2 samples, 0.05%)</title><rect x="1164.5" y="1955.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.5" y="1966.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1165.1" y="1955.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1168.1" y="1966.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1165.1" y="1939.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1168.1" y="1950.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1165.1" y="1923.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.1" y="1934.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1165.1" y="1907.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1168.1" y="1918.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1165.1" y="1891.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1168.1" y="1902.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1165.1" y="1875.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.1" y="1886.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1165.1" y="1859.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1168.1" y="1870.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1165.1" y="1843.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.1" y="1854.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1165.1" y="1827.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1168.1" y="1838.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1165.3" y="1971.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1168.3" y="1982.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1165.3" y="1955.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1168.3" y="1966.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1165.3" y="1939.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1168.3" y="1950.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1165.3" y="1923.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1168.3" y="1934.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1165.3" y="1907.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1168.3" y="1918.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1165.3" y="1891.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1168.3" y="1902.0"></text>
</g>
<g>
<title>CodeBuffer::copy_relocations_to(unsigned char*, int, bool) const (1 samples, 0.02%)</title><rect x="1165.6" y="1987.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.6" y="1998.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1165.6" y="1971.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1168.6" y="1982.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1165.6" y="1955.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1168.6" y="1966.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1165.6" y="1939.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1168.6" y="1950.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1165.6" y="1923.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1168.6" y="1934.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1165.6" y="1907.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1168.6" y="1918.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1165.6" y="1891.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1168.6" y="1902.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1165.6" y="1875.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1168.6" y="1886.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1165.6" y="1859.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1168.6" y="1870.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1165.6" y="1843.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1168.6" y="1854.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (3 samples, 0.07%)</title><rect x="1165.9" y="1987.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.9" y="1998.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (2 samples, 0.05%)</title><rect x="1165.9" y="1971.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.9" y="1982.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::build_from(OopMapSet const*) (2 samples, 0.05%)</title><rect x="1165.9" y="1955.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.9" y="1966.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.02%)</title><rect x="1165.9" y="1939.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.9" y="1950.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1165.9" y="1923.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1168.9" y="1934.0"></text>
</g>
<g>
<title>ImmutableOopMapBuilder::fill(ImmutableOopMapSet*, int) (1 samples, 0.02%)</title><rect x="1166.2" y="1939.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.2" y="1950.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1166.5" y="1971.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1169.5" y="1982.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1166.5" y="1955.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1169.5" y="1966.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1166.5" y="1939.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1169.5" y="1950.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1166.5" y="1923.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1169.5" y="1934.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_nmethod(nmethod*) (1 samples, 0.02%)</title><rect x="1166.8" y="1987.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.8" y="1998.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.02%)</title><rect x="1166.8" y="1971.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.8" y="1982.0"></text>
</g>
<g>
<title>G1CodeRootSet::add(nmethod*) (1 samples, 0.02%)</title><rect x="1166.8" y="1955.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.8" y="1966.0"></text>
</g>
<g>
<title>G1CodeRootSetTable::add(nmethod*) (1 samples, 0.02%)</title><rect x="1166.8" y="1939.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.8" y="1950.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.02%)</title><rect x="1167.1" y="1987.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.1" y="1998.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.02%)</title><rect x="1167.1" y="1971.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.1" y="1982.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1167.3" y="2099.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1170.3" y="2110.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*) (2 samples, 0.05%)</title><rect x="1167.6" y="2099.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.6" y="2110.0"></text>
</g>
<g>
<title>ciObjectFactory::ciObjectFactory(Arena*, int) (1 samples, 0.02%)</title><rect x="1167.6" y="2083.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.6" y="2094.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.02%)</title><rect x="1167.9" y="2083.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.9" y="2094.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1167.9" y="2067.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.9" y="2078.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (7 samples, 0.17%)</title><rect x="1168.2" y="2099.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.2" y="2110.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (7 samples, 0.17%)</title><rect x="1168.2" y="2083.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.2" y="2094.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (7 samples, 0.17%)</title><rect x="1168.2" y="2067.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.2" y="2078.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (6 samples, 0.15%)</title><rect x="1168.2" y="2051.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.2" y="2062.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (6 samples, 0.15%)</title><rect x="1168.2" y="2035.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.2" y="2046.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (3 samples, 0.07%)</title><rect x="1168.2" y="2019.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.2" y="2030.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (2 samples, 0.05%)</title><rect x="1168.5" y="2003.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.5" y="2014.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (2 samples, 0.05%)</title><rect x="1168.5" y="1987.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.5" y="1998.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (3 samples, 0.07%)</title><rect x="1169.1" y="2019.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.1" y="2030.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1169.1" y="2003.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.1" y="2014.0"></text>
</g>
<g>
<title>GrowableArrayWithAllocator&lt;ciMetadata*, GrowableArray&lt;ciMetadata*&gt; &gt;::grow(int) (1 samples, 0.02%)</title><rect x="1169.1" y="1987.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.1" y="1998.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (2 samples, 0.05%)</title><rect x="1169.4" y="2003.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.4" y="2014.0"></text>
</g>
<g>
<title>syscall (2 samples, 0.05%)</title><rect x="1169.4" y="1987.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1172.4" y="1998.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1169.4" y="1971.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.4" y="1982.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1169.4" y="1955.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1172.4" y="1966.0"></text>
</g>
<g>
<title>__x64_sys_gettid (1 samples, 0.02%)</title><rect x="1169.6" y="1939.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.6" y="1950.0"></text>
</g>
<g>
<title>__task_pid_nr_ns (1 samples, 0.02%)</title><rect x="1169.6" y="1923.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1172.6" y="1934.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1169.9" y="2051.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.9" y="2062.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1169.9" y="2035.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.9" y="2046.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.02%)</title><rect x="1169.9" y="2019.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.9" y="2030.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1169.9" y="2003.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.9" y="2014.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (3 samples, 0.07%)</title><rect x="1170.2" y="2099.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.2" y="2110.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.02%)</title><rect x="1170.2" y="2083.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.2" y="2094.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (2 samples, 0.05%)</title><rect x="1170.5" y="2083.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.5" y="2094.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (2 samples, 0.05%)</title><rect x="1170.5" y="2067.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.5" y="2078.0"></text>
</g>
<g>
<title>elapsedTimer::start() (1 samples, 0.02%)</title><rect x="1171.1" y="2099.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.1" y="2110.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.02%)</title><rect x="1171.1" y="2083.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.1" y="2094.0"></text>
</g>
<g>
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1171.1" y="2067.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1174.1" y="2078.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.02%)</title><rect x="1171.4" y="2099.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.4" y="2110.0"></text>
</g>
<g>
<title>CompileQueue::get() (24 samples, 0.58%)</title><rect x="1171.6" y="2115.0" width="6.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.6" y="2126.0"></text>
</g>
<g>
<title>CompilationPolicy::select_task(CompileQueue*) (22 samples, 0.53%)</title><rect x="1171.6" y="2099.0" width="6.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.6" y="2110.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;594020ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 594020ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1175.7" y="2083.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.7" y="2094.0"></text>
</g>
<g>
<title>CompilationPolicy::is_method_profiled(methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="1175.9" y="2083.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.9" y="2094.0"></text>
</g>
<g>
<title>bool CompilerOracle::has_option_value&lt;double&gt;(methodHandle const&amp;, CompileCommand, double&amp;) (1 samples, 0.02%)</title><rect x="1175.9" y="2067.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.9" y="2078.0"></text>
</g>
<g>
<title>CompileTask::is_unloaded() const (5 samples, 0.12%)</title><rect x="1176.2" y="2083.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.2" y="2094.0"></text>
</g>
<g>
<title>JNIHandles::is_weak_global_handle(_jobject*) (5 samples, 0.12%)</title><rect x="1176.2" y="2067.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.2" y="2078.0"></text>
</g>
<g>
<title>Mutex::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="1176.2" y="2051.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.2" y="2062.0"></text>
</g>
<g>
<title>OopStorage::allocation_status(oopDesc* const*) const (2 samples, 0.05%)</title><rect x="1176.5" y="2051.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.5" y="2062.0"></text>
</g>
<g>
<title>_SafeFetchN_fault (2 samples, 0.05%)</title><rect x="1177.1" y="2051.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1180.1" y="2062.0"></text>
</g>
<g>
<title>bool CompilerOracle::has_option_value&lt;double&gt;(methodHandle const&amp;, CompileCommand, double&amp;) (1 samples, 0.02%)</title><rect x="1177.7" y="2083.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.7" y="2094.0"></text>
</g>
<g>
<title>Method::invocation_count() const (1 samples, 0.02%)</title><rect x="1178.0" y="2099.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.0" y="2110.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="1178.2" y="2099.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.2" y="2110.0"></text>
</g>
<g>
<title>ciEnv::cache_jvmti_state() (1 samples, 0.02%)</title><rect x="1178.5" y="2115.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.5" y="2126.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="1178.8" y="2115.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.8" y="2126.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads(JavaThread*) (1 samples, 0.02%)</title><rect x="1179.1" y="2131.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.1" y="2142.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (8 samples, 0.19%)</title><rect x="1179.4" y="2131.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.4" y="2142.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep() (8 samples, 0.19%)</title><rect x="1179.4" y="2115.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.4" y="2126.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (8 samples, 0.19%)</title><rect x="1179.4" y="2099.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.4" y="2110.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (8 samples, 0.19%)</title><rect x="1179.4" y="2083.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.4" y="2094.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches(bool) (7 samples, 0.17%)</title><rect x="1179.4" y="2067.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.4" y="2078.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="1179.7" y="2051.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.7" y="2062.0"></text>
</g>
<g>
<title>CompiledIC::CompiledIC(RelocIterator*) (1 samples, 0.02%)</title><rect x="1180.0" y="2051.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.0" y="2062.0"></text>
</g>
<g>
<title>nmethod::call_wrapper_at(unsigned char*) const (1 samples, 0.02%)</title><rect x="1180.0" y="2035.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.0" y="2046.0"></text>
</g>
<g>
<title>CompiledICLocker::CompiledICLocker(CompiledMethod*) (1 samples, 0.02%)</title><rect x="1180.3" y="2051.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.3" y="2062.0"></text>
</g>
<g>
<title>DefaultICProtectionBehaviour::lock(CompiledMethod*) (1 samples, 0.02%)</title><rect x="1180.3" y="2035.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.3" y="2046.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1180.3" y="2019.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1183.3" y="2030.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1180.5" y="2051.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1183.5" y="2062.0"></text>
</g>
<g>
<title>bool clean_if_nmethod_is_unloaded&lt;CompiledIC&gt;(CompiledIC*, unsigned char*, CompiledMethod*, bool) (1 samples, 0.02%)</title><rect x="1180.8" y="2051.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1183.8" y="2062.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1181.1" y="2051.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.1" y="2062.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_flush(nmethod*) (1 samples, 0.02%)</title><rect x="1181.4" y="2067.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.4" y="2078.0"></text>
</g>
<g>
<title>ResolvedMethodTable::has_work() (1 samples, 0.02%)</title><rect x="1181.7" y="2131.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.7" y="2142.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, JavaThread*) (25 samples, 0.61%)</title><rect x="1182.0" y="2131.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.0" y="2142.0"></text>
</g>
<g>
<title>CodeCache::remove(void const*, _jmethodID*) (1 samples, 0.02%)</title><rect x="1182.0" y="2115.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.0" y="2126.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (22 samples, 0.53%)</title><rect x="1182.3" y="2115.0" width="6.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.3" y="2126.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (20 samples, 0.49%)</title><rect x="1182.3" y="2099.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.3" y="2110.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1182.3" y="2083.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.3" y="2094.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, jvmtiAddrLocationMap**, int*) (5 samples, 0.12%)</title><rect x="1182.5" y="2083.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.5" y="2094.0"></text>
</g>
<g>
<title>ScopeDesc::ScopeDesc(CompiledMethod const*, PcDesc*, bool) (1 samples, 0.02%)</title><rect x="1182.5" y="2067.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.5" y="2078.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (4 samples, 0.10%)</title><rect x="1182.8" y="2067.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.8" y="2078.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (4 samples, 0.10%)</title><rect x="1182.8" y="2051.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.8" y="2062.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1183.4" y="2035.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1186.4" y="2046.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1183.7" y="2035.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.7" y="2046.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (13 samples, 0.32%)</title><rect x="1184.0" y="2083.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1187.0" y="2094.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1184.0" y="2067.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.0" y="2078.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1184.0" y="2051.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.0" y="2062.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.02%)</title><rect x="1184.0" y="2035.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1187.0" y="2046.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (2 samples, 0.05%)</title><rect x="1184.3" y="2067.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.3" y="2078.0"></text>
</g>
<g>
<title>__GI___pthread_getspecific (1 samples, 0.02%)</title><rect x="1184.3" y="2051.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1187.3" y="2062.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1184.6" y="2051.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="2062.0"></text>
</g>
<g>
<title>Method::jmethod_id() (5 samples, 0.12%)</title><rect x="1184.8" y="2067.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.8" y="2078.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (2 samples, 0.05%)</title><rect x="1185.7" y="2051.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.7" y="2062.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (4 samples, 0.10%)</title><rect x="1186.3" y="2067.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.3" y="2078.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (4 samples, 0.10%)</title><rect x="1186.3" y="2051.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.3" y="2062.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="1187.4" y="2067.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.4" y="2078.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1187.7" y="2083.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.7" y="2094.0"></text>
</g>
<g>
<title>Profiler::CompiledMethodLoad(_jvmtiEnv*, _jmethodID*, int, void const*, int, _jvmtiAddrLocationMap const*, void const*) (1 samples, 0.02%)</title><rect x="1188.0" y="2099.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="2110.0"></text>
</g>
<g>
<title>Profiler::addJavaMethod(void const*, int, _jmethodID*) (1 samples, 0.02%)</title><rect x="1188.3" y="2099.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.3" y="2110.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1188.6" y="2115.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1191.6" y="2126.0"></text>
</g>
<g>
<title>nmethod::is_unloading() (1 samples, 0.02%)</title><rect x="1188.9" y="2115.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.9" y="2126.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="1189.1" y="2131.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1192.1" y="2142.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1189.4" y="2115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1192.4" y="2126.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1189.4" y="2099.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1192.4" y="2110.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1189.4" y="2083.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1192.4" y="2094.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1189.4" y="2067.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1192.4" y="2078.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="2147.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.7" y="2158.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="1189.7" y="2131.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.7" y="2142.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="1189.7" y="2115.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.7" y="2126.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1189.7" y="2099.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.7" y="2110.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1189.7" y="2083.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.7" y="2094.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1189.7" y="2067.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.7" y="2078.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (1 samples, 0.02%)</title><rect x="1189.7" y="2051.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.7" y="2062.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo*, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="1189.7" y="2035.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.7" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_cleanup_2(PreservedMarksSet*, G1RedirtyCardsQueueSet*, G1EvacuationInfo*, unsigned long const*) (1 samples, 0.02%)</title><rect x="1189.7" y="2019.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.7" y="2030.0"></text>
</g>
<g>
<title>G1BatchedGangTask::~G1BatchedGangTask() (1 samples, 0.02%)</title><rect x="1189.7" y="2003.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.7" y="2014.0"></text>
</g>
<g>
<title>G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::~FreeCollectionSetTask() (1 samples, 0.02%)</title><rect x="1189.7" y="1987.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.7" y="1998.0"></text>
</g>
<g>
<title>G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::~FreeCollectionSetTask() (1 samples, 0.02%)</title><rect x="1189.7" y="1971.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.7" y="1982.0"></text>
</g>
<g>
<title>G1SurvRateGroup::finalize_predictions(G1Predictions const&amp;) (1 samples, 0.02%)</title><rect x="1189.7" y="1955.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.7" y="1966.0"></text>
</g>
</g>
</svg>
